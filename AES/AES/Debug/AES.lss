
AES.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000582c  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040582c  0040582c  0001582c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c8  20400000  00405834  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000138  204009c8  004061fc  000209c8  2**2
                  ALLOC
  4 .stack        00002000  20400b00  00406334  000209c8  2**0
                  ALLOC
  5 .heap         00000200  20402b00  00408334  000209c8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209c8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209f6  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001448d  00000000  00000000  00020a4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00002bf1  00000000  00000000  00034edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000449a  00000000  00000000  00037acd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000a40  00000000  00000000  0003bf67  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a88  00000000  00000000  0003c9a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00020a64  00000000  00000000  0003d42f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000b2d5  00000000  00000000  0005de93  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00093ce2  00000000  00000000  00069168  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002850  00000000  00000000  000fce4c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	00 2b 40 20 11 0d 40 00 0f 0d 40 00 0f 0d 40 00     .+@ ..@...@...@.
  400010:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	0f 0d 40 00 0f 0d 40 00 00 00 00 00 0f 0d 40 00     ..@...@.......@.
  40003c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  40004c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  40005c:	0f 0d 40 00 0f 0d 40 00 00 00 00 00 15 0a 40 00     ..@...@.......@.
  40006c:	29 0a 40 00 3d 0a 40 00 0f 0d 40 00 0f 0d 40 00     ).@.=.@...@...@.
  40007c:	0f 0d 40 00 51 0a 40 00 65 0a 40 00 0f 0d 40 00     ..@.Q.@.e.@...@.
  40008c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  40009c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  4000ac:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  4000bc:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  4000cc:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  4000dc:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  4000ec:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  4000fc:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  40010c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 00 00 00 00     ..@...@...@.....
  40011c:	00 00 00 00 6d 09 40 00 0f 0d 40 00 0f 0d 40 00     ....m.@...@...@.
  40012c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  40013c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  40014c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00 0f 0d 40 00     ..@...@...@...@.
  40015c:	0f 0d 40 00 0f 0d 40 00 0f 0d 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009c8 	.word	0x204009c8
  400184:	00000000 	.word	0x00000000
  400188:	00405834 	.word	0x00405834

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	00405834 	.word	0x00405834
  4001c8:	204009cc 	.word	0x204009cc
  4001cc:	00405834 	.word	0x00405834
  4001d0:	00000000 	.word	0x00000000

004001d4 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  4001d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4001d6:	b083      	sub	sp, #12
  4001d8:	4605      	mov	r5, r0
  4001da:	460c      	mov	r4, r1
	uint32_t val = 0;
  4001dc:	2300      	movs	r3, #0
  4001de:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4001e0:	4b2a      	ldr	r3, [pc, #168]	; (40028c <usart_serial_getchar+0xb8>)
  4001e2:	4298      	cmp	r0, r3
  4001e4:	d013      	beq.n	40020e <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4001e6:	4b2a      	ldr	r3, [pc, #168]	; (400290 <usart_serial_getchar+0xbc>)
  4001e8:	4298      	cmp	r0, r3
  4001ea:	d018      	beq.n	40021e <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  4001ec:	4b29      	ldr	r3, [pc, #164]	; (400294 <usart_serial_getchar+0xc0>)
  4001ee:	4298      	cmp	r0, r3
  4001f0:	d01d      	beq.n	40022e <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  4001f2:	4b29      	ldr	r3, [pc, #164]	; (400298 <usart_serial_getchar+0xc4>)
  4001f4:	429d      	cmp	r5, r3
  4001f6:	d022      	beq.n	40023e <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  4001f8:	4b28      	ldr	r3, [pc, #160]	; (40029c <usart_serial_getchar+0xc8>)
  4001fa:	429d      	cmp	r5, r3
  4001fc:	d027      	beq.n	40024e <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4001fe:	4b28      	ldr	r3, [pc, #160]	; (4002a0 <usart_serial_getchar+0xcc>)
  400200:	429d      	cmp	r5, r3
  400202:	d02e      	beq.n	400262 <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  400204:	4b27      	ldr	r3, [pc, #156]	; (4002a4 <usart_serial_getchar+0xd0>)
  400206:	429d      	cmp	r5, r3
  400208:	d035      	beq.n	400276 <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  40020a:	b003      	add	sp, #12
  40020c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  40020e:	461f      	mov	r7, r3
  400210:	4e25      	ldr	r6, [pc, #148]	; (4002a8 <usart_serial_getchar+0xd4>)
  400212:	4621      	mov	r1, r4
  400214:	4638      	mov	r0, r7
  400216:	47b0      	blx	r6
  400218:	2800      	cmp	r0, #0
  40021a:	d1fa      	bne.n	400212 <usart_serial_getchar+0x3e>
  40021c:	e7e9      	b.n	4001f2 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  40021e:	461f      	mov	r7, r3
  400220:	4e21      	ldr	r6, [pc, #132]	; (4002a8 <usart_serial_getchar+0xd4>)
  400222:	4621      	mov	r1, r4
  400224:	4638      	mov	r0, r7
  400226:	47b0      	blx	r6
  400228:	2800      	cmp	r0, #0
  40022a:	d1fa      	bne.n	400222 <usart_serial_getchar+0x4e>
  40022c:	e7e4      	b.n	4001f8 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  40022e:	461f      	mov	r7, r3
  400230:	4e1d      	ldr	r6, [pc, #116]	; (4002a8 <usart_serial_getchar+0xd4>)
  400232:	4621      	mov	r1, r4
  400234:	4638      	mov	r0, r7
  400236:	47b0      	blx	r6
  400238:	2800      	cmp	r0, #0
  40023a:	d1fa      	bne.n	400232 <usart_serial_getchar+0x5e>
  40023c:	e7df      	b.n	4001fe <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  40023e:	461f      	mov	r7, r3
  400240:	4e19      	ldr	r6, [pc, #100]	; (4002a8 <usart_serial_getchar+0xd4>)
  400242:	4621      	mov	r1, r4
  400244:	4638      	mov	r0, r7
  400246:	47b0      	blx	r6
  400248:	2800      	cmp	r0, #0
  40024a:	d1fa      	bne.n	400242 <usart_serial_getchar+0x6e>
  40024c:	e7da      	b.n	400204 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  40024e:	461e      	mov	r6, r3
  400250:	4d16      	ldr	r5, [pc, #88]	; (4002ac <usart_serial_getchar+0xd8>)
  400252:	a901      	add	r1, sp, #4
  400254:	4630      	mov	r0, r6
  400256:	47a8      	blx	r5
  400258:	2800      	cmp	r0, #0
  40025a:	d1fa      	bne.n	400252 <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  40025c:	9b01      	ldr	r3, [sp, #4]
  40025e:	7023      	strb	r3, [r4, #0]
  400260:	e7d3      	b.n	40020a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400262:	461e      	mov	r6, r3
  400264:	4d11      	ldr	r5, [pc, #68]	; (4002ac <usart_serial_getchar+0xd8>)
  400266:	a901      	add	r1, sp, #4
  400268:	4630      	mov	r0, r6
  40026a:	47a8      	blx	r5
  40026c:	2800      	cmp	r0, #0
  40026e:	d1fa      	bne.n	400266 <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  400270:	9b01      	ldr	r3, [sp, #4]
  400272:	7023      	strb	r3, [r4, #0]
  400274:	e7c9      	b.n	40020a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  400276:	461e      	mov	r6, r3
  400278:	4d0c      	ldr	r5, [pc, #48]	; (4002ac <usart_serial_getchar+0xd8>)
  40027a:	a901      	add	r1, sp, #4
  40027c:	4630      	mov	r0, r6
  40027e:	47a8      	blx	r5
  400280:	2800      	cmp	r0, #0
  400282:	d1fa      	bne.n	40027a <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  400284:	9b01      	ldr	r3, [sp, #4]
  400286:	7023      	strb	r3, [r4, #0]
}
  400288:	e7bf      	b.n	40020a <usart_serial_getchar+0x36>
  40028a:	bf00      	nop
  40028c:	400e0800 	.word	0x400e0800
  400290:	400e0a00 	.word	0x400e0a00
  400294:	400e1a00 	.word	0x400e1a00
  400298:	400e1c00 	.word	0x400e1c00
  40029c:	40024000 	.word	0x40024000
  4002a0:	40028000 	.word	0x40028000
  4002a4:	4002c000 	.word	0x4002c000
  4002a8:	00400beb 	.word	0x00400beb
  4002ac:	00400cf7 	.word	0x00400cf7

004002b0 <usart_serial_putchar>:
{
  4002b0:	b570      	push	{r4, r5, r6, lr}
  4002b2:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  4002b4:	4b2a      	ldr	r3, [pc, #168]	; (400360 <usart_serial_putchar+0xb0>)
  4002b6:	4298      	cmp	r0, r3
  4002b8:	d013      	beq.n	4002e2 <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  4002ba:	4b2a      	ldr	r3, [pc, #168]	; (400364 <usart_serial_putchar+0xb4>)
  4002bc:	4298      	cmp	r0, r3
  4002be:	d019      	beq.n	4002f4 <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  4002c0:	4b29      	ldr	r3, [pc, #164]	; (400368 <usart_serial_putchar+0xb8>)
  4002c2:	4298      	cmp	r0, r3
  4002c4:	d01f      	beq.n	400306 <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  4002c6:	4b29      	ldr	r3, [pc, #164]	; (40036c <usart_serial_putchar+0xbc>)
  4002c8:	4298      	cmp	r0, r3
  4002ca:	d025      	beq.n	400318 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  4002cc:	4b28      	ldr	r3, [pc, #160]	; (400370 <usart_serial_putchar+0xc0>)
  4002ce:	4298      	cmp	r0, r3
  4002d0:	d02b      	beq.n	40032a <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  4002d2:	4b28      	ldr	r3, [pc, #160]	; (400374 <usart_serial_putchar+0xc4>)
  4002d4:	4298      	cmp	r0, r3
  4002d6:	d031      	beq.n	40033c <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  4002d8:	4b27      	ldr	r3, [pc, #156]	; (400378 <usart_serial_putchar+0xc8>)
  4002da:	4298      	cmp	r0, r3
  4002dc:	d037      	beq.n	40034e <usart_serial_putchar+0x9e>
	return 0;
  4002de:	2000      	movs	r0, #0
}
  4002e0:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4002e2:	461e      	mov	r6, r3
  4002e4:	4d25      	ldr	r5, [pc, #148]	; (40037c <usart_serial_putchar+0xcc>)
  4002e6:	4621      	mov	r1, r4
  4002e8:	4630      	mov	r0, r6
  4002ea:	47a8      	blx	r5
  4002ec:	2800      	cmp	r0, #0
  4002ee:	d1fa      	bne.n	4002e6 <usart_serial_putchar+0x36>
		return 1;
  4002f0:	2001      	movs	r0, #1
  4002f2:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4002f4:	461e      	mov	r6, r3
  4002f6:	4d21      	ldr	r5, [pc, #132]	; (40037c <usart_serial_putchar+0xcc>)
  4002f8:	4621      	mov	r1, r4
  4002fa:	4630      	mov	r0, r6
  4002fc:	47a8      	blx	r5
  4002fe:	2800      	cmp	r0, #0
  400300:	d1fa      	bne.n	4002f8 <usart_serial_putchar+0x48>
		return 1;
  400302:	2001      	movs	r0, #1
  400304:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400306:	461e      	mov	r6, r3
  400308:	4d1c      	ldr	r5, [pc, #112]	; (40037c <usart_serial_putchar+0xcc>)
  40030a:	4621      	mov	r1, r4
  40030c:	4630      	mov	r0, r6
  40030e:	47a8      	blx	r5
  400310:	2800      	cmp	r0, #0
  400312:	d1fa      	bne.n	40030a <usart_serial_putchar+0x5a>
		return 1;
  400314:	2001      	movs	r0, #1
  400316:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400318:	461e      	mov	r6, r3
  40031a:	4d18      	ldr	r5, [pc, #96]	; (40037c <usart_serial_putchar+0xcc>)
  40031c:	4621      	mov	r1, r4
  40031e:	4630      	mov	r0, r6
  400320:	47a8      	blx	r5
  400322:	2800      	cmp	r0, #0
  400324:	d1fa      	bne.n	40031c <usart_serial_putchar+0x6c>
		return 1;
  400326:	2001      	movs	r0, #1
  400328:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40032a:	461e      	mov	r6, r3
  40032c:	4d14      	ldr	r5, [pc, #80]	; (400380 <usart_serial_putchar+0xd0>)
  40032e:	4621      	mov	r1, r4
  400330:	4630      	mov	r0, r6
  400332:	47a8      	blx	r5
  400334:	2800      	cmp	r0, #0
  400336:	d1fa      	bne.n	40032e <usart_serial_putchar+0x7e>
		return 1;
  400338:	2001      	movs	r0, #1
  40033a:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40033c:	461e      	mov	r6, r3
  40033e:	4d10      	ldr	r5, [pc, #64]	; (400380 <usart_serial_putchar+0xd0>)
  400340:	4621      	mov	r1, r4
  400342:	4630      	mov	r0, r6
  400344:	47a8      	blx	r5
  400346:	2800      	cmp	r0, #0
  400348:	d1fa      	bne.n	400340 <usart_serial_putchar+0x90>
		return 1;
  40034a:	2001      	movs	r0, #1
  40034c:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40034e:	461e      	mov	r6, r3
  400350:	4d0b      	ldr	r5, [pc, #44]	; (400380 <usart_serial_putchar+0xd0>)
  400352:	4621      	mov	r1, r4
  400354:	4630      	mov	r0, r6
  400356:	47a8      	blx	r5
  400358:	2800      	cmp	r0, #0
  40035a:	d1fa      	bne.n	400352 <usart_serial_putchar+0xa2>
		return 1;
  40035c:	2001      	movs	r0, #1
  40035e:	bd70      	pop	{r4, r5, r6, pc}
  400360:	400e0800 	.word	0x400e0800
  400364:	400e0a00 	.word	0x400e0a00
  400368:	400e1a00 	.word	0x400e1a00
  40036c:	400e1c00 	.word	0x400e1c00
  400370:	40024000 	.word	0x40024000
  400374:	40028000 	.word	0x40028000
  400378:	4002c000 	.word	0x4002c000
  40037c:	00400bd9 	.word	0x00400bd9
  400380:	00400ce1 	.word	0x00400ce1

00400384 <configure_usart>:
		// Decrypt data
		decrypt_data();
		printf("Decrypted text: %s\n", (char*)decrypted_data);
	}
}
void configure_usart(void) {
  400384:	b570      	push	{r4, r5, r6, lr}
  400386:	b086      	sub	sp, #24
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  400388:	4d16      	ldr	r5, [pc, #88]	; (4003e4 <configure_usart+0x60>)
  40038a:	4b17      	ldr	r3, [pc, #92]	; (4003e8 <configure_usart+0x64>)
  40038c:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  40038e:	4a17      	ldr	r2, [pc, #92]	; (4003ec <configure_usart+0x68>)
  400390:	4b17      	ldr	r3, [pc, #92]	; (4003f0 <configure_usart+0x6c>)
  400392:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400394:	4a17      	ldr	r2, [pc, #92]	; (4003f4 <configure_usart+0x70>)
  400396:	4b18      	ldr	r3, [pc, #96]	; (4003f8 <configure_usart+0x74>)
  400398:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  40039a:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  40039e:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
  4003a0:	23c0      	movs	r3, #192	; 0xc0
  4003a2:	9301      	str	r3, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
  4003a4:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4003a8:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
  4003aa:	2400      	movs	r4, #0
  4003ac:	9403      	str	r4, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  4003ae:	9404      	str	r4, [sp, #16]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4003b0:	200e      	movs	r0, #14
  4003b2:	4b12      	ldr	r3, [pc, #72]	; (4003fc <configure_usart+0x78>)
  4003b4:	4798      	blx	r3
		usart_init_rs232(p_usart, &usart_settings,
  4003b6:	4a12      	ldr	r2, [pc, #72]	; (400400 <configure_usart+0x7c>)
  4003b8:	4669      	mov	r1, sp
  4003ba:	4628      	mov	r0, r5
  4003bc:	4b11      	ldr	r3, [pc, #68]	; (400404 <configure_usart+0x80>)
  4003be:	4798      	blx	r3
		usart_enable_tx(p_usart);
  4003c0:	4628      	mov	r0, r5
  4003c2:	4b11      	ldr	r3, [pc, #68]	; (400408 <configure_usart+0x84>)
  4003c4:	4798      	blx	r3
		usart_enable_rx(p_usart);
  4003c6:	4628      	mov	r0, r5
  4003c8:	4b10      	ldr	r3, [pc, #64]	; (40040c <configure_usart+0x88>)
  4003ca:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  4003cc:	4e10      	ldr	r6, [pc, #64]	; (400410 <configure_usart+0x8c>)
  4003ce:	6833      	ldr	r3, [r6, #0]
  4003d0:	4621      	mov	r1, r4
  4003d2:	6898      	ldr	r0, [r3, #8]
  4003d4:	4d0f      	ldr	r5, [pc, #60]	; (400414 <configure_usart+0x90>)
  4003d6:	47a8      	blx	r5
	setbuf(stdin, NULL);
  4003d8:	6833      	ldr	r3, [r6, #0]
  4003da:	4621      	mov	r1, r4
  4003dc:	6858      	ldr	r0, [r3, #4]
  4003de:	47a8      	blx	r5
		.charlength = US_MR_CHRL_8_BIT,
		.paritytype = US_MR_PAR_NO,
		.stopbits = US_MR_NBSTOP_1_BIT
	};
	stdio_serial_init(CONF_UART, &usart_options);
}
  4003e0:	b006      	add	sp, #24
  4003e2:	bd70      	pop	{r4, r5, r6, pc}
  4003e4:	40028000 	.word	0x40028000
  4003e8:	20400ac8 	.word	0x20400ac8
  4003ec:	004002b1 	.word	0x004002b1
  4003f0:	20400ac4 	.word	0x20400ac4
  4003f4:	004001d5 	.word	0x004001d5
  4003f8:	20400ac0 	.word	0x20400ac0
  4003fc:	00400b99 	.word	0x00400b99
  400400:	08f0d180 	.word	0x08f0d180
  400404:	00400c81 	.word	0x00400c81
  400408:	00400cd5 	.word	0x00400cd5
  40040c:	00400cdb 	.word	0x00400cdb
  400410:	20400018 	.word	0x20400018
  400414:	004010fd 	.word	0x004010fd

00400418 <configure_aes>:
void configure_aes(void) {
  400418:	b510      	push	{r4, lr}
  40041a:	b084      	sub	sp, #16
	struct aes_config aes_cfg;
	aes_get_config_defaults(&aes_cfg);
  40041c:	a801      	add	r0, sp, #4
  40041e:	4b0b      	ldr	r3, [pc, #44]	; (40044c <configure_aes+0x34>)
  400420:	4798      	blx	r3
	aes_cfg.encrypt_mode = AES_ENCRYPTION;
  400422:	2301      	movs	r3, #1
  400424:	f88d 3004 	strb.w	r3, [sp, #4]
	aes_cfg.key_size = AES_KEY_SIZE_128;
  400428:	2300      	movs	r3, #0
  40042a:	f88d 3005 	strb.w	r3, [sp, #5]
	aes_cfg.opmode = AES_ECB_MODE;
  40042e:	f88d 3007 	strb.w	r3, [sp, #7]
	aes_cfg.start_mode = AES_MANUAL_START;
  400432:	f88d 3006 	strb.w	r3, [sp, #6]
	aes_init(AES, &aes_cfg);
  400436:	4c06      	ldr	r4, [pc, #24]	; (400450 <configure_aes+0x38>)
  400438:	a901      	add	r1, sp, #4
  40043a:	4620      	mov	r0, r4
  40043c:	4b05      	ldr	r3, [pc, #20]	; (400454 <configure_aes+0x3c>)
  40043e:	4798      	blx	r3
	aes_write_key(AES, aes_key);
  400440:	4905      	ldr	r1, [pc, #20]	; (400458 <configure_aes+0x40>)
  400442:	4620      	mov	r0, r4
  400444:	4b05      	ldr	r3, [pc, #20]	; (40045c <configure_aes+0x44>)
  400446:	4798      	blx	r3
}
  400448:	b004      	add	sp, #16
  40044a:	bd10      	pop	{r4, pc}
  40044c:	00400869 	.word	0x00400869
  400450:	4006c000 	.word	0x4006c000
  400454:	004008d5 	.word	0x004008d5
  400458:	20400000 	.word	0x20400000
  40045c:	00400905 	.word	0x00400905

00400460 <encrypt_data>:
void encrypt_data(void) {
  400460:	b510      	push	{r4, lr}
	aes_write_input_data(AES, (uint32_t*)input_data);
  400462:	4c06      	ldr	r4, [pc, #24]	; (40047c <encrypt_data+0x1c>)
  400464:	4906      	ldr	r1, [pc, #24]	; (400480 <encrypt_data+0x20>)
  400466:	4620      	mov	r0, r4
  400468:	4b06      	ldr	r3, [pc, #24]	; (400484 <encrypt_data+0x24>)
  40046a:	4798      	blx	r3
 *
 * \param[out] p_aes Module hardware register base address pointer
 */
static inline void aes_start(Aes *const p_aes)
{
	p_aes->AES_CR = AES_CR_START;
  40046c:	2301      	movs	r3, #1
  40046e:	6023      	str	r3, [r4, #0]
	aes_start(AES);
	aes_read_output_data(AES, (uint32_t*)encrypted_data);
  400470:	4905      	ldr	r1, [pc, #20]	; (400488 <encrypt_data+0x28>)
  400472:	4620      	mov	r0, r4
  400474:	4b05      	ldr	r3, [pc, #20]	; (40048c <encrypt_data+0x2c>)
  400476:	4798      	blx	r3
  400478:	bd10      	pop	{r4, pc}
  40047a:	bf00      	nop
  40047c:	4006c000 	.word	0x4006c000
  400480:	20400a04 	.word	0x20400a04
  400484:	00400939 	.word	0x00400939
  400488:	204009f4 	.word	0x204009f4
  40048c:	00400955 	.word	0x00400955

00400490 <decrypt_data>:
}
void decrypt_data(void) {
  400490:	b510      	push	{r4, lr}
	aes_write_input_data(AES, (uint32_t*)encrypted_data);
  400492:	4c06      	ldr	r4, [pc, #24]	; (4004ac <decrypt_data+0x1c>)
  400494:	4906      	ldr	r1, [pc, #24]	; (4004b0 <decrypt_data+0x20>)
  400496:	4620      	mov	r0, r4
  400498:	4b06      	ldr	r3, [pc, #24]	; (4004b4 <decrypt_data+0x24>)
  40049a:	4798      	blx	r3
  40049c:	2301      	movs	r3, #1
  40049e:	6023      	str	r3, [r4, #0]
	aes_start(AES);
	aes_read_output_data(AES, (uint32_t*)decrypted_data);
  4004a0:	4905      	ldr	r1, [pc, #20]	; (4004b8 <decrypt_data+0x28>)
  4004a2:	4620      	mov	r0, r4
  4004a4:	4b05      	ldr	r3, [pc, #20]	; (4004bc <decrypt_data+0x2c>)
  4004a6:	4798      	blx	r3
  4004a8:	bd10      	pop	{r4, pc}
  4004aa:	bf00      	nop
  4004ac:	4006c000 	.word	0x4006c000
  4004b0:	204009f4 	.word	0x204009f4
  4004b4:	00400939 	.word	0x00400939
  4004b8:	204009e4 	.word	0x204009e4
  4004bc:	00400955 	.word	0x00400955

004004c0 <print_hex>:
}
void print_hex(const uint8_t *data, size_t length) {
	for (size_t i = 0; i < length; i++) {
  4004c0:	b331      	cbz	r1, 400510 <print_hex+0x50>
void print_hex(const uint8_t *data, size_t length) {
  4004c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4004c6:	4688      	mov	r8, r1
  4004c8:	4604      	mov	r4, r0
  4004ca:	4681      	mov	r9, r0
  4004cc:	1847      	adds	r7, r0, r1
		printf("%02x", data[i]);
  4004ce:	4e11      	ldr	r6, [pc, #68]	; (400514 <print_hex+0x54>)
  4004d0:	4d11      	ldr	r5, [pc, #68]	; (400518 <print_hex+0x58>)
		if ((i + 1) % 16 == 0) { // Print a new line after every 16 bytes
			printf("\n");
			} else if ((i + 1) % 4 == 0) { // Print a space every 4 bytes
			printf(" ");
  4004d2:	f8df a04c 	ldr.w	sl, [pc, #76]	; 400520 <print_hex+0x60>
  4004d6:	e003      	b.n	4004e0 <print_hex+0x20>
			printf("\n");
  4004d8:	4810      	ldr	r0, [pc, #64]	; (40051c <print_hex+0x5c>)
  4004da:	47a8      	blx	r5
	for (size_t i = 0; i < length; i++) {
  4004dc:	42bc      	cmp	r4, r7
  4004de:	d00e      	beq.n	4004fe <print_hex+0x3e>
		printf("%02x", data[i]);
  4004e0:	f814 1b01 	ldrb.w	r1, [r4], #1
  4004e4:	4630      	mov	r0, r6
  4004e6:	47a8      	blx	r5
  4004e8:	eba4 0309 	sub.w	r3, r4, r9
		if ((i + 1) % 16 == 0) { // Print a new line after every 16 bytes
  4004ec:	f013 0f0f 	tst.w	r3, #15
  4004f0:	d0f2      	beq.n	4004d8 <print_hex+0x18>
			} else if ((i + 1) % 4 == 0) { // Print a space every 4 bytes
  4004f2:	f013 0f03 	tst.w	r3, #3
  4004f6:	d1f1      	bne.n	4004dc <print_hex+0x1c>
			printf(" ");
  4004f8:	4650      	mov	r0, sl
  4004fa:	47a8      	blx	r5
  4004fc:	e7ee      	b.n	4004dc <print_hex+0x1c>
		}
	}
	if (length % 16 != 0) { // Ensure a new line at the end if not already added
  4004fe:	f018 0f0f 	tst.w	r8, #15
  400502:	d101      	bne.n	400508 <print_hex+0x48>
  400504:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		printf("\n");
  400508:	4804      	ldr	r0, [pc, #16]	; (40051c <print_hex+0x5c>)
  40050a:	4b03      	ldr	r3, [pc, #12]	; (400518 <print_hex+0x58>)
  40050c:	4798      	blx	r3
	}
  40050e:	e7f9      	b.n	400504 <print_hex+0x44>
  400510:	4770      	bx	lr
  400512:	bf00      	nop
  400514:	0040566c 	.word	0x0040566c
  400518:	00401011 	.word	0x00401011
  40051c:	00405674 	.word	0x00405674
  400520:	00405678 	.word	0x00405678

00400524 <main>:
int main(void) {
  400524:	b570      	push	{r4, r5, r6, lr}
	sysclk_init();
  400526:	4b17      	ldr	r3, [pc, #92]	; (400584 <main+0x60>)
  400528:	4798      	blx	r3
	board_init();
  40052a:	4b17      	ldr	r3, [pc, #92]	; (400588 <main+0x64>)
  40052c:	4798      	blx	r3
	configure_usart();
  40052e:	4b17      	ldr	r3, [pc, #92]	; (40058c <main+0x68>)
  400530:	4798      	blx	r3
	configure_aes();
  400532:	4b17      	ldr	r3, [pc, #92]	; (400590 <main+0x6c>)
  400534:	4798      	blx	r3
		printf("Enter text to encrypt (16 characters max): ");
  400536:	4e17      	ldr	r6, [pc, #92]	; (400594 <main+0x70>)
  400538:	4c17      	ldr	r4, [pc, #92]	; (400598 <main+0x74>)
		scanf("%16s", (char*)input_data);
  40053a:	4d18      	ldr	r5, [pc, #96]	; (40059c <main+0x78>)
  40053c:	e00c      	b.n	400558 <main+0x34>
		encrypt_data();
  40053e:	4b18      	ldr	r3, [pc, #96]	; (4005a0 <main+0x7c>)
  400540:	4798      	blx	r3
		printf("Encrypted data:\n");
  400542:	4818      	ldr	r0, [pc, #96]	; (4005a4 <main+0x80>)
  400544:	47a0      	blx	r4
		print_hex(encrypted_data, AES_BLOCK_SIZE);
  400546:	2110      	movs	r1, #16
  400548:	4817      	ldr	r0, [pc, #92]	; (4005a8 <main+0x84>)
  40054a:	4b18      	ldr	r3, [pc, #96]	; (4005ac <main+0x88>)
  40054c:	4798      	blx	r3
		decrypt_data();
  40054e:	4b18      	ldr	r3, [pc, #96]	; (4005b0 <main+0x8c>)
  400550:	4798      	blx	r3
		printf("Decrypted text: %s\n", (char*)decrypted_data);
  400552:	4918      	ldr	r1, [pc, #96]	; (4005b4 <main+0x90>)
  400554:	4818      	ldr	r0, [pc, #96]	; (4005b8 <main+0x94>)
  400556:	47a0      	blx	r4
		printf("Enter text to encrypt (16 characters max): ");
  400558:	4630      	mov	r0, r6
  40055a:	47a0      	blx	r4
		scanf("%16s", (char*)input_data);
  40055c:	4629      	mov	r1, r5
  40055e:	4817      	ldr	r0, [pc, #92]	; (4005bc <main+0x98>)
  400560:	4b17      	ldr	r3, [pc, #92]	; (4005c0 <main+0x9c>)
  400562:	4798      	blx	r3
		printf("You entered: %s\n", (char*)input_data);
  400564:	4629      	mov	r1, r5
  400566:	4817      	ldr	r0, [pc, #92]	; (4005c4 <main+0xa0>)
  400568:	47a0      	blx	r4
		size_t len = strlen((char*)input_data);
  40056a:	4628      	mov	r0, r5
  40056c:	4b16      	ldr	r3, [pc, #88]	; (4005c8 <main+0xa4>)
  40056e:	4798      	blx	r3
		if (len < AES_BLOCK_SIZE) {
  400570:	280f      	cmp	r0, #15
  400572:	d8e4      	bhi.n	40053e <main+0x1a>
			memset(input_data + len, 0, AES_BLOCK_SIZE - len);
  400574:	f1c0 0210 	rsb	r2, r0, #16
  400578:	2100      	movs	r1, #0
  40057a:	4428      	add	r0, r5
  40057c:	4b13      	ldr	r3, [pc, #76]	; (4005cc <main+0xa8>)
  40057e:	4798      	blx	r3
  400580:	e7dd      	b.n	40053e <main+0x1a>
  400582:	bf00      	nop
  400584:	004005d1 	.word	0x004005d1
  400588:	004006cd 	.word	0x004006cd
  40058c:	00400385 	.word	0x00400385
  400590:	00400419 	.word	0x00400419
  400594:	004055fc 	.word	0x004055fc
  400598:	00401011 	.word	0x00401011
  40059c:	20400a04 	.word	0x20400a04
  4005a0:	00400461 	.word	0x00400461
  4005a4:	00405644 	.word	0x00405644
  4005a8:	204009f4 	.word	0x204009f4
  4005ac:	004004c1 	.word	0x004004c1
  4005b0:	00400491 	.word	0x00400491
  4005b4:	204009e4 	.word	0x204009e4
  4005b8:	00405658 	.word	0x00405658
  4005bc:	00405628 	.word	0x00405628
  4005c0:	00401039 	.word	0x00401039
  4005c4:	00405630 	.word	0x00405630
  4005c8:	004012c1 	.word	0x004012c1
  4005cc:	00401061 	.word	0x00401061

004005d0 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4005d0:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX/2);
  4005d2:	4810      	ldr	r0, [pc, #64]	; (400614 <sysclk_init+0x44>)
  4005d4:	4b10      	ldr	r3, [pc, #64]	; (400618 <sysclk_init+0x48>)
  4005d6:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  4005d8:	213e      	movs	r1, #62	; 0x3e
  4005da:	2000      	movs	r0, #0
  4005dc:	4b0f      	ldr	r3, [pc, #60]	; (40061c <sysclk_init+0x4c>)
  4005de:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4005e0:	4c0f      	ldr	r4, [pc, #60]	; (400620 <sysclk_init+0x50>)
  4005e2:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4005e4:	2800      	cmp	r0, #0
  4005e6:	d0fc      	beq.n	4005e2 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4005e8:	4b0e      	ldr	r3, [pc, #56]	; (400624 <sysclk_init+0x54>)
  4005ea:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4005ec:	4a0e      	ldr	r2, [pc, #56]	; (400628 <sysclk_init+0x58>)
  4005ee:	4b0f      	ldr	r3, [pc, #60]	; (40062c <sysclk_init+0x5c>)
  4005f0:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4005f2:	4c0f      	ldr	r4, [pc, #60]	; (400630 <sysclk_init+0x60>)
  4005f4:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4005f6:	2800      	cmp	r0, #0
  4005f8:	d0fc      	beq.n	4005f4 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4005fa:	2002      	movs	r0, #2
  4005fc:	4b0d      	ldr	r3, [pc, #52]	; (400634 <sysclk_init+0x64>)
  4005fe:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400600:	2000      	movs	r0, #0
  400602:	4b0d      	ldr	r3, [pc, #52]	; (400638 <sysclk_init+0x68>)
  400604:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400606:	4b0d      	ldr	r3, [pc, #52]	; (40063c <sysclk_init+0x6c>)
  400608:	4798      	blx	r3

	/* Set a flash wait state depending on the master clock frequency */
	system_init_flash(sysclk_get_cpu_hz() / CONFIG_SYSCLK_DIV);
  40060a:	4802      	ldr	r0, [pc, #8]	; (400614 <sysclk_init+0x44>)
  40060c:	4b02      	ldr	r3, [pc, #8]	; (400618 <sysclk_init+0x48>)
  40060e:	4798      	blx	r3
  400610:	bd10      	pop	{r4, pc}
  400612:	bf00      	nop
  400614:	08f0d180 	.word	0x08f0d180
  400618:	00400ee5 	.word	0x00400ee5
  40061c:	00400b15 	.word	0x00400b15
  400620:	00400b69 	.word	0x00400b69
  400624:	00400b79 	.word	0x00400b79
  400628:	20183f01 	.word	0x20183f01
  40062c:	400e0600 	.word	0x400e0600
  400630:	00400b89 	.word	0x00400b89
  400634:	00400a79 	.word	0x00400a79
  400638:	00400ab1 	.word	0x00400ab1
  40063c:	00400dd9 	.word	0x00400dd9

00400640 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400644:	b980      	cbnz	r0, 400668 <_read+0x28>
  400646:	460c      	mov	r4, r1
  400648:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40064a:	2a00      	cmp	r2, #0
  40064c:	dd0f      	ble.n	40066e <_read+0x2e>
  40064e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400650:	4e08      	ldr	r6, [pc, #32]	; (400674 <_read+0x34>)
  400652:	4d09      	ldr	r5, [pc, #36]	; (400678 <_read+0x38>)
  400654:	6830      	ldr	r0, [r6, #0]
  400656:	4621      	mov	r1, r4
  400658:	682b      	ldr	r3, [r5, #0]
  40065a:	4798      	blx	r3
		ptr++;
  40065c:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  40065e:	42bc      	cmp	r4, r7
  400660:	d1f8      	bne.n	400654 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400662:	4640      	mov	r0, r8
  400664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400668:	f04f 38ff 	mov.w	r8, #4294967295
  40066c:	e7f9      	b.n	400662 <_read+0x22>
	for (; len > 0; --len) {
  40066e:	4680      	mov	r8, r0
  400670:	e7f7      	b.n	400662 <_read+0x22>
  400672:	bf00      	nop
  400674:	20400ac8 	.word	0x20400ac8
  400678:	20400ac0 	.word	0x20400ac0

0040067c <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  40067c:	3801      	subs	r0, #1
  40067e:	2802      	cmp	r0, #2
  400680:	d815      	bhi.n	4006ae <_write+0x32>
{
  400682:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400686:	460e      	mov	r6, r1
  400688:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  40068a:	b19a      	cbz	r2, 4006b4 <_write+0x38>
  40068c:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  40068e:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4006c8 <_write+0x4c>
  400692:	4f0c      	ldr	r7, [pc, #48]	; (4006c4 <_write+0x48>)
  400694:	f8d8 0000 	ldr.w	r0, [r8]
  400698:	f815 1b01 	ldrb.w	r1, [r5], #1
  40069c:	683b      	ldr	r3, [r7, #0]
  40069e:	4798      	blx	r3
  4006a0:	2800      	cmp	r0, #0
  4006a2:	db0a      	blt.n	4006ba <_write+0x3e>
  4006a4:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  4006a6:	3c01      	subs	r4, #1
  4006a8:	d1f4      	bne.n	400694 <_write+0x18>
  4006aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4006ae:	f04f 30ff 	mov.w	r0, #4294967295
  4006b2:	4770      	bx	lr
	for (; len != 0; --len) {
  4006b4:	4610      	mov	r0, r2
  4006b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4006ba:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4006be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4006c2:	bf00      	nop
  4006c4:	20400ac4 	.word	0x20400ac4
  4006c8:	20400ac8 	.word	0x20400ac8

004006cc <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4006cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4006ce:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4006d2:	4b5c      	ldr	r3, [pc, #368]	; (400844 <board_init+0x178>)
  4006d4:	605a      	str	r2, [r3, #4]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  4006d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4006da:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  4006de:	4b5a      	ldr	r3, [pc, #360]	; (400848 <board_init+0x17c>)
  4006e0:	2100      	movs	r1, #0
  4006e2:	f8c3 1250 	str.w	r1, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
  4006e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4006ea:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  4006ee:	695a      	ldr	r2, [r3, #20]
  4006f0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4006f4:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
  4006f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4006fa:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  4006fe:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
  400702:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
  400706:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  40070a:	f3c7 354e 	ubfx	r5, r7, #13, #15
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  40070e:	f3c7 07c9 	ubfx	r7, r7, #3, #10
  400712:	016e      	lsls	r6, r5, #5
  400714:	ea4f 7c87 	mov.w	ip, r7, lsl #30
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  400718:	f643 7ee0 	movw	lr, #16352	; 0x3fe0
  40071c:	461c      	mov	r4, r3
  40071e:	ea06 000e 	and.w	r0, r6, lr
  400722:	4662      	mov	r2, ip
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  400724:	463b      	mov	r3, r7
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  400726:	ea40 0102 	orr.w	r1, r0, r2
  40072a:	f8c4 1260 	str.w	r1, [r4, #608]	; 0x260
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  40072e:	3b01      	subs	r3, #1
  400730:	f102 4240 	add.w	r2, r2, #3221225472	; 0xc0000000
  400734:	f1b3 3fff 	cmp.w	r3, #4294967295
  400738:	d1f5      	bne.n	400726 <board_init+0x5a>
    } while(sets-- != 0U);
  40073a:	3d01      	subs	r5, #1
  40073c:	3e20      	subs	r6, #32
  40073e:	f1b5 3fff 	cmp.w	r5, #4294967295
  400742:	d1ec      	bne.n	40071e <board_init+0x52>
  400744:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  400748:	4b3f      	ldr	r3, [pc, #252]	; (400848 <board_init+0x17c>)
  40074a:	695a      	ldr	r2, [r3, #20]
  40074c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400750:	615a      	str	r2, [r3, #20]
  400752:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400756:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  40075a:	4a3c      	ldr	r2, [pc, #240]	; (40084c <board_init+0x180>)
  40075c:	493c      	ldr	r1, [pc, #240]	; (400850 <board_init+0x184>)
  40075e:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400760:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400764:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb 0xF":::"memory");
  400766:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40076a:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  40076e:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400772:	f022 0201 	bic.w	r2, r2, #1
  400776:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  40077a:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  40077e:	f022 0201 	bic.w	r2, r2, #1
  400782:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb 0xF":::"memory");
  400786:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40078a:	f3bf 8f6f 	isb	sy
  40078e:	200a      	movs	r0, #10
  400790:	4c30      	ldr	r4, [pc, #192]	; (400854 <board_init+0x188>)
  400792:	47a0      	blx	r4
  400794:	200b      	movs	r0, #11
  400796:	47a0      	blx	r4
  400798:	200c      	movs	r0, #12
  40079a:	47a0      	blx	r4
  40079c:	2010      	movs	r0, #16
  40079e:	47a0      	blx	r4
  4007a0:	2011      	movs	r0, #17
  4007a2:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4007a4:	4b2c      	ldr	r3, [pc, #176]	; (400858 <board_init+0x18c>)
  4007a6:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4007aa:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4007ac:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4007b0:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4007b2:	492a      	ldr	r1, [pc, #168]	; (40085c <board_init+0x190>)
  4007b4:	f44f 7200 	mov.w	r2, #512	; 0x200
  4007b8:	610a      	str	r2, [r1, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4007ba:	f8c1 20a0 	str.w	r2, [r1, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4007be:	630a      	str	r2, [r1, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4007c0:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4007c2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4007c6:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4007c8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4007cc:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  4007ce:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  4007d0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  4007d4:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4007d6:	f421 7100 	bic.w	r1, r1, #512	; 0x200
  4007da:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4007dc:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4007de:	f421 7100 	bic.w	r1, r1, #512	; 0x200
  4007e2:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  4007e4:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  4007e8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  4007ec:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
		base->PIO_PUDR = mask;
  4007f0:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007f4:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4007f6:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4007fa:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4007fc:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4007fe:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400802:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400804:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400808:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40080a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40080c:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  400810:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400812:	605a      	str	r2, [r3, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400814:	4a12      	ldr	r2, [pc, #72]	; (400860 <board_init+0x194>)
  400816:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  40081a:	f043 0310 	orr.w	r3, r3, #16
  40081e:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
		base->PIO_PUDR = mask;
  400822:	4b10      	ldr	r3, [pc, #64]	; (400864 <board_init+0x198>)
  400824:	2210      	movs	r2, #16
  400826:	661a      	str	r2, [r3, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400828:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40082c:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40082e:	625a      	str	r2, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400830:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400834:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400836:	4311      	orrs	r1, r2
  400838:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  40083a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40083c:	4311      	orrs	r1, r2
  40083e:	6759      	str	r1, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400840:	605a      	str	r2, [r3, #4]
  400842:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400844:	400e1850 	.word	0x400e1850
  400848:	e000ed00 	.word	0xe000ed00
  40084c:	400e0c00 	.word	0x400e0c00
  400850:	5a00080c 	.word	0x5a00080c
  400854:	00400b99 	.word	0x00400b99
  400858:	400e0e00 	.word	0x400e0e00
  40085c:	400e1200 	.word	0x400e1200
  400860:	40088000 	.word	0x40088000
  400864:	400e1000 	.word	0x400e1000

00400868 <aes_get_config_defaults>:
{
	/* Sanity check arguments */
	Assert(p_cfg);

	/* Default configuration values */
	p_cfg->encrypt_mode = AES_ENCRYPTION;
  400868:	2301      	movs	r3, #1
  40086a:	7003      	strb	r3, [r0, #0]
	p_cfg->key_size = AES_KEY_SIZE_128;
  40086c:	2300      	movs	r3, #0
  40086e:	7043      	strb	r3, [r0, #1]
	p_cfg->start_mode = AES_MANUAL_START;
  400870:	7083      	strb	r3, [r0, #2]
	p_cfg->opmode = AES_ECB_MODE;
  400872:	70c3      	strb	r3, [r0, #3]
	p_cfg->cfb_size = AES_CFB_SIZE_128;
  400874:	7103      	strb	r3, [r0, #4]
	p_cfg->lod = false;
  400876:	7143      	strb	r3, [r0, #5]
	p_cfg->gtag_en = false;
  400878:	7183      	strb	r3, [r0, #6]
	p_cfg->processing_delay = 0;
  40087a:	6083      	str	r3, [r0, #8]
  40087c:	4770      	bx	lr

0040087e <aes_set_config>:
 * \param[in] p_cfg  Pointer to an AES configuration structure
 */
void aes_set_config(
		Aes *const p_aes,
		struct aes_config *const p_cfg)
{
  40087e:	b470      	push	{r4, r5, r6}
	/* Validate arguments. */
	Assert(p_aes);
	Assert(p_cfg);
	
	/* Set processing mode */
	if (p_cfg->encrypt_mode) {
  400880:	780b      	ldrb	r3, [r1, #0]
  400882:	1c1c      	adds	r4, r3, #0
  400884:	bf18      	it	ne
  400886:	2401      	movne	r4, #1
		ul_mode |= AES_MR_CIPHER;
	}

	/* Active dual buffer in DMA mode */
	if (p_cfg->start_mode == AES_IDATAR0_START) {
  400888:	788a      	ldrb	r2, [r1, #2]
  40088a:	2a02      	cmp	r2, #2
		ul_mode |= AES_MR_DUALBUFF_ACTIVE;
  40088c:	bf08      	it	eq
  40088e:	f044 0408 	orreq.w	r4, r4, #8

	/* Set key size */
	ul_mode |= (p_cfg->key_size << AES_MR_KEYSIZE_Pos);

	/* Set Confidentiality mode */
	ul_mode |= (p_cfg->opmode << AES_MR_OPMOD_Pos);
  400892:	78cd      	ldrb	r5, [r1, #3]
	ul_mode |= (p_cfg->key_size << AES_MR_KEYSIZE_Pos);
  400894:	784e      	ldrb	r6, [r1, #1]
	ul_mode |= (p_cfg->start_mode << AES_MR_SMOD_Pos);
  400896:	0213      	lsls	r3, r2, #8

	/* Set CFB size */
	ul_mode |= (p_cfg->cfb_size << AES_MR_CFBS_Pos);
  400898:	ea43 2386 	orr.w	r3, r3, r6, lsl #10
  40089c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
  4008a0:	790a      	ldrb	r2, [r1, #4]
  4008a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4008a6:	4323      	orrs	r3, r4

	if (p_cfg->lod) {
  4008a8:	794a      	ldrb	r2, [r1, #5]
  4008aa:	b10a      	cbz	r2, 4008b0 <aes_set_config+0x32>
		ul_mode |= AES_MR_LOD;
  4008ac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
	}

	#if (SAM4C || SAM4CP || SAM4CM || SAMV70 || SAMV71 || SAME70 || SAMS70)
	if ((p_cfg->opmode == AES_GCM_MODE) && (p_cfg->gtag_en == true)) {
  4008b0:	2d05      	cmp	r5, #5
  4008b2:	d008      	beq.n	4008c6 <aes_set_config+0x48>
		ul_mode |= AES_MR_GTAGEN;
	}
	#endif /* SAM4C || SAM4CP || SAM4CM */

	ul_mode |= AES_MR_PROCDLY(p_cfg->processing_delay);
  4008b4:	688a      	ldr	r2, [r1, #8]
  4008b6:	0112      	lsls	r2, r2, #4
  4008b8:	b2d2      	uxtb	r2, r2

	ul_mode |= AES_MR_CKEY_PASSWD;
  4008ba:	f442 0260 	orr.w	r2, r2, #14680064	; 0xe00000
  4008be:	4313      	orrs	r3, r2

	p_aes->AES_MR = ul_mode;
  4008c0:	6043      	str	r3, [r0, #4]
}
  4008c2:	bc70      	pop	{r4, r5, r6}
  4008c4:	4770      	bx	lr
	if ((p_cfg->opmode == AES_GCM_MODE) && (p_cfg->gtag_en == true)) {
  4008c6:	798a      	ldrb	r2, [r1, #6]
  4008c8:	2a00      	cmp	r2, #0
  4008ca:	d0f3      	beq.n	4008b4 <aes_set_config+0x36>
		ul_mode |= AES_MR_GTAGEN;
  4008cc:	f043 0302 	orr.w	r3, r3, #2
  4008d0:	e7f0      	b.n	4008b4 <aes_set_config+0x36>
	...

004008d4 <aes_init>:
{
  4008d4:	b538      	push	{r3, r4, r5, lr}
  4008d6:	4604      	mov	r4, r0
  4008d8:	460d      	mov	r5, r1
  4008da:	2038      	movs	r0, #56	; 0x38
  4008dc:	4b06      	ldr	r3, [pc, #24]	; (4008f8 <aes_init+0x24>)
  4008de:	4798      	blx	r3
	p_aes->AES_CR = AES_CR_SWRST;
  4008e0:	f44f 7380 	mov.w	r3, #256	; 0x100
  4008e4:	6023      	str	r3, [r4, #0]
	aes_set_config(p_aes, p_cfg);
  4008e6:	4629      	mov	r1, r5
  4008e8:	4620      	mov	r0, r4
  4008ea:	4b04      	ldr	r3, [pc, #16]	; (4008fc <aes_init+0x28>)
  4008ec:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_disable_peripheral_clock(uint32_t ul_id)
{
	pmc_disable_periph_clk(ul_id);
  4008ee:	2038      	movs	r0, #56	; 0x38
  4008f0:	4b03      	ldr	r3, [pc, #12]	; (400900 <aes_init+0x2c>)
  4008f2:	4798      	blx	r3
  4008f4:	bd38      	pop	{r3, r4, r5, pc}
  4008f6:	bf00      	nop
  4008f8:	00400b99 	.word	0x00400b99
  4008fc:	0040087f 	.word	0x0040087f
  400900:	00400bb9 	.word	0x00400bb9

00400904 <aes_write_key>:
 * \note The key size depends on the current AES configuration.
 */
void aes_write_key(
		Aes *const p_aes,
		const uint32_t *p_key)
{
  400904:	b430      	push	{r4, r5}

	/* Validate arguments. */
	Assert(p_aes);
	Assert(p_key);
	
	switch ((p_aes->AES_MR & AES_MR_KEYSIZE_Msk) >>
  400906:	6843      	ldr	r3, [r0, #4]
  400908:	f3c3 2381 	ubfx	r3, r3, #10, #2
  40090c:	2b01      	cmp	r3, #1
  40090e:	d004      	beq.n	40091a <aes_write_key+0x16>
  400910:	b183      	cbz	r3, 400934 <aes_write_key+0x30>
  400912:	2b02      	cmp	r3, #2
  400914:	d10c      	bne.n	400930 <aes_write_key+0x2c>
	case 1: /* 192bit cryptographic key */
		key_length = 6;
		break;

	case 2: /* 256bit cryptographic key */
		key_length = 8;
  400916:	2508      	movs	r5, #8
  400918:	e000      	b.n	40091c <aes_write_key+0x18>
		key_length = 6;
  40091a:	2506      	movs	r5, #6
{
  40091c:	2300      	movs	r3, #0
	default:
		break;
	}

	for (i = 0; i < key_length; i++) {
		p_aes->AES_KEYWR[i] = *p_key;
  40091e:	f851 4b04 	ldr.w	r4, [r1], #4
  400922:	f103 0208 	add.w	r2, r3, #8
  400926:	f840 4022 	str.w	r4, [r0, r2, lsl #2]
	for (i = 0; i < key_length; i++) {
  40092a:	3301      	adds	r3, #1
  40092c:	42ab      	cmp	r3, r5
  40092e:	d3f6      	bcc.n	40091e <aes_write_key+0x1a>
		p_key++;
	}
}
  400930:	bc30      	pop	{r4, r5}
  400932:	4770      	bx	lr
		key_length = 4;
  400934:	2504      	movs	r5, #4
  400936:	e7f1      	b.n	40091c <aes_write_key+0x18>

00400938 <aes_write_input_data>:
 * \param[in] p_input_data_buffer Pointer to an input data buffer
 */
void aes_write_input_data(
		Aes *const p_aes,
		const uint32_t *p_input_data_buffer)
{
  400938:	b410      	push	{r4}

	/* Validate arguments. */
	Assert(p_aes);
	Assert(p_input_data_buffer);
	
	for (i = 0; i < 4; i++) {
  40093a:	2300      	movs	r3, #0
		p_aes->AES_IDATAR[i] = *p_input_data_buffer;
  40093c:	f851 4b04 	ldr.w	r4, [r1], #4
  400940:	f103 0210 	add.w	r2, r3, #16
  400944:	f840 4022 	str.w	r4, [r0, r2, lsl #2]
	for (i = 0; i < 4; i++) {
  400948:	3301      	adds	r3, #1
  40094a:	2b04      	cmp	r3, #4
  40094c:	d1f6      	bne.n	40093c <aes_write_input_data+0x4>
		p_input_data_buffer++;
	}
}
  40094e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400952:	4770      	bx	lr

00400954 <aes_read_output_data>:

	/* Validate arguments. */
	Assert(p_aes);
	Assert(p_output_data_buffer);
	
	for (i = 0; i < 4; i++) {
  400954:	2300      	movs	r3, #0
		*p_output_data_buffer = p_aes->AES_ODATAR[i];
  400956:	f103 0214 	add.w	r2, r3, #20
  40095a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  40095e:	f841 2b04 	str.w	r2, [r1], #4
	for (i = 0; i < 4; i++) {
  400962:	3301      	adds	r3, #1
  400964:	2b04      	cmp	r3, #4
  400966:	d1f6      	bne.n	400956 <aes_read_output_data+0x2>
		p_output_data_buffer++;
	}
}
  400968:	4770      	bx	lr
	...

0040096c <AES_Handler>:

/**
 * \internal The AES interrupt handler.
 */
void AES_Handler(void)
{
  40096c:	b538      	push	{r3, r4, r5, lr}
 *
 * \return The AES interrupt status register contents.
 */
static inline uint32_t aes_read_interrupt_status(Aes *const p_aes)
{
	return p_aes->AES_ISR;
  40096e:	4b11      	ldr	r3, [pc, #68]	; (4009b4 <AES_Handler+0x48>)
  400970:	69dc      	ldr	r4, [r3, #28]
 *
 * \return The AES interrupt mask contents.
 */
static inline uint32_t aes_read_interrupt_mask(Aes *const p_aes)
{
	return p_aes->AES_IMR;
  400972:	699d      	ldr	r5, [r3, #24]
	uint32_t status = aes_read_interrupt_status(AES);
	uint32_t mask = aes_read_interrupt_mask(AES);

	if ((status & AES_ISR_DATRDY) && (mask & AES_IMR_DATRDY)) {
  400974:	f014 0f01 	tst.w	r4, #1
  400978:	d006      	beq.n	400988 <AES_Handler+0x1c>
  40097a:	f015 0f01 	tst.w	r5, #1
  40097e:	d003      	beq.n	400988 <AES_Handler+0x1c>
		if (aes_callback_pointer[0]) {
  400980:	4b0d      	ldr	r3, [pc, #52]	; (4009b8 <AES_Handler+0x4c>)
  400982:	681b      	ldr	r3, [r3, #0]
  400984:	b103      	cbz	r3, 400988 <AES_Handler+0x1c>
			aes_callback_pointer[0]();
  400986:	4798      	blx	r3
		}
	}

	if ((status & AES_ISR_URAD) && (mask & AES_IMR_URAD)) {
  400988:	f414 7f80 	tst.w	r4, #256	; 0x100
  40098c:	d006      	beq.n	40099c <AES_Handler+0x30>
  40098e:	f415 7f80 	tst.w	r5, #256	; 0x100
  400992:	d003      	beq.n	40099c <AES_Handler+0x30>
		if (aes_callback_pointer[1]) {
  400994:	4b08      	ldr	r3, [pc, #32]	; (4009b8 <AES_Handler+0x4c>)
  400996:	685b      	ldr	r3, [r3, #4]
  400998:	b103      	cbz	r3, 40099c <AES_Handler+0x30>
			aes_callback_pointer[1]();
  40099a:	4798      	blx	r3
		if (aes_callback_pointer[5]) {
			aes_callback_pointer[5]();
		}
	}
#elif SAMV70 || SAMV71 || SAME70 || SAMS70
	if ((status & AES_IER_TAGRDY) && (mask & AES_IER_TAGRDY)) {
  40099c:	f414 3f80 	tst.w	r4, #65536	; 0x10000
  4009a0:	d006      	beq.n	4009b0 <AES_Handler+0x44>
  4009a2:	f415 3f80 	tst.w	r5, #65536	; 0x10000
  4009a6:	d003      	beq.n	4009b0 <AES_Handler+0x44>
		if (aes_callback_pointer[2]) {
  4009a8:	4b03      	ldr	r3, [pc, #12]	; (4009b8 <AES_Handler+0x4c>)
  4009aa:	689b      	ldr	r3, [r3, #8]
  4009ac:	b103      	cbz	r3, 4009b0 <AES_Handler+0x44>
			aes_callback_pointer[2]();
  4009ae:	4798      	blx	r3
  4009b0:	bd38      	pop	{r3, r4, r5, pc}
  4009b2:	bf00      	nop
  4009b4:	4006c000 	.word	0x4006c000
  4009b8:	20400acc 	.word	0x20400acc

004009bc <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4009bc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4009be:	4770      	bx	lr

004009c0 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4009c0:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4009c2:	4770      	bx	lr

004009c4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4009c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4009c8:	4604      	mov	r4, r0
  4009ca:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  4009cc:	4b0e      	ldr	r3, [pc, #56]	; (400a08 <pio_handler_process+0x44>)
  4009ce:	4798      	blx	r3
  4009d0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  4009d2:	4620      	mov	r0, r4
  4009d4:	4b0d      	ldr	r3, [pc, #52]	; (400a0c <pio_handler_process+0x48>)
  4009d6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  4009d8:	4005      	ands	r5, r0
  4009da:	d013      	beq.n	400a04 <pio_handler_process+0x40>
  4009dc:	4c0c      	ldr	r4, [pc, #48]	; (400a10 <pio_handler_process+0x4c>)
  4009de:	f104 0660 	add.w	r6, r4, #96	; 0x60
  4009e2:	e003      	b.n	4009ec <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  4009e4:	42b4      	cmp	r4, r6
  4009e6:	d00d      	beq.n	400a04 <pio_handler_process+0x40>
  4009e8:	3410      	adds	r4, #16
		while (status != 0) {
  4009ea:	b15d      	cbz	r5, 400a04 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  4009ec:	6820      	ldr	r0, [r4, #0]
  4009ee:	4540      	cmp	r0, r8
  4009f0:	d1f8      	bne.n	4009e4 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  4009f2:	6861      	ldr	r1, [r4, #4]
  4009f4:	4229      	tst	r1, r5
  4009f6:	d0f5      	beq.n	4009e4 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  4009f8:	68e3      	ldr	r3, [r4, #12]
  4009fa:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  4009fc:	6863      	ldr	r3, [r4, #4]
  4009fe:	ea25 0503 	bic.w	r5, r5, r3
  400a02:	e7ef      	b.n	4009e4 <pio_handler_process+0x20>
  400a04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400a08:	004009bd 	.word	0x004009bd
  400a0c:	004009c1 	.word	0x004009c1
  400a10:	20400a14 	.word	0x20400a14

00400a14 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400a14:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400a16:	210a      	movs	r1, #10
  400a18:	4801      	ldr	r0, [pc, #4]	; (400a20 <PIOA_Handler+0xc>)
  400a1a:	4b02      	ldr	r3, [pc, #8]	; (400a24 <PIOA_Handler+0x10>)
  400a1c:	4798      	blx	r3
  400a1e:	bd08      	pop	{r3, pc}
  400a20:	400e0e00 	.word	0x400e0e00
  400a24:	004009c5 	.word	0x004009c5

00400a28 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400a28:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400a2a:	210b      	movs	r1, #11
  400a2c:	4801      	ldr	r0, [pc, #4]	; (400a34 <PIOB_Handler+0xc>)
  400a2e:	4b02      	ldr	r3, [pc, #8]	; (400a38 <PIOB_Handler+0x10>)
  400a30:	4798      	blx	r3
  400a32:	bd08      	pop	{r3, pc}
  400a34:	400e1000 	.word	0x400e1000
  400a38:	004009c5 	.word	0x004009c5

00400a3c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400a3c:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400a3e:	210c      	movs	r1, #12
  400a40:	4801      	ldr	r0, [pc, #4]	; (400a48 <PIOC_Handler+0xc>)
  400a42:	4b02      	ldr	r3, [pc, #8]	; (400a4c <PIOC_Handler+0x10>)
  400a44:	4798      	blx	r3
  400a46:	bd08      	pop	{r3, pc}
  400a48:	400e1200 	.word	0x400e1200
  400a4c:	004009c5 	.word	0x004009c5

00400a50 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400a50:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400a52:	2110      	movs	r1, #16
  400a54:	4801      	ldr	r0, [pc, #4]	; (400a5c <PIOD_Handler+0xc>)
  400a56:	4b02      	ldr	r3, [pc, #8]	; (400a60 <PIOD_Handler+0x10>)
  400a58:	4798      	blx	r3
  400a5a:	bd08      	pop	{r3, pc}
  400a5c:	400e1400 	.word	0x400e1400
  400a60:	004009c5 	.word	0x004009c5

00400a64 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400a64:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400a66:	2111      	movs	r1, #17
  400a68:	4801      	ldr	r0, [pc, #4]	; (400a70 <PIOE_Handler+0xc>)
  400a6a:	4b02      	ldr	r3, [pc, #8]	; (400a74 <PIOE_Handler+0x10>)
  400a6c:	4798      	blx	r3
  400a6e:	bd08      	pop	{r3, pc}
  400a70:	400e1600 	.word	0x400e1600
  400a74:	004009c5 	.word	0x004009c5

00400a78 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400a78:	2803      	cmp	r0, #3
  400a7a:	d011      	beq.n	400aa0 <pmc_mck_set_division+0x28>
  400a7c:	2804      	cmp	r0, #4
  400a7e:	d012      	beq.n	400aa6 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400a80:	2802      	cmp	r0, #2
  400a82:	bf0c      	ite	eq
  400a84:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400a88:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400a8a:	4a08      	ldr	r2, [pc, #32]	; (400aac <pmc_mck_set_division+0x34>)
  400a8c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400a8e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400a92:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400a94:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400a96:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400a98:	f013 0f08 	tst.w	r3, #8
  400a9c:	d0fb      	beq.n	400a96 <pmc_mck_set_division+0x1e>
}
  400a9e:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400aa0:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400aa4:	e7f1      	b.n	400a8a <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400aa6:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400aaa:	e7ee      	b.n	400a8a <pmc_mck_set_division+0x12>
  400aac:	400e0600 	.word	0x400e0600

00400ab0 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400ab0:	4a17      	ldr	r2, [pc, #92]	; (400b10 <pmc_switch_mck_to_pllack+0x60>)
  400ab2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400ab4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400ab8:	4318      	orrs	r0, r3
  400aba:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400abc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400abe:	f013 0f08 	tst.w	r3, #8
  400ac2:	d10a      	bne.n	400ada <pmc_switch_mck_to_pllack+0x2a>
  400ac4:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400ac8:	4911      	ldr	r1, [pc, #68]	; (400b10 <pmc_switch_mck_to_pllack+0x60>)
  400aca:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400acc:	f012 0f08 	tst.w	r2, #8
  400ad0:	d103      	bne.n	400ada <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400ad2:	3b01      	subs	r3, #1
  400ad4:	d1f9      	bne.n	400aca <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400ad6:	2001      	movs	r0, #1
  400ad8:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400ada:	4a0d      	ldr	r2, [pc, #52]	; (400b10 <pmc_switch_mck_to_pllack+0x60>)
  400adc:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400ade:	f023 0303 	bic.w	r3, r3, #3
  400ae2:	f043 0302 	orr.w	r3, r3, #2
  400ae6:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400ae8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400aea:	f013 0f08 	tst.w	r3, #8
  400aee:	d10a      	bne.n	400b06 <pmc_switch_mck_to_pllack+0x56>
  400af0:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400af4:	4906      	ldr	r1, [pc, #24]	; (400b10 <pmc_switch_mck_to_pllack+0x60>)
  400af6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400af8:	f012 0f08 	tst.w	r2, #8
  400afc:	d105      	bne.n	400b0a <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400afe:	3b01      	subs	r3, #1
  400b00:	d1f9      	bne.n	400af6 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400b02:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400b04:	4770      	bx	lr
	return 0;
  400b06:	2000      	movs	r0, #0
  400b08:	4770      	bx	lr
  400b0a:	2000      	movs	r0, #0
  400b0c:	4770      	bx	lr
  400b0e:	bf00      	nop
  400b10:	400e0600 	.word	0x400e0600

00400b14 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400b14:	b9a0      	cbnz	r0, 400b40 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400b16:	480e      	ldr	r0, [pc, #56]	; (400b50 <pmc_switch_mainck_to_xtal+0x3c>)
  400b18:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400b1a:	0209      	lsls	r1, r1, #8
  400b1c:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400b1e:	4a0d      	ldr	r2, [pc, #52]	; (400b54 <pmc_switch_mainck_to_xtal+0x40>)
  400b20:	401a      	ands	r2, r3
  400b22:	4b0d      	ldr	r3, [pc, #52]	; (400b58 <pmc_switch_mainck_to_xtal+0x44>)
  400b24:	4313      	orrs	r3, r2
  400b26:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400b28:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400b2a:	4602      	mov	r2, r0
  400b2c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400b2e:	f013 0f01 	tst.w	r3, #1
  400b32:	d0fb      	beq.n	400b2c <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400b34:	4a06      	ldr	r2, [pc, #24]	; (400b50 <pmc_switch_mainck_to_xtal+0x3c>)
  400b36:	6a11      	ldr	r1, [r2, #32]
  400b38:	4b08      	ldr	r3, [pc, #32]	; (400b5c <pmc_switch_mainck_to_xtal+0x48>)
  400b3a:	430b      	orrs	r3, r1
  400b3c:	6213      	str	r3, [r2, #32]
  400b3e:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400b40:	4903      	ldr	r1, [pc, #12]	; (400b50 <pmc_switch_mainck_to_xtal+0x3c>)
  400b42:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400b44:	4a06      	ldr	r2, [pc, #24]	; (400b60 <pmc_switch_mainck_to_xtal+0x4c>)
  400b46:	401a      	ands	r2, r3
  400b48:	4b06      	ldr	r3, [pc, #24]	; (400b64 <pmc_switch_mainck_to_xtal+0x50>)
  400b4a:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400b4c:	620b      	str	r3, [r1, #32]
  400b4e:	4770      	bx	lr
  400b50:	400e0600 	.word	0x400e0600
  400b54:	ffc8fffc 	.word	0xffc8fffc
  400b58:	00370001 	.word	0x00370001
  400b5c:	01370000 	.word	0x01370000
  400b60:	fec8fffc 	.word	0xfec8fffc
  400b64:	01370002 	.word	0x01370002

00400b68 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400b68:	4b02      	ldr	r3, [pc, #8]	; (400b74 <pmc_osc_is_ready_mainck+0xc>)
  400b6a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400b6c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400b70:	4770      	bx	lr
  400b72:	bf00      	nop
  400b74:	400e0600 	.word	0x400e0600

00400b78 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400b78:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400b7c:	4b01      	ldr	r3, [pc, #4]	; (400b84 <pmc_disable_pllack+0xc>)
  400b7e:	629a      	str	r2, [r3, #40]	; 0x28
  400b80:	4770      	bx	lr
  400b82:	bf00      	nop
  400b84:	400e0600 	.word	0x400e0600

00400b88 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400b88:	4b02      	ldr	r3, [pc, #8]	; (400b94 <pmc_is_locked_pllack+0xc>)
  400b8a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400b8c:	f000 0002 	and.w	r0, r0, #2
  400b90:	4770      	bx	lr
  400b92:	bf00      	nop
  400b94:	400e0600 	.word	0x400e0600

00400b98 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  400b98:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  400b9c:	4b05      	ldr	r3, [pc, #20]	; (400bb4 <pmc_enable_periph_clk+0x1c>)
  400b9e:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
  400ba2:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  400ba6:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
  400baa:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400bae:	2000      	movs	r0, #0
  400bb0:	4770      	bx	lr
  400bb2:	bf00      	nop
  400bb4:	400e0600 	.word	0x400e0600

00400bb8 <pmc_disable_periph_clk>:
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  400bb8:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  400bbc:	4b05      	ldr	r3, [pc, #20]	; (400bd4 <pmc_disable_periph_clk+0x1c>)
  400bbe:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_CMD;
  400bc2:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  400bc6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
	PMC->PMC_PCR = pcr;
  400bca:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
		}
#endif
	}
	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400bce:	2000      	movs	r0, #0
  400bd0:	4770      	bx	lr
  400bd2:	bf00      	nop
  400bd4:	400e0600 	.word	0x400e0600

00400bd8 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400bd8:	6943      	ldr	r3, [r0, #20]
  400bda:	f013 0f02 	tst.w	r3, #2
  400bde:	d002      	beq.n	400be6 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  400be0:	61c1      	str	r1, [r0, #28]
	return 0;
  400be2:	2000      	movs	r0, #0
  400be4:	4770      	bx	lr
		return 1;
  400be6:	2001      	movs	r0, #1
}
  400be8:	4770      	bx	lr

00400bea <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400bea:	6943      	ldr	r3, [r0, #20]
  400bec:	f013 0f01 	tst.w	r3, #1
  400bf0:	d003      	beq.n	400bfa <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  400bf2:	6983      	ldr	r3, [r0, #24]
  400bf4:	700b      	strb	r3, [r1, #0]
	return 0;
  400bf6:	2000      	movs	r0, #0
  400bf8:	4770      	bx	lr
		return 1;
  400bfa:	2001      	movs	r0, #1
}
  400bfc:	4770      	bx	lr

00400bfe <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  400bfe:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  400c00:	010b      	lsls	r3, r1, #4
  400c02:	4293      	cmp	r3, r2
  400c04:	d914      	bls.n	400c30 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400c06:	00c9      	lsls	r1, r1, #3
  400c08:	084b      	lsrs	r3, r1, #1
  400c0a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  400c0e:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  400c12:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400c14:	1e5c      	subs	r4, r3, #1
  400c16:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400c1a:	428c      	cmp	r4, r1
  400c1c:	d901      	bls.n	400c22 <usart_set_async_baudrate+0x24>
		return 1;
  400c1e:	2001      	movs	r0, #1
  400c20:	e017      	b.n	400c52 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  400c22:	6841      	ldr	r1, [r0, #4]
  400c24:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  400c28:	6041      	str	r1, [r0, #4]
  400c2a:	e00c      	b.n	400c46 <usart_set_async_baudrate+0x48>
		return 1;
  400c2c:	2001      	movs	r0, #1
  400c2e:	e010      	b.n	400c52 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400c30:	0859      	lsrs	r1, r3, #1
  400c32:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400c36:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  400c3a:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400c3c:	1e5c      	subs	r4, r3, #1
  400c3e:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400c42:	428c      	cmp	r4, r1
  400c44:	d8f2      	bhi.n	400c2c <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400c46:	0412      	lsls	r2, r2, #16
  400c48:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  400c4c:	431a      	orrs	r2, r3
  400c4e:	6202      	str	r2, [r0, #32]

	return 0;
  400c50:	2000      	movs	r0, #0
}
  400c52:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c56:	4770      	bx	lr

00400c58 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400c58:	4b08      	ldr	r3, [pc, #32]	; (400c7c <usart_reset+0x24>)
  400c5a:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400c5e:	2300      	movs	r3, #0
  400c60:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400c62:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400c64:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400c66:	2388      	movs	r3, #136	; 0x88
  400c68:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400c6a:	2324      	movs	r3, #36	; 0x24
  400c6c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400c6e:	f44f 7380 	mov.w	r3, #256	; 0x100
  400c72:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400c74:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400c78:	6003      	str	r3, [r0, #0]
  400c7a:	4770      	bx	lr
  400c7c:	55534100 	.word	0x55534100

00400c80 <usart_init_rs232>:
{
  400c80:	b570      	push	{r4, r5, r6, lr}
  400c82:	4605      	mov	r5, r0
  400c84:	460c      	mov	r4, r1
  400c86:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400c88:	4b0f      	ldr	r3, [pc, #60]	; (400cc8 <usart_init_rs232+0x48>)
  400c8a:	4798      	blx	r3
	ul_reg_val = 0;
  400c8c:	2200      	movs	r2, #0
  400c8e:	4b0f      	ldr	r3, [pc, #60]	; (400ccc <usart_init_rs232+0x4c>)
  400c90:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400c92:	b1a4      	cbz	r4, 400cbe <usart_init_rs232+0x3e>
  400c94:	4632      	mov	r2, r6
  400c96:	6821      	ldr	r1, [r4, #0]
  400c98:	4628      	mov	r0, r5
  400c9a:	4b0d      	ldr	r3, [pc, #52]	; (400cd0 <usart_init_rs232+0x50>)
  400c9c:	4798      	blx	r3
  400c9e:	4602      	mov	r2, r0
  400ca0:	b978      	cbnz	r0, 400cc2 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400ca2:	6863      	ldr	r3, [r4, #4]
  400ca4:	68a1      	ldr	r1, [r4, #8]
  400ca6:	430b      	orrs	r3, r1
  400ca8:	6921      	ldr	r1, [r4, #16]
  400caa:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400cac:	68e1      	ldr	r1, [r4, #12]
  400cae:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400cb0:	4906      	ldr	r1, [pc, #24]	; (400ccc <usart_init_rs232+0x4c>)
  400cb2:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400cb4:	6869      	ldr	r1, [r5, #4]
  400cb6:	430b      	orrs	r3, r1
  400cb8:	606b      	str	r3, [r5, #4]
}
  400cba:	4610      	mov	r0, r2
  400cbc:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400cbe:	2201      	movs	r2, #1
  400cc0:	e7fb      	b.n	400cba <usart_init_rs232+0x3a>
  400cc2:	2201      	movs	r2, #1
  400cc4:	e7f9      	b.n	400cba <usart_init_rs232+0x3a>
  400cc6:	bf00      	nop
  400cc8:	00400c59 	.word	0x00400c59
  400ccc:	20400a84 	.word	0x20400a84
  400cd0:	00400bff 	.word	0x00400bff

00400cd4 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400cd4:	2340      	movs	r3, #64	; 0x40
  400cd6:	6003      	str	r3, [r0, #0]
  400cd8:	4770      	bx	lr

00400cda <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400cda:	2310      	movs	r3, #16
  400cdc:	6003      	str	r3, [r0, #0]
  400cde:	4770      	bx	lr

00400ce0 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400ce0:	6943      	ldr	r3, [r0, #20]
  400ce2:	f013 0f02 	tst.w	r3, #2
  400ce6:	d004      	beq.n	400cf2 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  400ce8:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400cec:	61c1      	str	r1, [r0, #28]
	return 0;
  400cee:	2000      	movs	r0, #0
  400cf0:	4770      	bx	lr
		return 1;
  400cf2:	2001      	movs	r0, #1
}
  400cf4:	4770      	bx	lr

00400cf6 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  400cf6:	6943      	ldr	r3, [r0, #20]
  400cf8:	f013 0f01 	tst.w	r3, #1
  400cfc:	d005      	beq.n	400d0a <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400cfe:	6983      	ldr	r3, [r0, #24]
  400d00:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400d04:	600b      	str	r3, [r1, #0]
	return 0;
  400d06:	2000      	movs	r0, #0
  400d08:	4770      	bx	lr
		return 1;
  400d0a:	2001      	movs	r0, #1
}
  400d0c:	4770      	bx	lr

00400d0e <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400d0e:	e7fe      	b.n	400d0e <Dummy_Handler>

00400d10 <Reset_Handler>:
{
  400d10:	b500      	push	{lr}
  400d12:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  400d14:	4b25      	ldr	r3, [pc, #148]	; (400dac <Reset_Handler+0x9c>)
  400d16:	4a26      	ldr	r2, [pc, #152]	; (400db0 <Reset_Handler+0xa0>)
  400d18:	429a      	cmp	r2, r3
  400d1a:	d010      	beq.n	400d3e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  400d1c:	4b25      	ldr	r3, [pc, #148]	; (400db4 <Reset_Handler+0xa4>)
  400d1e:	4a23      	ldr	r2, [pc, #140]	; (400dac <Reset_Handler+0x9c>)
  400d20:	429a      	cmp	r2, r3
  400d22:	d20c      	bcs.n	400d3e <Reset_Handler+0x2e>
  400d24:	3b01      	subs	r3, #1
  400d26:	1a9b      	subs	r3, r3, r2
  400d28:	f023 0303 	bic.w	r3, r3, #3
  400d2c:	3304      	adds	r3, #4
  400d2e:	4413      	add	r3, r2
  400d30:	491f      	ldr	r1, [pc, #124]	; (400db0 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  400d32:	f851 0b04 	ldr.w	r0, [r1], #4
  400d36:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  400d3a:	429a      	cmp	r2, r3
  400d3c:	d1f9      	bne.n	400d32 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  400d3e:	4b1e      	ldr	r3, [pc, #120]	; (400db8 <Reset_Handler+0xa8>)
  400d40:	4a1e      	ldr	r2, [pc, #120]	; (400dbc <Reset_Handler+0xac>)
  400d42:	429a      	cmp	r2, r3
  400d44:	d20a      	bcs.n	400d5c <Reset_Handler+0x4c>
  400d46:	3b01      	subs	r3, #1
  400d48:	1a9b      	subs	r3, r3, r2
  400d4a:	f023 0303 	bic.w	r3, r3, #3
  400d4e:	3304      	adds	r3, #4
  400d50:	4413      	add	r3, r2
                *pDest++ = 0;
  400d52:	2100      	movs	r1, #0
  400d54:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400d58:	4293      	cmp	r3, r2
  400d5a:	d1fb      	bne.n	400d54 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  400d5c:	4a18      	ldr	r2, [pc, #96]	; (400dc0 <Reset_Handler+0xb0>)
  400d5e:	4b19      	ldr	r3, [pc, #100]	; (400dc4 <Reset_Handler+0xb4>)
  400d60:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400d64:	6093      	str	r3, [r2, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400d66:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400d6a:	fab3 f383 	clz	r3, r3
  400d6e:	095b      	lsrs	r3, r3, #5
  400d70:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400d72:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  400d74:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400d78:	2200      	movs	r2, #0
  400d7a:	4b13      	ldr	r3, [pc, #76]	; (400dc8 <Reset_Handler+0xb8>)
  400d7c:	701a      	strb	r2, [r3, #0]
	return flags;
  400d7e:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  400d80:	4a12      	ldr	r2, [pc, #72]	; (400dcc <Reset_Handler+0xbc>)
  400d82:	6813      	ldr	r3, [r2, #0]
  400d84:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400d88:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb 0xF":::"memory");
  400d8a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400d8e:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400d92:	b129      	cbz	r1, 400da0 <Reset_Handler+0x90>
		cpu_irq_enable();
  400d94:	2201      	movs	r2, #1
  400d96:	4b0c      	ldr	r3, [pc, #48]	; (400dc8 <Reset_Handler+0xb8>)
  400d98:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  400d9a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400d9e:	b662      	cpsie	i
        __libc_init_array();
  400da0:	4b0b      	ldr	r3, [pc, #44]	; (400dd0 <Reset_Handler+0xc0>)
  400da2:	4798      	blx	r3
        main();
  400da4:	4b0b      	ldr	r3, [pc, #44]	; (400dd4 <Reset_Handler+0xc4>)
  400da6:	4798      	blx	r3
  400da8:	e7fe      	b.n	400da8 <Reset_Handler+0x98>
  400daa:	bf00      	nop
  400dac:	20400000 	.word	0x20400000
  400db0:	00405834 	.word	0x00405834
  400db4:	204009c8 	.word	0x204009c8
  400db8:	20400b00 	.word	0x20400b00
  400dbc:	204009c8 	.word	0x204009c8
  400dc0:	e000ed00 	.word	0xe000ed00
  400dc4:	00400000 	.word	0x00400000
  400dc8:	20400010 	.word	0x20400010
  400dcc:	e000ed88 	.word	0xe000ed88
  400dd0:	00400fc1 	.word	0x00400fc1
  400dd4:	00400525 	.word	0x00400525

00400dd8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  400dd8:	4b3b      	ldr	r3, [pc, #236]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400dda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400ddc:	f003 0303 	and.w	r3, r3, #3
  400de0:	2b01      	cmp	r3, #1
  400de2:	d01d      	beq.n	400e20 <SystemCoreClockUpdate+0x48>
  400de4:	b183      	cbz	r3, 400e08 <SystemCoreClockUpdate+0x30>
  400de6:	2b02      	cmp	r3, #2
  400de8:	d036      	beq.n	400e58 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  400dea:	4b37      	ldr	r3, [pc, #220]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400dec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400dee:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400df2:	2b70      	cmp	r3, #112	; 0x70
  400df4:	d05f      	beq.n	400eb6 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400df6:	4b34      	ldr	r3, [pc, #208]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400df8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400dfa:	4934      	ldr	r1, [pc, #208]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400dfc:	f3c2 1202 	ubfx	r2, r2, #4, #3
  400e00:	680b      	ldr	r3, [r1, #0]
  400e02:	40d3      	lsrs	r3, r2
  400e04:	600b      	str	r3, [r1, #0]
  400e06:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  400e08:	4b31      	ldr	r3, [pc, #196]	; (400ed0 <SystemCoreClockUpdate+0xf8>)
  400e0a:	695b      	ldr	r3, [r3, #20]
  400e0c:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  400e10:	bf14      	ite	ne
  400e12:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400e16:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400e1a:	4b2c      	ldr	r3, [pc, #176]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400e1c:	601a      	str	r2, [r3, #0]
  400e1e:	e7e4      	b.n	400dea <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400e20:	4b29      	ldr	r3, [pc, #164]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400e22:	6a1b      	ldr	r3, [r3, #32]
  400e24:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400e28:	d003      	beq.n	400e32 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  400e2a:	4a2a      	ldr	r2, [pc, #168]	; (400ed4 <SystemCoreClockUpdate+0xfc>)
  400e2c:	4b27      	ldr	r3, [pc, #156]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400e2e:	601a      	str	r2, [r3, #0]
  400e30:	e7db      	b.n	400dea <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400e32:	4a29      	ldr	r2, [pc, #164]	; (400ed8 <SystemCoreClockUpdate+0x100>)
  400e34:	4b25      	ldr	r3, [pc, #148]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400e36:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  400e38:	4b23      	ldr	r3, [pc, #140]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400e3a:	6a1b      	ldr	r3, [r3, #32]
  400e3c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400e40:	2b10      	cmp	r3, #16
  400e42:	d005      	beq.n	400e50 <SystemCoreClockUpdate+0x78>
  400e44:	2b20      	cmp	r3, #32
  400e46:	d1d0      	bne.n	400dea <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  400e48:	4a22      	ldr	r2, [pc, #136]	; (400ed4 <SystemCoreClockUpdate+0xfc>)
  400e4a:	4b20      	ldr	r3, [pc, #128]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400e4c:	601a      	str	r2, [r3, #0]
          break;
  400e4e:	e7cc      	b.n	400dea <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  400e50:	4a22      	ldr	r2, [pc, #136]	; (400edc <SystemCoreClockUpdate+0x104>)
  400e52:	4b1e      	ldr	r3, [pc, #120]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400e54:	601a      	str	r2, [r3, #0]
          break;
  400e56:	e7c8      	b.n	400dea <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  400e58:	4b1b      	ldr	r3, [pc, #108]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400e5a:	6a1b      	ldr	r3, [r3, #32]
  400e5c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  400e60:	d016      	beq.n	400e90 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  400e62:	4a1c      	ldr	r2, [pc, #112]	; (400ed4 <SystemCoreClockUpdate+0xfc>)
  400e64:	4b19      	ldr	r3, [pc, #100]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400e66:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  400e68:	4b17      	ldr	r3, [pc, #92]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400e6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400e6c:	f003 0303 	and.w	r3, r3, #3
  400e70:	2b02      	cmp	r3, #2
  400e72:	d1ba      	bne.n	400dea <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400e74:	4a14      	ldr	r2, [pc, #80]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400e76:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400e78:	6a92      	ldr	r2, [r2, #40]	; 0x28
  400e7a:	4814      	ldr	r0, [pc, #80]	; (400ecc <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  400e7c:	f3c1 410a 	ubfx	r1, r1, #16, #11
  400e80:	6803      	ldr	r3, [r0, #0]
  400e82:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  400e86:	b2d2      	uxtb	r2, r2
  400e88:	fbb3 f3f2 	udiv	r3, r3, r2
  400e8c:	6003      	str	r3, [r0, #0]
  400e8e:	e7ac      	b.n	400dea <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  400e90:	4a11      	ldr	r2, [pc, #68]	; (400ed8 <SystemCoreClockUpdate+0x100>)
  400e92:	4b0e      	ldr	r3, [pc, #56]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400e94:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  400e96:	4b0c      	ldr	r3, [pc, #48]	; (400ec8 <SystemCoreClockUpdate+0xf0>)
  400e98:	6a1b      	ldr	r3, [r3, #32]
  400e9a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400e9e:	2b10      	cmp	r3, #16
  400ea0:	d005      	beq.n	400eae <SystemCoreClockUpdate+0xd6>
  400ea2:	2b20      	cmp	r3, #32
  400ea4:	d1e0      	bne.n	400e68 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  400ea6:	4a0b      	ldr	r2, [pc, #44]	; (400ed4 <SystemCoreClockUpdate+0xfc>)
  400ea8:	4b08      	ldr	r3, [pc, #32]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400eaa:	601a      	str	r2, [r3, #0]
          break;
  400eac:	e7dc      	b.n	400e68 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  400eae:	4a0b      	ldr	r2, [pc, #44]	; (400edc <SystemCoreClockUpdate+0x104>)
  400eb0:	4b06      	ldr	r3, [pc, #24]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400eb2:	601a      	str	r2, [r3, #0]
          break;
  400eb4:	e7d8      	b.n	400e68 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  400eb6:	4a05      	ldr	r2, [pc, #20]	; (400ecc <SystemCoreClockUpdate+0xf4>)
  400eb8:	6813      	ldr	r3, [r2, #0]
  400eba:	4909      	ldr	r1, [pc, #36]	; (400ee0 <SystemCoreClockUpdate+0x108>)
  400ebc:	fba1 1303 	umull	r1, r3, r1, r3
  400ec0:	085b      	lsrs	r3, r3, #1
  400ec2:	6013      	str	r3, [r2, #0]
  400ec4:	4770      	bx	lr
  400ec6:	bf00      	nop
  400ec8:	400e0600 	.word	0x400e0600
  400ecc:	20400014 	.word	0x20400014
  400ed0:	400e1810 	.word	0x400e1810
  400ed4:	00b71b00 	.word	0x00b71b00
  400ed8:	003d0900 	.word	0x003d0900
  400edc:	007a1200 	.word	0x007a1200
  400ee0:	aaaaaaab 	.word	0xaaaaaaab

00400ee4 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  400ee4:	4b16      	ldr	r3, [pc, #88]	; (400f40 <system_init_flash+0x5c>)
  400ee6:	4298      	cmp	r0, r3
  400ee8:	d913      	bls.n	400f12 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  400eea:	4b16      	ldr	r3, [pc, #88]	; (400f44 <system_init_flash+0x60>)
  400eec:	4298      	cmp	r0, r3
  400eee:	d915      	bls.n	400f1c <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  400ef0:	4b15      	ldr	r3, [pc, #84]	; (400f48 <system_init_flash+0x64>)
  400ef2:	4298      	cmp	r0, r3
  400ef4:	d916      	bls.n	400f24 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  400ef6:	4b15      	ldr	r3, [pc, #84]	; (400f4c <system_init_flash+0x68>)
  400ef8:	4298      	cmp	r0, r3
  400efa:	d917      	bls.n	400f2c <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  400efc:	4b14      	ldr	r3, [pc, #80]	; (400f50 <system_init_flash+0x6c>)
  400efe:	4298      	cmp	r0, r3
  400f00:	d918      	bls.n	400f34 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  400f02:	4b14      	ldr	r3, [pc, #80]	; (400f54 <system_init_flash+0x70>)
  400f04:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  400f06:	bf94      	ite	ls
  400f08:	4a13      	ldrls	r2, [pc, #76]	; (400f58 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  400f0a:	4a14      	ldrhi	r2, [pc, #80]	; (400f5c <system_init_flash+0x78>)
  400f0c:	4b14      	ldr	r3, [pc, #80]	; (400f60 <system_init_flash+0x7c>)
  400f0e:	601a      	str	r2, [r3, #0]
  400f10:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  400f12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400f16:	4b12      	ldr	r3, [pc, #72]	; (400f60 <system_init_flash+0x7c>)
  400f18:	601a      	str	r2, [r3, #0]
  400f1a:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  400f1c:	4a11      	ldr	r2, [pc, #68]	; (400f64 <system_init_flash+0x80>)
  400f1e:	4b10      	ldr	r3, [pc, #64]	; (400f60 <system_init_flash+0x7c>)
  400f20:	601a      	str	r2, [r3, #0]
  400f22:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  400f24:	4a10      	ldr	r2, [pc, #64]	; (400f68 <system_init_flash+0x84>)
  400f26:	4b0e      	ldr	r3, [pc, #56]	; (400f60 <system_init_flash+0x7c>)
  400f28:	601a      	str	r2, [r3, #0]
  400f2a:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  400f2c:	4a0f      	ldr	r2, [pc, #60]	; (400f6c <system_init_flash+0x88>)
  400f2e:	4b0c      	ldr	r3, [pc, #48]	; (400f60 <system_init_flash+0x7c>)
  400f30:	601a      	str	r2, [r3, #0]
  400f32:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  400f34:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  400f38:	4b09      	ldr	r3, [pc, #36]	; (400f60 <system_init_flash+0x7c>)
  400f3a:	601a      	str	r2, [r3, #0]
  400f3c:	4770      	bx	lr
  400f3e:	bf00      	nop
  400f40:	015ef3bf 	.word	0x015ef3bf
  400f44:	02bde77f 	.word	0x02bde77f
  400f48:	041cdb3f 	.word	0x041cdb3f
  400f4c:	057bceff 	.word	0x057bceff
  400f50:	06dac2bf 	.word	0x06dac2bf
  400f54:	0839b67f 	.word	0x0839b67f
  400f58:	04000500 	.word	0x04000500
  400f5c:	04000600 	.word	0x04000600
  400f60:	400e0c00 	.word	0x400e0c00
  400f64:	04000100 	.word	0x04000100
  400f68:	04000200 	.word	0x04000200
  400f6c:	04000300 	.word	0x04000300

00400f70 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  400f70:	4b0a      	ldr	r3, [pc, #40]	; (400f9c <_sbrk+0x2c>)
  400f72:	681b      	ldr	r3, [r3, #0]
  400f74:	b153      	cbz	r3, 400f8c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400f76:	4b09      	ldr	r3, [pc, #36]	; (400f9c <_sbrk+0x2c>)
  400f78:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  400f7a:	181a      	adds	r2, r3, r0
  400f7c:	4908      	ldr	r1, [pc, #32]	; (400fa0 <_sbrk+0x30>)
  400f7e:	4291      	cmp	r1, r2
  400f80:	db08      	blt.n	400f94 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  400f82:	4610      	mov	r0, r2
  400f84:	4a05      	ldr	r2, [pc, #20]	; (400f9c <_sbrk+0x2c>)
  400f86:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  400f88:	4618      	mov	r0, r3
  400f8a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400f8c:	4a05      	ldr	r2, [pc, #20]	; (400fa4 <_sbrk+0x34>)
  400f8e:	4b03      	ldr	r3, [pc, #12]	; (400f9c <_sbrk+0x2c>)
  400f90:	601a      	str	r2, [r3, #0]
  400f92:	e7f0      	b.n	400f76 <_sbrk+0x6>
		return (caddr_t) -1;	
  400f94:	f04f 30ff 	mov.w	r0, #4294967295
}
  400f98:	4770      	bx	lr
  400f9a:	bf00      	nop
  400f9c:	20400a88 	.word	0x20400a88
  400fa0:	2045fffc 	.word	0x2045fffc
  400fa4:	20402d00 	.word	0x20402d00

00400fa8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  400fa8:	f04f 30ff 	mov.w	r0, #4294967295
  400fac:	4770      	bx	lr

00400fae <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  400fae:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400fb2:	604b      	str	r3, [r1, #4]

	return 0;
}
  400fb4:	2000      	movs	r0, #0
  400fb6:	4770      	bx	lr

00400fb8 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  400fb8:	2001      	movs	r0, #1
  400fba:	4770      	bx	lr

00400fbc <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  400fbc:	2000      	movs	r0, #0
  400fbe:	4770      	bx	lr

00400fc0 <__libc_init_array>:
  400fc0:	b570      	push	{r4, r5, r6, lr}
  400fc2:	4e0f      	ldr	r6, [pc, #60]	; (401000 <__libc_init_array+0x40>)
  400fc4:	4d0f      	ldr	r5, [pc, #60]	; (401004 <__libc_init_array+0x44>)
  400fc6:	1b76      	subs	r6, r6, r5
  400fc8:	10b6      	asrs	r6, r6, #2
  400fca:	bf18      	it	ne
  400fcc:	2400      	movne	r4, #0
  400fce:	d005      	beq.n	400fdc <__libc_init_array+0x1c>
  400fd0:	3401      	adds	r4, #1
  400fd2:	f855 3b04 	ldr.w	r3, [r5], #4
  400fd6:	4798      	blx	r3
  400fd8:	42a6      	cmp	r6, r4
  400fda:	d1f9      	bne.n	400fd0 <__libc_init_array+0x10>
  400fdc:	4e0a      	ldr	r6, [pc, #40]	; (401008 <__libc_init_array+0x48>)
  400fde:	4d0b      	ldr	r5, [pc, #44]	; (40100c <__libc_init_array+0x4c>)
  400fe0:	1b76      	subs	r6, r6, r5
  400fe2:	f004 fc11 	bl	405808 <_init>
  400fe6:	10b6      	asrs	r6, r6, #2
  400fe8:	bf18      	it	ne
  400fea:	2400      	movne	r4, #0
  400fec:	d006      	beq.n	400ffc <__libc_init_array+0x3c>
  400fee:	3401      	adds	r4, #1
  400ff0:	f855 3b04 	ldr.w	r3, [r5], #4
  400ff4:	4798      	blx	r3
  400ff6:	42a6      	cmp	r6, r4
  400ff8:	d1f9      	bne.n	400fee <__libc_init_array+0x2e>
  400ffa:	bd70      	pop	{r4, r5, r6, pc}
  400ffc:	bd70      	pop	{r4, r5, r6, pc}
  400ffe:	bf00      	nop
  401000:	00405814 	.word	0x00405814
  401004:	00405814 	.word	0x00405814
  401008:	0040581c 	.word	0x0040581c
  40100c:	00405814 	.word	0x00405814

00401010 <iprintf>:
  401010:	b40f      	push	{r0, r1, r2, r3}
  401012:	b500      	push	{lr}
  401014:	4907      	ldr	r1, [pc, #28]	; (401034 <iprintf+0x24>)
  401016:	b083      	sub	sp, #12
  401018:	ab04      	add	r3, sp, #16
  40101a:	6808      	ldr	r0, [r1, #0]
  40101c:	f853 2b04 	ldr.w	r2, [r3], #4
  401020:	6881      	ldr	r1, [r0, #8]
  401022:	9301      	str	r3, [sp, #4]
  401024:	f000 f9fa 	bl	40141c <_vfiprintf_r>
  401028:	b003      	add	sp, #12
  40102a:	f85d eb04 	ldr.w	lr, [sp], #4
  40102e:	b004      	add	sp, #16
  401030:	4770      	bx	lr
  401032:	bf00      	nop
  401034:	20400018 	.word	0x20400018

00401038 <iscanf>:
  401038:	b40f      	push	{r0, r1, r2, r3}
  40103a:	b500      	push	{lr}
  40103c:	4907      	ldr	r1, [pc, #28]	; (40105c <iscanf+0x24>)
  40103e:	b083      	sub	sp, #12
  401040:	ab04      	add	r3, sp, #16
  401042:	6808      	ldr	r0, [r1, #0]
  401044:	f853 2b04 	ldr.w	r2, [r3], #4
  401048:	6841      	ldr	r1, [r0, #4]
  40104a:	9301      	str	r3, [sp, #4]
  40104c:	f001 f870 	bl	402130 <__svfiscanf_r>
  401050:	b003      	add	sp, #12
  401052:	f85d eb04 	ldr.w	lr, [sp], #4
  401056:	b004      	add	sp, #16
  401058:	4770      	bx	lr
  40105a:	bf00      	nop
  40105c:	20400018 	.word	0x20400018

00401060 <memset>:
  401060:	b470      	push	{r4, r5, r6}
  401062:	0786      	lsls	r6, r0, #30
  401064:	d046      	beq.n	4010f4 <memset+0x94>
  401066:	1e54      	subs	r4, r2, #1
  401068:	2a00      	cmp	r2, #0
  40106a:	d041      	beq.n	4010f0 <memset+0x90>
  40106c:	b2ca      	uxtb	r2, r1
  40106e:	4603      	mov	r3, r0
  401070:	e002      	b.n	401078 <memset+0x18>
  401072:	f114 34ff 	adds.w	r4, r4, #4294967295
  401076:	d33b      	bcc.n	4010f0 <memset+0x90>
  401078:	f803 2b01 	strb.w	r2, [r3], #1
  40107c:	079d      	lsls	r5, r3, #30
  40107e:	d1f8      	bne.n	401072 <memset+0x12>
  401080:	2c03      	cmp	r4, #3
  401082:	d92e      	bls.n	4010e2 <memset+0x82>
  401084:	b2cd      	uxtb	r5, r1
  401086:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40108a:	2c0f      	cmp	r4, #15
  40108c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401090:	d919      	bls.n	4010c6 <memset+0x66>
  401092:	f103 0210 	add.w	r2, r3, #16
  401096:	4626      	mov	r6, r4
  401098:	3e10      	subs	r6, #16
  40109a:	2e0f      	cmp	r6, #15
  40109c:	f842 5c10 	str.w	r5, [r2, #-16]
  4010a0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4010a4:	f842 5c08 	str.w	r5, [r2, #-8]
  4010a8:	f842 5c04 	str.w	r5, [r2, #-4]
  4010ac:	f102 0210 	add.w	r2, r2, #16
  4010b0:	d8f2      	bhi.n	401098 <memset+0x38>
  4010b2:	f1a4 0210 	sub.w	r2, r4, #16
  4010b6:	f022 020f 	bic.w	r2, r2, #15
  4010ba:	f004 040f 	and.w	r4, r4, #15
  4010be:	3210      	adds	r2, #16
  4010c0:	2c03      	cmp	r4, #3
  4010c2:	4413      	add	r3, r2
  4010c4:	d90d      	bls.n	4010e2 <memset+0x82>
  4010c6:	461e      	mov	r6, r3
  4010c8:	4622      	mov	r2, r4
  4010ca:	3a04      	subs	r2, #4
  4010cc:	2a03      	cmp	r2, #3
  4010ce:	f846 5b04 	str.w	r5, [r6], #4
  4010d2:	d8fa      	bhi.n	4010ca <memset+0x6a>
  4010d4:	1f22      	subs	r2, r4, #4
  4010d6:	f022 0203 	bic.w	r2, r2, #3
  4010da:	3204      	adds	r2, #4
  4010dc:	4413      	add	r3, r2
  4010de:	f004 0403 	and.w	r4, r4, #3
  4010e2:	b12c      	cbz	r4, 4010f0 <memset+0x90>
  4010e4:	b2c9      	uxtb	r1, r1
  4010e6:	441c      	add	r4, r3
  4010e8:	f803 1b01 	strb.w	r1, [r3], #1
  4010ec:	429c      	cmp	r4, r3
  4010ee:	d1fb      	bne.n	4010e8 <memset+0x88>
  4010f0:	bc70      	pop	{r4, r5, r6}
  4010f2:	4770      	bx	lr
  4010f4:	4614      	mov	r4, r2
  4010f6:	4603      	mov	r3, r0
  4010f8:	e7c2      	b.n	401080 <memset+0x20>
  4010fa:	bf00      	nop

004010fc <setbuf>:
  4010fc:	2900      	cmp	r1, #0
  4010fe:	bf0c      	ite	eq
  401100:	2202      	moveq	r2, #2
  401102:	2200      	movne	r2, #0
  401104:	f44f 6380 	mov.w	r3, #1024	; 0x400
  401108:	f000 b800 	b.w	40110c <setvbuf>

0040110c <setvbuf>:
  40110c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401110:	4c61      	ldr	r4, [pc, #388]	; (401298 <setvbuf+0x18c>)
  401112:	6825      	ldr	r5, [r4, #0]
  401114:	b083      	sub	sp, #12
  401116:	4604      	mov	r4, r0
  401118:	460f      	mov	r7, r1
  40111a:	4690      	mov	r8, r2
  40111c:	461e      	mov	r6, r3
  40111e:	b115      	cbz	r5, 401126 <setvbuf+0x1a>
  401120:	6bab      	ldr	r3, [r5, #56]	; 0x38
  401122:	2b00      	cmp	r3, #0
  401124:	d064      	beq.n	4011f0 <setvbuf+0xe4>
  401126:	f1b8 0f02 	cmp.w	r8, #2
  40112a:	d006      	beq.n	40113a <setvbuf+0x2e>
  40112c:	f1b8 0f01 	cmp.w	r8, #1
  401130:	f200 809f 	bhi.w	401272 <setvbuf+0x166>
  401134:	2e00      	cmp	r6, #0
  401136:	f2c0 809c 	blt.w	401272 <setvbuf+0x166>
  40113a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40113c:	07d8      	lsls	r0, r3, #31
  40113e:	d534      	bpl.n	4011aa <setvbuf+0x9e>
  401140:	4621      	mov	r1, r4
  401142:	4628      	mov	r0, r5
  401144:	f001 fe12 	bl	402d6c <_fflush_r>
  401148:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40114a:	b141      	cbz	r1, 40115e <setvbuf+0x52>
  40114c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  401150:	4299      	cmp	r1, r3
  401152:	d002      	beq.n	40115a <setvbuf+0x4e>
  401154:	4628      	mov	r0, r5
  401156:	f002 f87b 	bl	403250 <_free_r>
  40115a:	2300      	movs	r3, #0
  40115c:	6323      	str	r3, [r4, #48]	; 0x30
  40115e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  401162:	2200      	movs	r2, #0
  401164:	61a2      	str	r2, [r4, #24]
  401166:	6062      	str	r2, [r4, #4]
  401168:	061a      	lsls	r2, r3, #24
  40116a:	d43a      	bmi.n	4011e2 <setvbuf+0xd6>
  40116c:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  401170:	f023 0303 	bic.w	r3, r3, #3
  401174:	f1b8 0f02 	cmp.w	r8, #2
  401178:	81a3      	strh	r3, [r4, #12]
  40117a:	d01d      	beq.n	4011b8 <setvbuf+0xac>
  40117c:	ab01      	add	r3, sp, #4
  40117e:	466a      	mov	r2, sp
  401180:	4621      	mov	r1, r4
  401182:	4628      	mov	r0, r5
  401184:	f002 fb48 	bl	403818 <__swhatbuf_r>
  401188:	89a3      	ldrh	r3, [r4, #12]
  40118a:	4318      	orrs	r0, r3
  40118c:	81a0      	strh	r0, [r4, #12]
  40118e:	2e00      	cmp	r6, #0
  401190:	d132      	bne.n	4011f8 <setvbuf+0xec>
  401192:	9e00      	ldr	r6, [sp, #0]
  401194:	4630      	mov	r0, r6
  401196:	f002 fbb7 	bl	403908 <malloc>
  40119a:	4607      	mov	r7, r0
  40119c:	2800      	cmp	r0, #0
  40119e:	d06b      	beq.n	401278 <setvbuf+0x16c>
  4011a0:	89a3      	ldrh	r3, [r4, #12]
  4011a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4011a6:	81a3      	strh	r3, [r4, #12]
  4011a8:	e028      	b.n	4011fc <setvbuf+0xf0>
  4011aa:	89a3      	ldrh	r3, [r4, #12]
  4011ac:	0599      	lsls	r1, r3, #22
  4011ae:	d4c7      	bmi.n	401140 <setvbuf+0x34>
  4011b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4011b2:	f002 fb2d 	bl	403810 <__retarget_lock_acquire_recursive>
  4011b6:	e7c3      	b.n	401140 <setvbuf+0x34>
  4011b8:	2500      	movs	r5, #0
  4011ba:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4011bc:	2600      	movs	r6, #0
  4011be:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4011c2:	f043 0302 	orr.w	r3, r3, #2
  4011c6:	2001      	movs	r0, #1
  4011c8:	60a6      	str	r6, [r4, #8]
  4011ca:	07ce      	lsls	r6, r1, #31
  4011cc:	81a3      	strh	r3, [r4, #12]
  4011ce:	6022      	str	r2, [r4, #0]
  4011d0:	6122      	str	r2, [r4, #16]
  4011d2:	6160      	str	r0, [r4, #20]
  4011d4:	d401      	bmi.n	4011da <setvbuf+0xce>
  4011d6:	0598      	lsls	r0, r3, #22
  4011d8:	d53e      	bpl.n	401258 <setvbuf+0x14c>
  4011da:	4628      	mov	r0, r5
  4011dc:	b003      	add	sp, #12
  4011de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4011e2:	6921      	ldr	r1, [r4, #16]
  4011e4:	4628      	mov	r0, r5
  4011e6:	f002 f833 	bl	403250 <_free_r>
  4011ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4011ee:	e7bd      	b.n	40116c <setvbuf+0x60>
  4011f0:	4628      	mov	r0, r5
  4011f2:	f001 fe25 	bl	402e40 <__sinit>
  4011f6:	e796      	b.n	401126 <setvbuf+0x1a>
  4011f8:	2f00      	cmp	r7, #0
  4011fa:	d0cb      	beq.n	401194 <setvbuf+0x88>
  4011fc:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4011fe:	2b00      	cmp	r3, #0
  401200:	d033      	beq.n	40126a <setvbuf+0x15e>
  401202:	9b00      	ldr	r3, [sp, #0]
  401204:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  401208:	6027      	str	r7, [r4, #0]
  40120a:	429e      	cmp	r6, r3
  40120c:	bf1c      	itt	ne
  40120e:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  401212:	81a2      	strhne	r2, [r4, #12]
  401214:	f1b8 0f01 	cmp.w	r8, #1
  401218:	bf04      	itt	eq
  40121a:	f042 0201 	orreq.w	r2, r2, #1
  40121e:	81a2      	strheq	r2, [r4, #12]
  401220:	b292      	uxth	r2, r2
  401222:	f012 0308 	ands.w	r3, r2, #8
  401226:	6127      	str	r7, [r4, #16]
  401228:	6166      	str	r6, [r4, #20]
  40122a:	d00e      	beq.n	40124a <setvbuf+0x13e>
  40122c:	07d1      	lsls	r1, r2, #31
  40122e:	d51a      	bpl.n	401266 <setvbuf+0x15a>
  401230:	6e65      	ldr	r5, [r4, #100]	; 0x64
  401232:	4276      	negs	r6, r6
  401234:	2300      	movs	r3, #0
  401236:	f015 0501 	ands.w	r5, r5, #1
  40123a:	61a6      	str	r6, [r4, #24]
  40123c:	60a3      	str	r3, [r4, #8]
  40123e:	d009      	beq.n	401254 <setvbuf+0x148>
  401240:	2500      	movs	r5, #0
  401242:	4628      	mov	r0, r5
  401244:	b003      	add	sp, #12
  401246:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  40124a:	60a3      	str	r3, [r4, #8]
  40124c:	6e65      	ldr	r5, [r4, #100]	; 0x64
  40124e:	f015 0501 	ands.w	r5, r5, #1
  401252:	d1f5      	bne.n	401240 <setvbuf+0x134>
  401254:	0593      	lsls	r3, r2, #22
  401256:	d4c0      	bmi.n	4011da <setvbuf+0xce>
  401258:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40125a:	f002 fadb 	bl	403814 <__retarget_lock_release_recursive>
  40125e:	4628      	mov	r0, r5
  401260:	b003      	add	sp, #12
  401262:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401266:	60a6      	str	r6, [r4, #8]
  401268:	e7f0      	b.n	40124c <setvbuf+0x140>
  40126a:	4628      	mov	r0, r5
  40126c:	f001 fde8 	bl	402e40 <__sinit>
  401270:	e7c7      	b.n	401202 <setvbuf+0xf6>
  401272:	f04f 35ff 	mov.w	r5, #4294967295
  401276:	e7b0      	b.n	4011da <setvbuf+0xce>
  401278:	f8dd 9000 	ldr.w	r9, [sp]
  40127c:	45b1      	cmp	r9, r6
  40127e:	d004      	beq.n	40128a <setvbuf+0x17e>
  401280:	4648      	mov	r0, r9
  401282:	f002 fb41 	bl	403908 <malloc>
  401286:	4607      	mov	r7, r0
  401288:	b920      	cbnz	r0, 401294 <setvbuf+0x188>
  40128a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40128e:	f04f 35ff 	mov.w	r5, #4294967295
  401292:	e792      	b.n	4011ba <setvbuf+0xae>
  401294:	464e      	mov	r6, r9
  401296:	e783      	b.n	4011a0 <setvbuf+0x94>
  401298:	20400018 	.word	0x20400018
	...

004012c0 <strlen>:
  4012c0:	f890 f000 	pld	[r0]
  4012c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4012c8:	f020 0107 	bic.w	r1, r0, #7
  4012cc:	f06f 0c00 	mvn.w	ip, #0
  4012d0:	f010 0407 	ands.w	r4, r0, #7
  4012d4:	f891 f020 	pld	[r1, #32]
  4012d8:	f040 8049 	bne.w	40136e <strlen+0xae>
  4012dc:	f04f 0400 	mov.w	r4, #0
  4012e0:	f06f 0007 	mvn.w	r0, #7
  4012e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4012e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4012ec:	f100 0008 	add.w	r0, r0, #8
  4012f0:	fa82 f24c 	uadd8	r2, r2, ip
  4012f4:	faa4 f28c 	sel	r2, r4, ip
  4012f8:	fa83 f34c 	uadd8	r3, r3, ip
  4012fc:	faa2 f38c 	sel	r3, r2, ip
  401300:	bb4b      	cbnz	r3, 401356 <strlen+0x96>
  401302:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  401306:	fa82 f24c 	uadd8	r2, r2, ip
  40130a:	f100 0008 	add.w	r0, r0, #8
  40130e:	faa4 f28c 	sel	r2, r4, ip
  401312:	fa83 f34c 	uadd8	r3, r3, ip
  401316:	faa2 f38c 	sel	r3, r2, ip
  40131a:	b9e3      	cbnz	r3, 401356 <strlen+0x96>
  40131c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  401320:	fa82 f24c 	uadd8	r2, r2, ip
  401324:	f100 0008 	add.w	r0, r0, #8
  401328:	faa4 f28c 	sel	r2, r4, ip
  40132c:	fa83 f34c 	uadd8	r3, r3, ip
  401330:	faa2 f38c 	sel	r3, r2, ip
  401334:	b97b      	cbnz	r3, 401356 <strlen+0x96>
  401336:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40133a:	f101 0120 	add.w	r1, r1, #32
  40133e:	fa82 f24c 	uadd8	r2, r2, ip
  401342:	f100 0008 	add.w	r0, r0, #8
  401346:	faa4 f28c 	sel	r2, r4, ip
  40134a:	fa83 f34c 	uadd8	r3, r3, ip
  40134e:	faa2 f38c 	sel	r3, r2, ip
  401352:	2b00      	cmp	r3, #0
  401354:	d0c6      	beq.n	4012e4 <strlen+0x24>
  401356:	2a00      	cmp	r2, #0
  401358:	bf04      	itt	eq
  40135a:	3004      	addeq	r0, #4
  40135c:	461a      	moveq	r2, r3
  40135e:	ba12      	rev	r2, r2
  401360:	fab2 f282 	clz	r2, r2
  401364:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  401368:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40136c:	4770      	bx	lr
  40136e:	e9d1 2300 	ldrd	r2, r3, [r1]
  401372:	f004 0503 	and.w	r5, r4, #3
  401376:	f1c4 0000 	rsb	r0, r4, #0
  40137a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40137e:	f014 0f04 	tst.w	r4, #4
  401382:	f891 f040 	pld	[r1, #64]	; 0x40
  401386:	fa0c f505 	lsl.w	r5, ip, r5
  40138a:	ea62 0205 	orn	r2, r2, r5
  40138e:	bf1c      	itt	ne
  401390:	ea63 0305 	ornne	r3, r3, r5
  401394:	4662      	movne	r2, ip
  401396:	f04f 0400 	mov.w	r4, #0
  40139a:	e7a9      	b.n	4012f0 <strlen+0x30>

0040139c <__sprint_r.part.0>:
  40139c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4013a0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4013a2:	049c      	lsls	r4, r3, #18
  4013a4:	4693      	mov	fp, r2
  4013a6:	d52f      	bpl.n	401408 <__sprint_r.part.0+0x6c>
  4013a8:	6893      	ldr	r3, [r2, #8]
  4013aa:	6812      	ldr	r2, [r2, #0]
  4013ac:	b353      	cbz	r3, 401404 <__sprint_r.part.0+0x68>
  4013ae:	460e      	mov	r6, r1
  4013b0:	4607      	mov	r7, r0
  4013b2:	f102 0908 	add.w	r9, r2, #8
  4013b6:	e919 0420 	ldmdb	r9, {r5, sl}
  4013ba:	ea5f 089a 	movs.w	r8, sl, lsr #2
  4013be:	d017      	beq.n	4013f0 <__sprint_r.part.0+0x54>
  4013c0:	3d04      	subs	r5, #4
  4013c2:	2400      	movs	r4, #0
  4013c4:	e001      	b.n	4013ca <__sprint_r.part.0+0x2e>
  4013c6:	45a0      	cmp	r8, r4
  4013c8:	d010      	beq.n	4013ec <__sprint_r.part.0+0x50>
  4013ca:	4632      	mov	r2, r6
  4013cc:	f855 1f04 	ldr.w	r1, [r5, #4]!
  4013d0:	4638      	mov	r0, r7
  4013d2:	f001 fdd7 	bl	402f84 <_fputwc_r>
  4013d6:	1c43      	adds	r3, r0, #1
  4013d8:	f104 0401 	add.w	r4, r4, #1
  4013dc:	d1f3      	bne.n	4013c6 <__sprint_r.part.0+0x2a>
  4013de:	2300      	movs	r3, #0
  4013e0:	f8cb 3008 	str.w	r3, [fp, #8]
  4013e4:	f8cb 3004 	str.w	r3, [fp, #4]
  4013e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4013ec:	f8db 3008 	ldr.w	r3, [fp, #8]
  4013f0:	f02a 0a03 	bic.w	sl, sl, #3
  4013f4:	eba3 030a 	sub.w	r3, r3, sl
  4013f8:	f8cb 3008 	str.w	r3, [fp, #8]
  4013fc:	f109 0908 	add.w	r9, r9, #8
  401400:	2b00      	cmp	r3, #0
  401402:	d1d8      	bne.n	4013b6 <__sprint_r.part.0+0x1a>
  401404:	2000      	movs	r0, #0
  401406:	e7ea      	b.n	4013de <__sprint_r.part.0+0x42>
  401408:	f002 f808 	bl	40341c <__sfvwrite_r>
  40140c:	2300      	movs	r3, #0
  40140e:	f8cb 3008 	str.w	r3, [fp, #8]
  401412:	f8cb 3004 	str.w	r3, [fp, #4]
  401416:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40141a:	bf00      	nop

0040141c <_vfiprintf_r>:
  40141c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401420:	b0ad      	sub	sp, #180	; 0xb4
  401422:	461d      	mov	r5, r3
  401424:	468b      	mov	fp, r1
  401426:	4690      	mov	r8, r2
  401428:	9307      	str	r3, [sp, #28]
  40142a:	9006      	str	r0, [sp, #24]
  40142c:	b118      	cbz	r0, 401436 <_vfiprintf_r+0x1a>
  40142e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401430:	2b00      	cmp	r3, #0
  401432:	f000 80f3 	beq.w	40161c <_vfiprintf_r+0x200>
  401436:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40143a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40143e:	07df      	lsls	r7, r3, #31
  401440:	b281      	uxth	r1, r0
  401442:	d402      	bmi.n	40144a <_vfiprintf_r+0x2e>
  401444:	058e      	lsls	r6, r1, #22
  401446:	f140 80fc 	bpl.w	401642 <_vfiprintf_r+0x226>
  40144a:	048c      	lsls	r4, r1, #18
  40144c:	d40a      	bmi.n	401464 <_vfiprintf_r+0x48>
  40144e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401452:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  401456:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  40145a:	f8ab 100c 	strh.w	r1, [fp, #12]
  40145e:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  401462:	b289      	uxth	r1, r1
  401464:	0708      	lsls	r0, r1, #28
  401466:	f140 80b3 	bpl.w	4015d0 <_vfiprintf_r+0x1b4>
  40146a:	f8db 3010 	ldr.w	r3, [fp, #16]
  40146e:	2b00      	cmp	r3, #0
  401470:	f000 80ae 	beq.w	4015d0 <_vfiprintf_r+0x1b4>
  401474:	f001 031a 	and.w	r3, r1, #26
  401478:	2b0a      	cmp	r3, #10
  40147a:	f000 80b5 	beq.w	4015e8 <_vfiprintf_r+0x1cc>
  40147e:	2300      	movs	r3, #0
  401480:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  401484:	930b      	str	r3, [sp, #44]	; 0x2c
  401486:	9311      	str	r3, [sp, #68]	; 0x44
  401488:	9310      	str	r3, [sp, #64]	; 0x40
  40148a:	9303      	str	r3, [sp, #12]
  40148c:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  401490:	46ca      	mov	sl, r9
  401492:	f8cd b010 	str.w	fp, [sp, #16]
  401496:	f898 3000 	ldrb.w	r3, [r8]
  40149a:	4644      	mov	r4, r8
  40149c:	b1fb      	cbz	r3, 4014de <_vfiprintf_r+0xc2>
  40149e:	2b25      	cmp	r3, #37	; 0x25
  4014a0:	d102      	bne.n	4014a8 <_vfiprintf_r+0x8c>
  4014a2:	e01c      	b.n	4014de <_vfiprintf_r+0xc2>
  4014a4:	2b25      	cmp	r3, #37	; 0x25
  4014a6:	d003      	beq.n	4014b0 <_vfiprintf_r+0x94>
  4014a8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4014ac:	2b00      	cmp	r3, #0
  4014ae:	d1f9      	bne.n	4014a4 <_vfiprintf_r+0x88>
  4014b0:	eba4 0508 	sub.w	r5, r4, r8
  4014b4:	b19d      	cbz	r5, 4014de <_vfiprintf_r+0xc2>
  4014b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4014b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4014ba:	f8ca 8000 	str.w	r8, [sl]
  4014be:	3301      	adds	r3, #1
  4014c0:	442a      	add	r2, r5
  4014c2:	2b07      	cmp	r3, #7
  4014c4:	f8ca 5004 	str.w	r5, [sl, #4]
  4014c8:	9211      	str	r2, [sp, #68]	; 0x44
  4014ca:	9310      	str	r3, [sp, #64]	; 0x40
  4014cc:	dd7a      	ble.n	4015c4 <_vfiprintf_r+0x1a8>
  4014ce:	2a00      	cmp	r2, #0
  4014d0:	f040 84b0 	bne.w	401e34 <_vfiprintf_r+0xa18>
  4014d4:	9b03      	ldr	r3, [sp, #12]
  4014d6:	9210      	str	r2, [sp, #64]	; 0x40
  4014d8:	442b      	add	r3, r5
  4014da:	46ca      	mov	sl, r9
  4014dc:	9303      	str	r3, [sp, #12]
  4014de:	7823      	ldrb	r3, [r4, #0]
  4014e0:	2b00      	cmp	r3, #0
  4014e2:	f000 83e0 	beq.w	401ca6 <_vfiprintf_r+0x88a>
  4014e6:	2000      	movs	r0, #0
  4014e8:	f04f 0300 	mov.w	r3, #0
  4014ec:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  4014f0:	f104 0801 	add.w	r8, r4, #1
  4014f4:	7862      	ldrb	r2, [r4, #1]
  4014f6:	4605      	mov	r5, r0
  4014f8:	4606      	mov	r6, r0
  4014fa:	4603      	mov	r3, r0
  4014fc:	f04f 34ff 	mov.w	r4, #4294967295
  401500:	f108 0801 	add.w	r8, r8, #1
  401504:	f1a2 0120 	sub.w	r1, r2, #32
  401508:	2958      	cmp	r1, #88	; 0x58
  40150a:	f200 82de 	bhi.w	401aca <_vfiprintf_r+0x6ae>
  40150e:	e8df f011 	tbh	[pc, r1, lsl #1]
  401512:	0221      	.short	0x0221
  401514:	02dc02dc 	.word	0x02dc02dc
  401518:	02dc0229 	.word	0x02dc0229
  40151c:	02dc02dc 	.word	0x02dc02dc
  401520:	02dc02dc 	.word	0x02dc02dc
  401524:	028902dc 	.word	0x028902dc
  401528:	02dc0295 	.word	0x02dc0295
  40152c:	02bd00a2 	.word	0x02bd00a2
  401530:	019f02dc 	.word	0x019f02dc
  401534:	01a401a4 	.word	0x01a401a4
  401538:	01a401a4 	.word	0x01a401a4
  40153c:	01a401a4 	.word	0x01a401a4
  401540:	01a401a4 	.word	0x01a401a4
  401544:	02dc01a4 	.word	0x02dc01a4
  401548:	02dc02dc 	.word	0x02dc02dc
  40154c:	02dc02dc 	.word	0x02dc02dc
  401550:	02dc02dc 	.word	0x02dc02dc
  401554:	02dc02dc 	.word	0x02dc02dc
  401558:	01b202dc 	.word	0x01b202dc
  40155c:	02dc02dc 	.word	0x02dc02dc
  401560:	02dc02dc 	.word	0x02dc02dc
  401564:	02dc02dc 	.word	0x02dc02dc
  401568:	02dc02dc 	.word	0x02dc02dc
  40156c:	02dc02dc 	.word	0x02dc02dc
  401570:	02dc0197 	.word	0x02dc0197
  401574:	02dc02dc 	.word	0x02dc02dc
  401578:	02dc02dc 	.word	0x02dc02dc
  40157c:	02dc019b 	.word	0x02dc019b
  401580:	025302dc 	.word	0x025302dc
  401584:	02dc02dc 	.word	0x02dc02dc
  401588:	02dc02dc 	.word	0x02dc02dc
  40158c:	02dc02dc 	.word	0x02dc02dc
  401590:	02dc02dc 	.word	0x02dc02dc
  401594:	02dc02dc 	.word	0x02dc02dc
  401598:	021b025a 	.word	0x021b025a
  40159c:	02dc02dc 	.word	0x02dc02dc
  4015a0:	026e02dc 	.word	0x026e02dc
  4015a4:	02dc021b 	.word	0x02dc021b
  4015a8:	027302dc 	.word	0x027302dc
  4015ac:	01f502dc 	.word	0x01f502dc
  4015b0:	02090182 	.word	0x02090182
  4015b4:	02dc02d7 	.word	0x02dc02d7
  4015b8:	02dc029a 	.word	0x02dc029a
  4015bc:	02dc00a7 	.word	0x02dc00a7
  4015c0:	022e02dc 	.word	0x022e02dc
  4015c4:	f10a 0a08 	add.w	sl, sl, #8
  4015c8:	9b03      	ldr	r3, [sp, #12]
  4015ca:	442b      	add	r3, r5
  4015cc:	9303      	str	r3, [sp, #12]
  4015ce:	e786      	b.n	4014de <_vfiprintf_r+0xc2>
  4015d0:	4659      	mov	r1, fp
  4015d2:	9806      	ldr	r0, [sp, #24]
  4015d4:	f001 fab6 	bl	402b44 <__swsetup_r>
  4015d8:	bb18      	cbnz	r0, 401622 <_vfiprintf_r+0x206>
  4015da:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  4015de:	f001 031a 	and.w	r3, r1, #26
  4015e2:	2b0a      	cmp	r3, #10
  4015e4:	f47f af4b 	bne.w	40147e <_vfiprintf_r+0x62>
  4015e8:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  4015ec:	2b00      	cmp	r3, #0
  4015ee:	f6ff af46 	blt.w	40147e <_vfiprintf_r+0x62>
  4015f2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4015f6:	07db      	lsls	r3, r3, #31
  4015f8:	d405      	bmi.n	401606 <_vfiprintf_r+0x1ea>
  4015fa:	058f      	lsls	r7, r1, #22
  4015fc:	d403      	bmi.n	401606 <_vfiprintf_r+0x1ea>
  4015fe:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401602:	f002 f907 	bl	403814 <__retarget_lock_release_recursive>
  401606:	462b      	mov	r3, r5
  401608:	4642      	mov	r2, r8
  40160a:	4659      	mov	r1, fp
  40160c:	9806      	ldr	r0, [sp, #24]
  40160e:	f000 fd4d 	bl	4020ac <__sbprintf>
  401612:	9003      	str	r0, [sp, #12]
  401614:	9803      	ldr	r0, [sp, #12]
  401616:	b02d      	add	sp, #180	; 0xb4
  401618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40161c:	f001 fc10 	bl	402e40 <__sinit>
  401620:	e709      	b.n	401436 <_vfiprintf_r+0x1a>
  401622:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401626:	07d9      	lsls	r1, r3, #31
  401628:	d404      	bmi.n	401634 <_vfiprintf_r+0x218>
  40162a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40162e:	059a      	lsls	r2, r3, #22
  401630:	f140 84aa 	bpl.w	401f88 <_vfiprintf_r+0xb6c>
  401634:	f04f 33ff 	mov.w	r3, #4294967295
  401638:	9303      	str	r3, [sp, #12]
  40163a:	9803      	ldr	r0, [sp, #12]
  40163c:	b02d      	add	sp, #180	; 0xb4
  40163e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401642:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401646:	f002 f8e3 	bl	403810 <__retarget_lock_acquire_recursive>
  40164a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40164e:	b281      	uxth	r1, r0
  401650:	e6fb      	b.n	40144a <_vfiprintf_r+0x2e>
  401652:	4276      	negs	r6, r6
  401654:	9207      	str	r2, [sp, #28]
  401656:	f043 0304 	orr.w	r3, r3, #4
  40165a:	f898 2000 	ldrb.w	r2, [r8]
  40165e:	e74f      	b.n	401500 <_vfiprintf_r+0xe4>
  401660:	9608      	str	r6, [sp, #32]
  401662:	069e      	lsls	r6, r3, #26
  401664:	f100 8450 	bmi.w	401f08 <_vfiprintf_r+0xaec>
  401668:	9907      	ldr	r1, [sp, #28]
  40166a:	06dd      	lsls	r5, r3, #27
  40166c:	460a      	mov	r2, r1
  40166e:	f100 83ef 	bmi.w	401e50 <_vfiprintf_r+0xa34>
  401672:	0658      	lsls	r0, r3, #25
  401674:	f140 83ec 	bpl.w	401e50 <_vfiprintf_r+0xa34>
  401678:	880e      	ldrh	r6, [r1, #0]
  40167a:	3104      	adds	r1, #4
  40167c:	2700      	movs	r7, #0
  40167e:	2201      	movs	r2, #1
  401680:	9107      	str	r1, [sp, #28]
  401682:	f04f 0100 	mov.w	r1, #0
  401686:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  40168a:	2500      	movs	r5, #0
  40168c:	1c61      	adds	r1, r4, #1
  40168e:	f000 8116 	beq.w	4018be <_vfiprintf_r+0x4a2>
  401692:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  401696:	9102      	str	r1, [sp, #8]
  401698:	ea56 0107 	orrs.w	r1, r6, r7
  40169c:	f040 8114 	bne.w	4018c8 <_vfiprintf_r+0x4ac>
  4016a0:	2c00      	cmp	r4, #0
  4016a2:	f040 835c 	bne.w	401d5e <_vfiprintf_r+0x942>
  4016a6:	2a00      	cmp	r2, #0
  4016a8:	f040 83b7 	bne.w	401e1a <_vfiprintf_r+0x9fe>
  4016ac:	f013 0301 	ands.w	r3, r3, #1
  4016b0:	9305      	str	r3, [sp, #20]
  4016b2:	f000 8457 	beq.w	401f64 <_vfiprintf_r+0xb48>
  4016b6:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  4016ba:	2330      	movs	r3, #48	; 0x30
  4016bc:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  4016c0:	9b05      	ldr	r3, [sp, #20]
  4016c2:	42a3      	cmp	r3, r4
  4016c4:	bfb8      	it	lt
  4016c6:	4623      	movlt	r3, r4
  4016c8:	9301      	str	r3, [sp, #4]
  4016ca:	b10d      	cbz	r5, 4016d0 <_vfiprintf_r+0x2b4>
  4016cc:	3301      	adds	r3, #1
  4016ce:	9301      	str	r3, [sp, #4]
  4016d0:	9b02      	ldr	r3, [sp, #8]
  4016d2:	f013 0302 	ands.w	r3, r3, #2
  4016d6:	9309      	str	r3, [sp, #36]	; 0x24
  4016d8:	d002      	beq.n	4016e0 <_vfiprintf_r+0x2c4>
  4016da:	9b01      	ldr	r3, [sp, #4]
  4016dc:	3302      	adds	r3, #2
  4016de:	9301      	str	r3, [sp, #4]
  4016e0:	9b02      	ldr	r3, [sp, #8]
  4016e2:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  4016e6:	930a      	str	r3, [sp, #40]	; 0x28
  4016e8:	f040 8217 	bne.w	401b1a <_vfiprintf_r+0x6fe>
  4016ec:	9b08      	ldr	r3, [sp, #32]
  4016ee:	9a01      	ldr	r2, [sp, #4]
  4016f0:	1a9d      	subs	r5, r3, r2
  4016f2:	2d00      	cmp	r5, #0
  4016f4:	f340 8211 	ble.w	401b1a <_vfiprintf_r+0x6fe>
  4016f8:	2d10      	cmp	r5, #16
  4016fa:	f340 8490 	ble.w	40201e <_vfiprintf_r+0xc02>
  4016fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401700:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401702:	4ec4      	ldr	r6, [pc, #784]	; (401a14 <_vfiprintf_r+0x5f8>)
  401704:	46d6      	mov	lr, sl
  401706:	2710      	movs	r7, #16
  401708:	46a2      	mov	sl, r4
  40170a:	4619      	mov	r1, r3
  40170c:	9c06      	ldr	r4, [sp, #24]
  40170e:	e007      	b.n	401720 <_vfiprintf_r+0x304>
  401710:	f101 0c02 	add.w	ip, r1, #2
  401714:	f10e 0e08 	add.w	lr, lr, #8
  401718:	4601      	mov	r1, r0
  40171a:	3d10      	subs	r5, #16
  40171c:	2d10      	cmp	r5, #16
  40171e:	dd11      	ble.n	401744 <_vfiprintf_r+0x328>
  401720:	1c48      	adds	r0, r1, #1
  401722:	3210      	adds	r2, #16
  401724:	2807      	cmp	r0, #7
  401726:	9211      	str	r2, [sp, #68]	; 0x44
  401728:	e88e 00c0 	stmia.w	lr, {r6, r7}
  40172c:	9010      	str	r0, [sp, #64]	; 0x40
  40172e:	ddef      	ble.n	401710 <_vfiprintf_r+0x2f4>
  401730:	2a00      	cmp	r2, #0
  401732:	f040 81e4 	bne.w	401afe <_vfiprintf_r+0x6e2>
  401736:	3d10      	subs	r5, #16
  401738:	2d10      	cmp	r5, #16
  40173a:	4611      	mov	r1, r2
  40173c:	f04f 0c01 	mov.w	ip, #1
  401740:	46ce      	mov	lr, r9
  401742:	dced      	bgt.n	401720 <_vfiprintf_r+0x304>
  401744:	4654      	mov	r4, sl
  401746:	4661      	mov	r1, ip
  401748:	46f2      	mov	sl, lr
  40174a:	442a      	add	r2, r5
  40174c:	2907      	cmp	r1, #7
  40174e:	9211      	str	r2, [sp, #68]	; 0x44
  401750:	f8ca 6000 	str.w	r6, [sl]
  401754:	f8ca 5004 	str.w	r5, [sl, #4]
  401758:	9110      	str	r1, [sp, #64]	; 0x40
  40175a:	f300 82ec 	bgt.w	401d36 <_vfiprintf_r+0x91a>
  40175e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401762:	f10a 0a08 	add.w	sl, sl, #8
  401766:	1c48      	adds	r0, r1, #1
  401768:	2d00      	cmp	r5, #0
  40176a:	f040 81de 	bne.w	401b2a <_vfiprintf_r+0x70e>
  40176e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401770:	2b00      	cmp	r3, #0
  401772:	f000 81f8 	beq.w	401b66 <_vfiprintf_r+0x74a>
  401776:	3202      	adds	r2, #2
  401778:	a90e      	add	r1, sp, #56	; 0x38
  40177a:	2302      	movs	r3, #2
  40177c:	2807      	cmp	r0, #7
  40177e:	9211      	str	r2, [sp, #68]	; 0x44
  401780:	9010      	str	r0, [sp, #64]	; 0x40
  401782:	e88a 000a 	stmia.w	sl, {r1, r3}
  401786:	f340 81ea 	ble.w	401b5e <_vfiprintf_r+0x742>
  40178a:	2a00      	cmp	r2, #0
  40178c:	f040 838c 	bne.w	401ea8 <_vfiprintf_r+0xa8c>
  401790:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401792:	2b80      	cmp	r3, #128	; 0x80
  401794:	f04f 0001 	mov.w	r0, #1
  401798:	4611      	mov	r1, r2
  40179a:	46ca      	mov	sl, r9
  40179c:	f040 81e7 	bne.w	401b6e <_vfiprintf_r+0x752>
  4017a0:	9b08      	ldr	r3, [sp, #32]
  4017a2:	9d01      	ldr	r5, [sp, #4]
  4017a4:	1b5e      	subs	r6, r3, r5
  4017a6:	2e00      	cmp	r6, #0
  4017a8:	f340 81e1 	ble.w	401b6e <_vfiprintf_r+0x752>
  4017ac:	2e10      	cmp	r6, #16
  4017ae:	4d9a      	ldr	r5, [pc, #616]	; (401a18 <_vfiprintf_r+0x5fc>)
  4017b0:	f340 8450 	ble.w	402054 <_vfiprintf_r+0xc38>
  4017b4:	46d4      	mov	ip, sl
  4017b6:	2710      	movs	r7, #16
  4017b8:	46a2      	mov	sl, r4
  4017ba:	9c06      	ldr	r4, [sp, #24]
  4017bc:	e007      	b.n	4017ce <_vfiprintf_r+0x3b2>
  4017be:	f101 0e02 	add.w	lr, r1, #2
  4017c2:	f10c 0c08 	add.w	ip, ip, #8
  4017c6:	4601      	mov	r1, r0
  4017c8:	3e10      	subs	r6, #16
  4017ca:	2e10      	cmp	r6, #16
  4017cc:	dd11      	ble.n	4017f2 <_vfiprintf_r+0x3d6>
  4017ce:	1c48      	adds	r0, r1, #1
  4017d0:	3210      	adds	r2, #16
  4017d2:	2807      	cmp	r0, #7
  4017d4:	9211      	str	r2, [sp, #68]	; 0x44
  4017d6:	e88c 00a0 	stmia.w	ip, {r5, r7}
  4017da:	9010      	str	r0, [sp, #64]	; 0x40
  4017dc:	ddef      	ble.n	4017be <_vfiprintf_r+0x3a2>
  4017de:	2a00      	cmp	r2, #0
  4017e0:	f040 829d 	bne.w	401d1e <_vfiprintf_r+0x902>
  4017e4:	3e10      	subs	r6, #16
  4017e6:	2e10      	cmp	r6, #16
  4017e8:	f04f 0e01 	mov.w	lr, #1
  4017ec:	4611      	mov	r1, r2
  4017ee:	46cc      	mov	ip, r9
  4017f0:	dced      	bgt.n	4017ce <_vfiprintf_r+0x3b2>
  4017f2:	4654      	mov	r4, sl
  4017f4:	46e2      	mov	sl, ip
  4017f6:	4432      	add	r2, r6
  4017f8:	f1be 0f07 	cmp.w	lr, #7
  4017fc:	9211      	str	r2, [sp, #68]	; 0x44
  4017fe:	e88a 0060 	stmia.w	sl, {r5, r6}
  401802:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  401806:	f300 8369 	bgt.w	401edc <_vfiprintf_r+0xac0>
  40180a:	f10a 0a08 	add.w	sl, sl, #8
  40180e:	f10e 0001 	add.w	r0, lr, #1
  401812:	4671      	mov	r1, lr
  401814:	e1ab      	b.n	401b6e <_vfiprintf_r+0x752>
  401816:	9608      	str	r6, [sp, #32]
  401818:	f013 0220 	ands.w	r2, r3, #32
  40181c:	f040 838c 	bne.w	401f38 <_vfiprintf_r+0xb1c>
  401820:	f013 0110 	ands.w	r1, r3, #16
  401824:	f040 831a 	bne.w	401e5c <_vfiprintf_r+0xa40>
  401828:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  40182c:	f000 8316 	beq.w	401e5c <_vfiprintf_r+0xa40>
  401830:	9807      	ldr	r0, [sp, #28]
  401832:	460a      	mov	r2, r1
  401834:	4601      	mov	r1, r0
  401836:	3104      	adds	r1, #4
  401838:	8806      	ldrh	r6, [r0, #0]
  40183a:	9107      	str	r1, [sp, #28]
  40183c:	2700      	movs	r7, #0
  40183e:	e720      	b.n	401682 <_vfiprintf_r+0x266>
  401840:	9608      	str	r6, [sp, #32]
  401842:	f043 0310 	orr.w	r3, r3, #16
  401846:	e7e7      	b.n	401818 <_vfiprintf_r+0x3fc>
  401848:	9608      	str	r6, [sp, #32]
  40184a:	f043 0310 	orr.w	r3, r3, #16
  40184e:	e708      	b.n	401662 <_vfiprintf_r+0x246>
  401850:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  401854:	f898 2000 	ldrb.w	r2, [r8]
  401858:	e652      	b.n	401500 <_vfiprintf_r+0xe4>
  40185a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40185e:	2600      	movs	r6, #0
  401860:	f818 2b01 	ldrb.w	r2, [r8], #1
  401864:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  401868:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  40186c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401870:	2909      	cmp	r1, #9
  401872:	d9f5      	bls.n	401860 <_vfiprintf_r+0x444>
  401874:	e646      	b.n	401504 <_vfiprintf_r+0xe8>
  401876:	9608      	str	r6, [sp, #32]
  401878:	2800      	cmp	r0, #0
  40187a:	f040 8408 	bne.w	40208e <_vfiprintf_r+0xc72>
  40187e:	f043 0310 	orr.w	r3, r3, #16
  401882:	069e      	lsls	r6, r3, #26
  401884:	f100 834c 	bmi.w	401f20 <_vfiprintf_r+0xb04>
  401888:	06dd      	lsls	r5, r3, #27
  40188a:	f100 82f3 	bmi.w	401e74 <_vfiprintf_r+0xa58>
  40188e:	0658      	lsls	r0, r3, #25
  401890:	f140 82f0 	bpl.w	401e74 <_vfiprintf_r+0xa58>
  401894:	9d07      	ldr	r5, [sp, #28]
  401896:	f9b5 6000 	ldrsh.w	r6, [r5]
  40189a:	462a      	mov	r2, r5
  40189c:	17f7      	asrs	r7, r6, #31
  40189e:	3204      	adds	r2, #4
  4018a0:	4630      	mov	r0, r6
  4018a2:	4639      	mov	r1, r7
  4018a4:	9207      	str	r2, [sp, #28]
  4018a6:	2800      	cmp	r0, #0
  4018a8:	f171 0200 	sbcs.w	r2, r1, #0
  4018ac:	f2c0 835d 	blt.w	401f6a <_vfiprintf_r+0xb4e>
  4018b0:	1c61      	adds	r1, r4, #1
  4018b2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4018b6:	f04f 0201 	mov.w	r2, #1
  4018ba:	f47f aeea 	bne.w	401692 <_vfiprintf_r+0x276>
  4018be:	ea56 0107 	orrs.w	r1, r6, r7
  4018c2:	f000 824d 	beq.w	401d60 <_vfiprintf_r+0x944>
  4018c6:	9302      	str	r3, [sp, #8]
  4018c8:	2a01      	cmp	r2, #1
  4018ca:	f000 828c 	beq.w	401de6 <_vfiprintf_r+0x9ca>
  4018ce:	2a02      	cmp	r2, #2
  4018d0:	f040 825c 	bne.w	401d8c <_vfiprintf_r+0x970>
  4018d4:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4018d6:	46cb      	mov	fp, r9
  4018d8:	0933      	lsrs	r3, r6, #4
  4018da:	f006 010f 	and.w	r1, r6, #15
  4018de:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  4018e2:	093a      	lsrs	r2, r7, #4
  4018e4:	461e      	mov	r6, r3
  4018e6:	4617      	mov	r7, r2
  4018e8:	5c43      	ldrb	r3, [r0, r1]
  4018ea:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  4018ee:	ea56 0307 	orrs.w	r3, r6, r7
  4018f2:	d1f1      	bne.n	4018d8 <_vfiprintf_r+0x4bc>
  4018f4:	eba9 030b 	sub.w	r3, r9, fp
  4018f8:	9305      	str	r3, [sp, #20]
  4018fa:	e6e1      	b.n	4016c0 <_vfiprintf_r+0x2a4>
  4018fc:	2800      	cmp	r0, #0
  4018fe:	f040 83c0 	bne.w	402082 <_vfiprintf_r+0xc66>
  401902:	0699      	lsls	r1, r3, #26
  401904:	f100 8367 	bmi.w	401fd6 <_vfiprintf_r+0xbba>
  401908:	06da      	lsls	r2, r3, #27
  40190a:	f100 80f1 	bmi.w	401af0 <_vfiprintf_r+0x6d4>
  40190e:	065b      	lsls	r3, r3, #25
  401910:	f140 80ee 	bpl.w	401af0 <_vfiprintf_r+0x6d4>
  401914:	9a07      	ldr	r2, [sp, #28]
  401916:	6813      	ldr	r3, [r2, #0]
  401918:	3204      	adds	r2, #4
  40191a:	9207      	str	r2, [sp, #28]
  40191c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  401920:	801a      	strh	r2, [r3, #0]
  401922:	e5b8      	b.n	401496 <_vfiprintf_r+0x7a>
  401924:	9807      	ldr	r0, [sp, #28]
  401926:	4a3d      	ldr	r2, [pc, #244]	; (401a1c <_vfiprintf_r+0x600>)
  401928:	9608      	str	r6, [sp, #32]
  40192a:	920b      	str	r2, [sp, #44]	; 0x2c
  40192c:	6806      	ldr	r6, [r0, #0]
  40192e:	2278      	movs	r2, #120	; 0x78
  401930:	2130      	movs	r1, #48	; 0x30
  401932:	3004      	adds	r0, #4
  401934:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  401938:	f043 0302 	orr.w	r3, r3, #2
  40193c:	9007      	str	r0, [sp, #28]
  40193e:	2700      	movs	r7, #0
  401940:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  401944:	2202      	movs	r2, #2
  401946:	e69c      	b.n	401682 <_vfiprintf_r+0x266>
  401948:	9608      	str	r6, [sp, #32]
  40194a:	2800      	cmp	r0, #0
  40194c:	d099      	beq.n	401882 <_vfiprintf_r+0x466>
  40194e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401952:	e796      	b.n	401882 <_vfiprintf_r+0x466>
  401954:	f898 2000 	ldrb.w	r2, [r8]
  401958:	2d00      	cmp	r5, #0
  40195a:	f47f add1 	bne.w	401500 <_vfiprintf_r+0xe4>
  40195e:	2001      	movs	r0, #1
  401960:	2520      	movs	r5, #32
  401962:	e5cd      	b.n	401500 <_vfiprintf_r+0xe4>
  401964:	f043 0301 	orr.w	r3, r3, #1
  401968:	f898 2000 	ldrb.w	r2, [r8]
  40196c:	e5c8      	b.n	401500 <_vfiprintf_r+0xe4>
  40196e:	9608      	str	r6, [sp, #32]
  401970:	2800      	cmp	r0, #0
  401972:	f040 8393 	bne.w	40209c <_vfiprintf_r+0xc80>
  401976:	4929      	ldr	r1, [pc, #164]	; (401a1c <_vfiprintf_r+0x600>)
  401978:	910b      	str	r1, [sp, #44]	; 0x2c
  40197a:	069f      	lsls	r7, r3, #26
  40197c:	f100 82e8 	bmi.w	401f50 <_vfiprintf_r+0xb34>
  401980:	9807      	ldr	r0, [sp, #28]
  401982:	06de      	lsls	r6, r3, #27
  401984:	4601      	mov	r1, r0
  401986:	f100 8270 	bmi.w	401e6a <_vfiprintf_r+0xa4e>
  40198a:	065d      	lsls	r5, r3, #25
  40198c:	f140 826d 	bpl.w	401e6a <_vfiprintf_r+0xa4e>
  401990:	3104      	adds	r1, #4
  401992:	8806      	ldrh	r6, [r0, #0]
  401994:	9107      	str	r1, [sp, #28]
  401996:	2700      	movs	r7, #0
  401998:	07d8      	lsls	r0, r3, #31
  40199a:	f140 8222 	bpl.w	401de2 <_vfiprintf_r+0x9c6>
  40199e:	ea56 0107 	orrs.w	r1, r6, r7
  4019a2:	f000 821e 	beq.w	401de2 <_vfiprintf_r+0x9c6>
  4019a6:	2130      	movs	r1, #48	; 0x30
  4019a8:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4019ac:	f043 0302 	orr.w	r3, r3, #2
  4019b0:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  4019b4:	2202      	movs	r2, #2
  4019b6:	e664      	b.n	401682 <_vfiprintf_r+0x266>
  4019b8:	9608      	str	r6, [sp, #32]
  4019ba:	2800      	cmp	r0, #0
  4019bc:	f040 836b 	bne.w	402096 <_vfiprintf_r+0xc7a>
  4019c0:	4917      	ldr	r1, [pc, #92]	; (401a20 <_vfiprintf_r+0x604>)
  4019c2:	910b      	str	r1, [sp, #44]	; 0x2c
  4019c4:	e7d9      	b.n	40197a <_vfiprintf_r+0x55e>
  4019c6:	9907      	ldr	r1, [sp, #28]
  4019c8:	9608      	str	r6, [sp, #32]
  4019ca:	680a      	ldr	r2, [r1, #0]
  4019cc:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  4019d0:	f04f 0000 	mov.w	r0, #0
  4019d4:	460a      	mov	r2, r1
  4019d6:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  4019da:	3204      	adds	r2, #4
  4019dc:	2001      	movs	r0, #1
  4019de:	9001      	str	r0, [sp, #4]
  4019e0:	9207      	str	r2, [sp, #28]
  4019e2:	9005      	str	r0, [sp, #20]
  4019e4:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  4019e8:	9302      	str	r3, [sp, #8]
  4019ea:	2400      	movs	r4, #0
  4019ec:	e670      	b.n	4016d0 <_vfiprintf_r+0x2b4>
  4019ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4019f2:	f898 2000 	ldrb.w	r2, [r8]
  4019f6:	e583      	b.n	401500 <_vfiprintf_r+0xe4>
  4019f8:	f898 2000 	ldrb.w	r2, [r8]
  4019fc:	2a6c      	cmp	r2, #108	; 0x6c
  4019fe:	bf03      	ittte	eq
  401a00:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  401a04:	f043 0320 	orreq.w	r3, r3, #32
  401a08:	f108 0801 	addeq.w	r8, r8, #1
  401a0c:	f043 0310 	orrne.w	r3, r3, #16
  401a10:	e576      	b.n	401500 <_vfiprintf_r+0xe4>
  401a12:	bf00      	nop
  401a14:	004056b0 	.word	0x004056b0
  401a18:	004056c0 	.word	0x004056c0
  401a1c:	00405694 	.word	0x00405694
  401a20:	00405680 	.word	0x00405680
  401a24:	9907      	ldr	r1, [sp, #28]
  401a26:	680e      	ldr	r6, [r1, #0]
  401a28:	460a      	mov	r2, r1
  401a2a:	2e00      	cmp	r6, #0
  401a2c:	f102 0204 	add.w	r2, r2, #4
  401a30:	f6ff ae0f 	blt.w	401652 <_vfiprintf_r+0x236>
  401a34:	9207      	str	r2, [sp, #28]
  401a36:	f898 2000 	ldrb.w	r2, [r8]
  401a3a:	e561      	b.n	401500 <_vfiprintf_r+0xe4>
  401a3c:	f898 2000 	ldrb.w	r2, [r8]
  401a40:	2001      	movs	r0, #1
  401a42:	252b      	movs	r5, #43	; 0x2b
  401a44:	e55c      	b.n	401500 <_vfiprintf_r+0xe4>
  401a46:	9907      	ldr	r1, [sp, #28]
  401a48:	9608      	str	r6, [sp, #32]
  401a4a:	f8d1 b000 	ldr.w	fp, [r1]
  401a4e:	f04f 0200 	mov.w	r2, #0
  401a52:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401a56:	1d0e      	adds	r6, r1, #4
  401a58:	f1bb 0f00 	cmp.w	fp, #0
  401a5c:	f000 82e5 	beq.w	40202a <_vfiprintf_r+0xc0e>
  401a60:	1c67      	adds	r7, r4, #1
  401a62:	f000 82c4 	beq.w	401fee <_vfiprintf_r+0xbd2>
  401a66:	4622      	mov	r2, r4
  401a68:	2100      	movs	r1, #0
  401a6a:	4658      	mov	r0, fp
  401a6c:	9301      	str	r3, [sp, #4]
  401a6e:	f002 fa47 	bl	403f00 <memchr>
  401a72:	9b01      	ldr	r3, [sp, #4]
  401a74:	2800      	cmp	r0, #0
  401a76:	f000 82e5 	beq.w	402044 <_vfiprintf_r+0xc28>
  401a7a:	eba0 020b 	sub.w	r2, r0, fp
  401a7e:	9205      	str	r2, [sp, #20]
  401a80:	9607      	str	r6, [sp, #28]
  401a82:	9302      	str	r3, [sp, #8]
  401a84:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401a88:	2400      	movs	r4, #0
  401a8a:	e619      	b.n	4016c0 <_vfiprintf_r+0x2a4>
  401a8c:	f898 2000 	ldrb.w	r2, [r8]
  401a90:	2a2a      	cmp	r2, #42	; 0x2a
  401a92:	f108 0701 	add.w	r7, r8, #1
  401a96:	f000 82e9 	beq.w	40206c <_vfiprintf_r+0xc50>
  401a9a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401a9e:	2909      	cmp	r1, #9
  401aa0:	46b8      	mov	r8, r7
  401aa2:	f04f 0400 	mov.w	r4, #0
  401aa6:	f63f ad2d 	bhi.w	401504 <_vfiprintf_r+0xe8>
  401aaa:	f818 2b01 	ldrb.w	r2, [r8], #1
  401aae:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401ab2:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  401ab6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  401aba:	2909      	cmp	r1, #9
  401abc:	d9f5      	bls.n	401aaa <_vfiprintf_r+0x68e>
  401abe:	e521      	b.n	401504 <_vfiprintf_r+0xe8>
  401ac0:	f043 0320 	orr.w	r3, r3, #32
  401ac4:	f898 2000 	ldrb.w	r2, [r8]
  401ac8:	e51a      	b.n	401500 <_vfiprintf_r+0xe4>
  401aca:	9608      	str	r6, [sp, #32]
  401acc:	2800      	cmp	r0, #0
  401ace:	f040 82db 	bne.w	402088 <_vfiprintf_r+0xc6c>
  401ad2:	2a00      	cmp	r2, #0
  401ad4:	f000 80e7 	beq.w	401ca6 <_vfiprintf_r+0x88a>
  401ad8:	2101      	movs	r1, #1
  401ada:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401ade:	f04f 0200 	mov.w	r2, #0
  401ae2:	9101      	str	r1, [sp, #4]
  401ae4:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  401ae8:	9105      	str	r1, [sp, #20]
  401aea:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  401aee:	e77b      	b.n	4019e8 <_vfiprintf_r+0x5cc>
  401af0:	9a07      	ldr	r2, [sp, #28]
  401af2:	6813      	ldr	r3, [r2, #0]
  401af4:	3204      	adds	r2, #4
  401af6:	9207      	str	r2, [sp, #28]
  401af8:	9a03      	ldr	r2, [sp, #12]
  401afa:	601a      	str	r2, [r3, #0]
  401afc:	e4cb      	b.n	401496 <_vfiprintf_r+0x7a>
  401afe:	aa0f      	add	r2, sp, #60	; 0x3c
  401b00:	9904      	ldr	r1, [sp, #16]
  401b02:	4620      	mov	r0, r4
  401b04:	f7ff fc4a 	bl	40139c <__sprint_r.part.0>
  401b08:	2800      	cmp	r0, #0
  401b0a:	f040 8139 	bne.w	401d80 <_vfiprintf_r+0x964>
  401b0e:	9910      	ldr	r1, [sp, #64]	; 0x40
  401b10:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b12:	f101 0c01 	add.w	ip, r1, #1
  401b16:	46ce      	mov	lr, r9
  401b18:	e5ff      	b.n	40171a <_vfiprintf_r+0x2fe>
  401b1a:	9910      	ldr	r1, [sp, #64]	; 0x40
  401b1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401b1e:	1c48      	adds	r0, r1, #1
  401b20:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  401b24:	2d00      	cmp	r5, #0
  401b26:	f43f ae22 	beq.w	40176e <_vfiprintf_r+0x352>
  401b2a:	3201      	adds	r2, #1
  401b2c:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  401b30:	2101      	movs	r1, #1
  401b32:	2807      	cmp	r0, #7
  401b34:	9211      	str	r2, [sp, #68]	; 0x44
  401b36:	9010      	str	r0, [sp, #64]	; 0x40
  401b38:	f8ca 5000 	str.w	r5, [sl]
  401b3c:	f8ca 1004 	str.w	r1, [sl, #4]
  401b40:	f340 8108 	ble.w	401d54 <_vfiprintf_r+0x938>
  401b44:	2a00      	cmp	r2, #0
  401b46:	f040 81bc 	bne.w	401ec2 <_vfiprintf_r+0xaa6>
  401b4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401b4c:	2b00      	cmp	r3, #0
  401b4e:	f43f ae1f 	beq.w	401790 <_vfiprintf_r+0x374>
  401b52:	ab0e      	add	r3, sp, #56	; 0x38
  401b54:	2202      	movs	r2, #2
  401b56:	4608      	mov	r0, r1
  401b58:	931c      	str	r3, [sp, #112]	; 0x70
  401b5a:	921d      	str	r2, [sp, #116]	; 0x74
  401b5c:	46ca      	mov	sl, r9
  401b5e:	4601      	mov	r1, r0
  401b60:	f10a 0a08 	add.w	sl, sl, #8
  401b64:	3001      	adds	r0, #1
  401b66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401b68:	2b80      	cmp	r3, #128	; 0x80
  401b6a:	f43f ae19 	beq.w	4017a0 <_vfiprintf_r+0x384>
  401b6e:	9b05      	ldr	r3, [sp, #20]
  401b70:	1ae4      	subs	r4, r4, r3
  401b72:	2c00      	cmp	r4, #0
  401b74:	dd2e      	ble.n	401bd4 <_vfiprintf_r+0x7b8>
  401b76:	2c10      	cmp	r4, #16
  401b78:	4db3      	ldr	r5, [pc, #716]	; (401e48 <_vfiprintf_r+0xa2c>)
  401b7a:	dd1e      	ble.n	401bba <_vfiprintf_r+0x79e>
  401b7c:	46d6      	mov	lr, sl
  401b7e:	2610      	movs	r6, #16
  401b80:	9f06      	ldr	r7, [sp, #24]
  401b82:	f8dd a010 	ldr.w	sl, [sp, #16]
  401b86:	e006      	b.n	401b96 <_vfiprintf_r+0x77a>
  401b88:	1c88      	adds	r0, r1, #2
  401b8a:	f10e 0e08 	add.w	lr, lr, #8
  401b8e:	4619      	mov	r1, r3
  401b90:	3c10      	subs	r4, #16
  401b92:	2c10      	cmp	r4, #16
  401b94:	dd10      	ble.n	401bb8 <_vfiprintf_r+0x79c>
  401b96:	1c4b      	adds	r3, r1, #1
  401b98:	3210      	adds	r2, #16
  401b9a:	2b07      	cmp	r3, #7
  401b9c:	9211      	str	r2, [sp, #68]	; 0x44
  401b9e:	e88e 0060 	stmia.w	lr, {r5, r6}
  401ba2:	9310      	str	r3, [sp, #64]	; 0x40
  401ba4:	ddf0      	ble.n	401b88 <_vfiprintf_r+0x76c>
  401ba6:	2a00      	cmp	r2, #0
  401ba8:	d165      	bne.n	401c76 <_vfiprintf_r+0x85a>
  401baa:	3c10      	subs	r4, #16
  401bac:	2c10      	cmp	r4, #16
  401bae:	f04f 0001 	mov.w	r0, #1
  401bb2:	4611      	mov	r1, r2
  401bb4:	46ce      	mov	lr, r9
  401bb6:	dcee      	bgt.n	401b96 <_vfiprintf_r+0x77a>
  401bb8:	46f2      	mov	sl, lr
  401bba:	4422      	add	r2, r4
  401bbc:	2807      	cmp	r0, #7
  401bbe:	9211      	str	r2, [sp, #68]	; 0x44
  401bc0:	f8ca 5000 	str.w	r5, [sl]
  401bc4:	f8ca 4004 	str.w	r4, [sl, #4]
  401bc8:	9010      	str	r0, [sp, #64]	; 0x40
  401bca:	f300 8085 	bgt.w	401cd8 <_vfiprintf_r+0x8bc>
  401bce:	f10a 0a08 	add.w	sl, sl, #8
  401bd2:	3001      	adds	r0, #1
  401bd4:	9905      	ldr	r1, [sp, #20]
  401bd6:	f8ca b000 	str.w	fp, [sl]
  401bda:	440a      	add	r2, r1
  401bdc:	2807      	cmp	r0, #7
  401bde:	9211      	str	r2, [sp, #68]	; 0x44
  401be0:	f8ca 1004 	str.w	r1, [sl, #4]
  401be4:	9010      	str	r0, [sp, #64]	; 0x40
  401be6:	f340 8082 	ble.w	401cee <_vfiprintf_r+0x8d2>
  401bea:	2a00      	cmp	r2, #0
  401bec:	f040 8118 	bne.w	401e20 <_vfiprintf_r+0xa04>
  401bf0:	9b02      	ldr	r3, [sp, #8]
  401bf2:	9210      	str	r2, [sp, #64]	; 0x40
  401bf4:	0758      	lsls	r0, r3, #29
  401bf6:	d535      	bpl.n	401c64 <_vfiprintf_r+0x848>
  401bf8:	9b08      	ldr	r3, [sp, #32]
  401bfa:	9901      	ldr	r1, [sp, #4]
  401bfc:	1a5c      	subs	r4, r3, r1
  401bfe:	2c00      	cmp	r4, #0
  401c00:	f340 80e7 	ble.w	401dd2 <_vfiprintf_r+0x9b6>
  401c04:	46ca      	mov	sl, r9
  401c06:	2c10      	cmp	r4, #16
  401c08:	f340 8218 	ble.w	40203c <_vfiprintf_r+0xc20>
  401c0c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401c0e:	4e8f      	ldr	r6, [pc, #572]	; (401e4c <_vfiprintf_r+0xa30>)
  401c10:	9f06      	ldr	r7, [sp, #24]
  401c12:	f8dd b010 	ldr.w	fp, [sp, #16]
  401c16:	2510      	movs	r5, #16
  401c18:	e006      	b.n	401c28 <_vfiprintf_r+0x80c>
  401c1a:	1c88      	adds	r0, r1, #2
  401c1c:	f10a 0a08 	add.w	sl, sl, #8
  401c20:	4619      	mov	r1, r3
  401c22:	3c10      	subs	r4, #16
  401c24:	2c10      	cmp	r4, #16
  401c26:	dd11      	ble.n	401c4c <_vfiprintf_r+0x830>
  401c28:	1c4b      	adds	r3, r1, #1
  401c2a:	3210      	adds	r2, #16
  401c2c:	2b07      	cmp	r3, #7
  401c2e:	9211      	str	r2, [sp, #68]	; 0x44
  401c30:	f8ca 6000 	str.w	r6, [sl]
  401c34:	f8ca 5004 	str.w	r5, [sl, #4]
  401c38:	9310      	str	r3, [sp, #64]	; 0x40
  401c3a:	ddee      	ble.n	401c1a <_vfiprintf_r+0x7fe>
  401c3c:	bb42      	cbnz	r2, 401c90 <_vfiprintf_r+0x874>
  401c3e:	3c10      	subs	r4, #16
  401c40:	2c10      	cmp	r4, #16
  401c42:	f04f 0001 	mov.w	r0, #1
  401c46:	4611      	mov	r1, r2
  401c48:	46ca      	mov	sl, r9
  401c4a:	dced      	bgt.n	401c28 <_vfiprintf_r+0x80c>
  401c4c:	4422      	add	r2, r4
  401c4e:	2807      	cmp	r0, #7
  401c50:	9211      	str	r2, [sp, #68]	; 0x44
  401c52:	f8ca 6000 	str.w	r6, [sl]
  401c56:	f8ca 4004 	str.w	r4, [sl, #4]
  401c5a:	9010      	str	r0, [sp, #64]	; 0x40
  401c5c:	dd51      	ble.n	401d02 <_vfiprintf_r+0x8e6>
  401c5e:	2a00      	cmp	r2, #0
  401c60:	f040 819b 	bne.w	401f9a <_vfiprintf_r+0xb7e>
  401c64:	9b03      	ldr	r3, [sp, #12]
  401c66:	9a08      	ldr	r2, [sp, #32]
  401c68:	9901      	ldr	r1, [sp, #4]
  401c6a:	428a      	cmp	r2, r1
  401c6c:	bfac      	ite	ge
  401c6e:	189b      	addge	r3, r3, r2
  401c70:	185b      	addlt	r3, r3, r1
  401c72:	9303      	str	r3, [sp, #12]
  401c74:	e04e      	b.n	401d14 <_vfiprintf_r+0x8f8>
  401c76:	aa0f      	add	r2, sp, #60	; 0x3c
  401c78:	4651      	mov	r1, sl
  401c7a:	4638      	mov	r0, r7
  401c7c:	f7ff fb8e 	bl	40139c <__sprint_r.part.0>
  401c80:	2800      	cmp	r0, #0
  401c82:	f040 813f 	bne.w	401f04 <_vfiprintf_r+0xae8>
  401c86:	9910      	ldr	r1, [sp, #64]	; 0x40
  401c88:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401c8a:	1c48      	adds	r0, r1, #1
  401c8c:	46ce      	mov	lr, r9
  401c8e:	e77f      	b.n	401b90 <_vfiprintf_r+0x774>
  401c90:	aa0f      	add	r2, sp, #60	; 0x3c
  401c92:	4659      	mov	r1, fp
  401c94:	4638      	mov	r0, r7
  401c96:	f7ff fb81 	bl	40139c <__sprint_r.part.0>
  401c9a:	b960      	cbnz	r0, 401cb6 <_vfiprintf_r+0x89a>
  401c9c:	9910      	ldr	r1, [sp, #64]	; 0x40
  401c9e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401ca0:	1c48      	adds	r0, r1, #1
  401ca2:	46ca      	mov	sl, r9
  401ca4:	e7bd      	b.n	401c22 <_vfiprintf_r+0x806>
  401ca6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401ca8:	f8dd b010 	ldr.w	fp, [sp, #16]
  401cac:	2b00      	cmp	r3, #0
  401cae:	f040 81d4 	bne.w	40205a <_vfiprintf_r+0xc3e>
  401cb2:	2300      	movs	r3, #0
  401cb4:	9310      	str	r3, [sp, #64]	; 0x40
  401cb6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  401cba:	f013 0f01 	tst.w	r3, #1
  401cbe:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401cc2:	d102      	bne.n	401cca <_vfiprintf_r+0x8ae>
  401cc4:	059a      	lsls	r2, r3, #22
  401cc6:	f140 80de 	bpl.w	401e86 <_vfiprintf_r+0xa6a>
  401cca:	065b      	lsls	r3, r3, #25
  401ccc:	f53f acb2 	bmi.w	401634 <_vfiprintf_r+0x218>
  401cd0:	9803      	ldr	r0, [sp, #12]
  401cd2:	b02d      	add	sp, #180	; 0xb4
  401cd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cd8:	2a00      	cmp	r2, #0
  401cda:	f040 8106 	bne.w	401eea <_vfiprintf_r+0xace>
  401cde:	9a05      	ldr	r2, [sp, #20]
  401ce0:	921d      	str	r2, [sp, #116]	; 0x74
  401ce2:	2301      	movs	r3, #1
  401ce4:	9211      	str	r2, [sp, #68]	; 0x44
  401ce6:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  401cea:	9310      	str	r3, [sp, #64]	; 0x40
  401cec:	46ca      	mov	sl, r9
  401cee:	f10a 0a08 	add.w	sl, sl, #8
  401cf2:	9b02      	ldr	r3, [sp, #8]
  401cf4:	0759      	lsls	r1, r3, #29
  401cf6:	d504      	bpl.n	401d02 <_vfiprintf_r+0x8e6>
  401cf8:	9b08      	ldr	r3, [sp, #32]
  401cfa:	9901      	ldr	r1, [sp, #4]
  401cfc:	1a5c      	subs	r4, r3, r1
  401cfe:	2c00      	cmp	r4, #0
  401d00:	dc81      	bgt.n	401c06 <_vfiprintf_r+0x7ea>
  401d02:	9b03      	ldr	r3, [sp, #12]
  401d04:	9908      	ldr	r1, [sp, #32]
  401d06:	9801      	ldr	r0, [sp, #4]
  401d08:	4281      	cmp	r1, r0
  401d0a:	bfac      	ite	ge
  401d0c:	185b      	addge	r3, r3, r1
  401d0e:	181b      	addlt	r3, r3, r0
  401d10:	9303      	str	r3, [sp, #12]
  401d12:	bb72      	cbnz	r2, 401d72 <_vfiprintf_r+0x956>
  401d14:	2300      	movs	r3, #0
  401d16:	9310      	str	r3, [sp, #64]	; 0x40
  401d18:	46ca      	mov	sl, r9
  401d1a:	f7ff bbbc 	b.w	401496 <_vfiprintf_r+0x7a>
  401d1e:	aa0f      	add	r2, sp, #60	; 0x3c
  401d20:	9904      	ldr	r1, [sp, #16]
  401d22:	4620      	mov	r0, r4
  401d24:	f7ff fb3a 	bl	40139c <__sprint_r.part.0>
  401d28:	bb50      	cbnz	r0, 401d80 <_vfiprintf_r+0x964>
  401d2a:	9910      	ldr	r1, [sp, #64]	; 0x40
  401d2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401d2e:	f101 0e01 	add.w	lr, r1, #1
  401d32:	46cc      	mov	ip, r9
  401d34:	e548      	b.n	4017c8 <_vfiprintf_r+0x3ac>
  401d36:	2a00      	cmp	r2, #0
  401d38:	f040 8140 	bne.w	401fbc <_vfiprintf_r+0xba0>
  401d3c:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  401d40:	2900      	cmp	r1, #0
  401d42:	f000 811b 	beq.w	401f7c <_vfiprintf_r+0xb60>
  401d46:	2201      	movs	r2, #1
  401d48:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  401d4c:	4610      	mov	r0, r2
  401d4e:	921d      	str	r2, [sp, #116]	; 0x74
  401d50:	911c      	str	r1, [sp, #112]	; 0x70
  401d52:	46ca      	mov	sl, r9
  401d54:	4601      	mov	r1, r0
  401d56:	f10a 0a08 	add.w	sl, sl, #8
  401d5a:	3001      	adds	r0, #1
  401d5c:	e507      	b.n	40176e <_vfiprintf_r+0x352>
  401d5e:	9b02      	ldr	r3, [sp, #8]
  401d60:	2a01      	cmp	r2, #1
  401d62:	f000 8098 	beq.w	401e96 <_vfiprintf_r+0xa7a>
  401d66:	2a02      	cmp	r2, #2
  401d68:	d10d      	bne.n	401d86 <_vfiprintf_r+0x96a>
  401d6a:	9302      	str	r3, [sp, #8]
  401d6c:	2600      	movs	r6, #0
  401d6e:	2700      	movs	r7, #0
  401d70:	e5b0      	b.n	4018d4 <_vfiprintf_r+0x4b8>
  401d72:	aa0f      	add	r2, sp, #60	; 0x3c
  401d74:	9904      	ldr	r1, [sp, #16]
  401d76:	9806      	ldr	r0, [sp, #24]
  401d78:	f7ff fb10 	bl	40139c <__sprint_r.part.0>
  401d7c:	2800      	cmp	r0, #0
  401d7e:	d0c9      	beq.n	401d14 <_vfiprintf_r+0x8f8>
  401d80:	f8dd b010 	ldr.w	fp, [sp, #16]
  401d84:	e797      	b.n	401cb6 <_vfiprintf_r+0x89a>
  401d86:	9302      	str	r3, [sp, #8]
  401d88:	2600      	movs	r6, #0
  401d8a:	2700      	movs	r7, #0
  401d8c:	4649      	mov	r1, r9
  401d8e:	e000      	b.n	401d92 <_vfiprintf_r+0x976>
  401d90:	4659      	mov	r1, fp
  401d92:	08f2      	lsrs	r2, r6, #3
  401d94:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  401d98:	08f8      	lsrs	r0, r7, #3
  401d9a:	f006 0307 	and.w	r3, r6, #7
  401d9e:	4607      	mov	r7, r0
  401da0:	4616      	mov	r6, r2
  401da2:	3330      	adds	r3, #48	; 0x30
  401da4:	ea56 0207 	orrs.w	r2, r6, r7
  401da8:	f801 3c01 	strb.w	r3, [r1, #-1]
  401dac:	f101 3bff 	add.w	fp, r1, #4294967295
  401db0:	d1ee      	bne.n	401d90 <_vfiprintf_r+0x974>
  401db2:	9a02      	ldr	r2, [sp, #8]
  401db4:	07d6      	lsls	r6, r2, #31
  401db6:	f57f ad9d 	bpl.w	4018f4 <_vfiprintf_r+0x4d8>
  401dba:	2b30      	cmp	r3, #48	; 0x30
  401dbc:	f43f ad9a 	beq.w	4018f4 <_vfiprintf_r+0x4d8>
  401dc0:	3902      	subs	r1, #2
  401dc2:	2330      	movs	r3, #48	; 0x30
  401dc4:	f80b 3c01 	strb.w	r3, [fp, #-1]
  401dc8:	eba9 0301 	sub.w	r3, r9, r1
  401dcc:	9305      	str	r3, [sp, #20]
  401dce:	468b      	mov	fp, r1
  401dd0:	e476      	b.n	4016c0 <_vfiprintf_r+0x2a4>
  401dd2:	9b03      	ldr	r3, [sp, #12]
  401dd4:	9a08      	ldr	r2, [sp, #32]
  401dd6:	428a      	cmp	r2, r1
  401dd8:	bfac      	ite	ge
  401dda:	189b      	addge	r3, r3, r2
  401ddc:	185b      	addlt	r3, r3, r1
  401dde:	9303      	str	r3, [sp, #12]
  401de0:	e798      	b.n	401d14 <_vfiprintf_r+0x8f8>
  401de2:	2202      	movs	r2, #2
  401de4:	e44d      	b.n	401682 <_vfiprintf_r+0x266>
  401de6:	2f00      	cmp	r7, #0
  401de8:	bf08      	it	eq
  401dea:	2e0a      	cmpeq	r6, #10
  401dec:	d352      	bcc.n	401e94 <_vfiprintf_r+0xa78>
  401dee:	46cb      	mov	fp, r9
  401df0:	4630      	mov	r0, r6
  401df2:	4639      	mov	r1, r7
  401df4:	220a      	movs	r2, #10
  401df6:	2300      	movs	r3, #0
  401df8:	f003 fa78 	bl	4052ec <__aeabi_uldivmod>
  401dfc:	3230      	adds	r2, #48	; 0x30
  401dfe:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  401e02:	4630      	mov	r0, r6
  401e04:	4639      	mov	r1, r7
  401e06:	2300      	movs	r3, #0
  401e08:	220a      	movs	r2, #10
  401e0a:	f003 fa6f 	bl	4052ec <__aeabi_uldivmod>
  401e0e:	4606      	mov	r6, r0
  401e10:	460f      	mov	r7, r1
  401e12:	ea56 0307 	orrs.w	r3, r6, r7
  401e16:	d1eb      	bne.n	401df0 <_vfiprintf_r+0x9d4>
  401e18:	e56c      	b.n	4018f4 <_vfiprintf_r+0x4d8>
  401e1a:	9405      	str	r4, [sp, #20]
  401e1c:	46cb      	mov	fp, r9
  401e1e:	e44f      	b.n	4016c0 <_vfiprintf_r+0x2a4>
  401e20:	aa0f      	add	r2, sp, #60	; 0x3c
  401e22:	9904      	ldr	r1, [sp, #16]
  401e24:	9806      	ldr	r0, [sp, #24]
  401e26:	f7ff fab9 	bl	40139c <__sprint_r.part.0>
  401e2a:	2800      	cmp	r0, #0
  401e2c:	d1a8      	bne.n	401d80 <_vfiprintf_r+0x964>
  401e2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401e30:	46ca      	mov	sl, r9
  401e32:	e75e      	b.n	401cf2 <_vfiprintf_r+0x8d6>
  401e34:	aa0f      	add	r2, sp, #60	; 0x3c
  401e36:	9904      	ldr	r1, [sp, #16]
  401e38:	9806      	ldr	r0, [sp, #24]
  401e3a:	f7ff faaf 	bl	40139c <__sprint_r.part.0>
  401e3e:	2800      	cmp	r0, #0
  401e40:	d19e      	bne.n	401d80 <_vfiprintf_r+0x964>
  401e42:	46ca      	mov	sl, r9
  401e44:	f7ff bbc0 	b.w	4015c8 <_vfiprintf_r+0x1ac>
  401e48:	004056c0 	.word	0x004056c0
  401e4c:	004056b0 	.word	0x004056b0
  401e50:	3104      	adds	r1, #4
  401e52:	6816      	ldr	r6, [r2, #0]
  401e54:	9107      	str	r1, [sp, #28]
  401e56:	2201      	movs	r2, #1
  401e58:	2700      	movs	r7, #0
  401e5a:	e412      	b.n	401682 <_vfiprintf_r+0x266>
  401e5c:	9807      	ldr	r0, [sp, #28]
  401e5e:	4601      	mov	r1, r0
  401e60:	3104      	adds	r1, #4
  401e62:	6806      	ldr	r6, [r0, #0]
  401e64:	9107      	str	r1, [sp, #28]
  401e66:	2700      	movs	r7, #0
  401e68:	e40b      	b.n	401682 <_vfiprintf_r+0x266>
  401e6a:	680e      	ldr	r6, [r1, #0]
  401e6c:	3104      	adds	r1, #4
  401e6e:	9107      	str	r1, [sp, #28]
  401e70:	2700      	movs	r7, #0
  401e72:	e591      	b.n	401998 <_vfiprintf_r+0x57c>
  401e74:	9907      	ldr	r1, [sp, #28]
  401e76:	680e      	ldr	r6, [r1, #0]
  401e78:	460a      	mov	r2, r1
  401e7a:	17f7      	asrs	r7, r6, #31
  401e7c:	3204      	adds	r2, #4
  401e7e:	9207      	str	r2, [sp, #28]
  401e80:	4630      	mov	r0, r6
  401e82:	4639      	mov	r1, r7
  401e84:	e50f      	b.n	4018a6 <_vfiprintf_r+0x48a>
  401e86:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401e8a:	f001 fcc3 	bl	403814 <__retarget_lock_release_recursive>
  401e8e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  401e92:	e71a      	b.n	401cca <_vfiprintf_r+0x8ae>
  401e94:	9b02      	ldr	r3, [sp, #8]
  401e96:	9302      	str	r3, [sp, #8]
  401e98:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  401e9c:	3630      	adds	r6, #48	; 0x30
  401e9e:	2301      	movs	r3, #1
  401ea0:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  401ea4:	9305      	str	r3, [sp, #20]
  401ea6:	e40b      	b.n	4016c0 <_vfiprintf_r+0x2a4>
  401ea8:	aa0f      	add	r2, sp, #60	; 0x3c
  401eaa:	9904      	ldr	r1, [sp, #16]
  401eac:	9806      	ldr	r0, [sp, #24]
  401eae:	f7ff fa75 	bl	40139c <__sprint_r.part.0>
  401eb2:	2800      	cmp	r0, #0
  401eb4:	f47f af64 	bne.w	401d80 <_vfiprintf_r+0x964>
  401eb8:	9910      	ldr	r1, [sp, #64]	; 0x40
  401eba:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401ebc:	1c48      	adds	r0, r1, #1
  401ebe:	46ca      	mov	sl, r9
  401ec0:	e651      	b.n	401b66 <_vfiprintf_r+0x74a>
  401ec2:	aa0f      	add	r2, sp, #60	; 0x3c
  401ec4:	9904      	ldr	r1, [sp, #16]
  401ec6:	9806      	ldr	r0, [sp, #24]
  401ec8:	f7ff fa68 	bl	40139c <__sprint_r.part.0>
  401ecc:	2800      	cmp	r0, #0
  401ece:	f47f af57 	bne.w	401d80 <_vfiprintf_r+0x964>
  401ed2:	9910      	ldr	r1, [sp, #64]	; 0x40
  401ed4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401ed6:	1c48      	adds	r0, r1, #1
  401ed8:	46ca      	mov	sl, r9
  401eda:	e448      	b.n	40176e <_vfiprintf_r+0x352>
  401edc:	2a00      	cmp	r2, #0
  401ede:	f040 8091 	bne.w	402004 <_vfiprintf_r+0xbe8>
  401ee2:	2001      	movs	r0, #1
  401ee4:	4611      	mov	r1, r2
  401ee6:	46ca      	mov	sl, r9
  401ee8:	e641      	b.n	401b6e <_vfiprintf_r+0x752>
  401eea:	aa0f      	add	r2, sp, #60	; 0x3c
  401eec:	9904      	ldr	r1, [sp, #16]
  401eee:	9806      	ldr	r0, [sp, #24]
  401ef0:	f7ff fa54 	bl	40139c <__sprint_r.part.0>
  401ef4:	2800      	cmp	r0, #0
  401ef6:	f47f af43 	bne.w	401d80 <_vfiprintf_r+0x964>
  401efa:	9810      	ldr	r0, [sp, #64]	; 0x40
  401efc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401efe:	3001      	adds	r0, #1
  401f00:	46ca      	mov	sl, r9
  401f02:	e667      	b.n	401bd4 <_vfiprintf_r+0x7b8>
  401f04:	46d3      	mov	fp, sl
  401f06:	e6d6      	b.n	401cb6 <_vfiprintf_r+0x89a>
  401f08:	9e07      	ldr	r6, [sp, #28]
  401f0a:	3607      	adds	r6, #7
  401f0c:	f026 0207 	bic.w	r2, r6, #7
  401f10:	f102 0108 	add.w	r1, r2, #8
  401f14:	e9d2 6700 	ldrd	r6, r7, [r2]
  401f18:	9107      	str	r1, [sp, #28]
  401f1a:	2201      	movs	r2, #1
  401f1c:	f7ff bbb1 	b.w	401682 <_vfiprintf_r+0x266>
  401f20:	9e07      	ldr	r6, [sp, #28]
  401f22:	3607      	adds	r6, #7
  401f24:	f026 0607 	bic.w	r6, r6, #7
  401f28:	e9d6 0100 	ldrd	r0, r1, [r6]
  401f2c:	f106 0208 	add.w	r2, r6, #8
  401f30:	9207      	str	r2, [sp, #28]
  401f32:	4606      	mov	r6, r0
  401f34:	460f      	mov	r7, r1
  401f36:	e4b6      	b.n	4018a6 <_vfiprintf_r+0x48a>
  401f38:	9e07      	ldr	r6, [sp, #28]
  401f3a:	3607      	adds	r6, #7
  401f3c:	f026 0207 	bic.w	r2, r6, #7
  401f40:	f102 0108 	add.w	r1, r2, #8
  401f44:	e9d2 6700 	ldrd	r6, r7, [r2]
  401f48:	9107      	str	r1, [sp, #28]
  401f4a:	2200      	movs	r2, #0
  401f4c:	f7ff bb99 	b.w	401682 <_vfiprintf_r+0x266>
  401f50:	9e07      	ldr	r6, [sp, #28]
  401f52:	3607      	adds	r6, #7
  401f54:	f026 0107 	bic.w	r1, r6, #7
  401f58:	f101 0008 	add.w	r0, r1, #8
  401f5c:	9007      	str	r0, [sp, #28]
  401f5e:	e9d1 6700 	ldrd	r6, r7, [r1]
  401f62:	e519      	b.n	401998 <_vfiprintf_r+0x57c>
  401f64:	46cb      	mov	fp, r9
  401f66:	f7ff bbab 	b.w	4016c0 <_vfiprintf_r+0x2a4>
  401f6a:	252d      	movs	r5, #45	; 0x2d
  401f6c:	4276      	negs	r6, r6
  401f6e:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  401f72:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  401f76:	2201      	movs	r2, #1
  401f78:	f7ff bb88 	b.w	40168c <_vfiprintf_r+0x270>
  401f7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f7e:	b9b3      	cbnz	r3, 401fae <_vfiprintf_r+0xb92>
  401f80:	4611      	mov	r1, r2
  401f82:	2001      	movs	r0, #1
  401f84:	46ca      	mov	sl, r9
  401f86:	e5f2      	b.n	401b6e <_vfiprintf_r+0x752>
  401f88:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  401f8c:	f001 fc42 	bl	403814 <__retarget_lock_release_recursive>
  401f90:	f04f 33ff 	mov.w	r3, #4294967295
  401f94:	9303      	str	r3, [sp, #12]
  401f96:	f7ff bb50 	b.w	40163a <_vfiprintf_r+0x21e>
  401f9a:	aa0f      	add	r2, sp, #60	; 0x3c
  401f9c:	9904      	ldr	r1, [sp, #16]
  401f9e:	9806      	ldr	r0, [sp, #24]
  401fa0:	f7ff f9fc 	bl	40139c <__sprint_r.part.0>
  401fa4:	2800      	cmp	r0, #0
  401fa6:	f47f aeeb 	bne.w	401d80 <_vfiprintf_r+0x964>
  401faa:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401fac:	e6a9      	b.n	401d02 <_vfiprintf_r+0x8e6>
  401fae:	ab0e      	add	r3, sp, #56	; 0x38
  401fb0:	2202      	movs	r2, #2
  401fb2:	931c      	str	r3, [sp, #112]	; 0x70
  401fb4:	921d      	str	r2, [sp, #116]	; 0x74
  401fb6:	2001      	movs	r0, #1
  401fb8:	46ca      	mov	sl, r9
  401fba:	e5d0      	b.n	401b5e <_vfiprintf_r+0x742>
  401fbc:	aa0f      	add	r2, sp, #60	; 0x3c
  401fbe:	9904      	ldr	r1, [sp, #16]
  401fc0:	9806      	ldr	r0, [sp, #24]
  401fc2:	f7ff f9eb 	bl	40139c <__sprint_r.part.0>
  401fc6:	2800      	cmp	r0, #0
  401fc8:	f47f aeda 	bne.w	401d80 <_vfiprintf_r+0x964>
  401fcc:	9910      	ldr	r1, [sp, #64]	; 0x40
  401fce:	9a11      	ldr	r2, [sp, #68]	; 0x44
  401fd0:	1c48      	adds	r0, r1, #1
  401fd2:	46ca      	mov	sl, r9
  401fd4:	e5a4      	b.n	401b20 <_vfiprintf_r+0x704>
  401fd6:	9a07      	ldr	r2, [sp, #28]
  401fd8:	9903      	ldr	r1, [sp, #12]
  401fda:	6813      	ldr	r3, [r2, #0]
  401fdc:	17cd      	asrs	r5, r1, #31
  401fde:	4608      	mov	r0, r1
  401fe0:	3204      	adds	r2, #4
  401fe2:	4629      	mov	r1, r5
  401fe4:	9207      	str	r2, [sp, #28]
  401fe6:	e9c3 0100 	strd	r0, r1, [r3]
  401fea:	f7ff ba54 	b.w	401496 <_vfiprintf_r+0x7a>
  401fee:	4658      	mov	r0, fp
  401ff0:	9607      	str	r6, [sp, #28]
  401ff2:	9302      	str	r3, [sp, #8]
  401ff4:	f7ff f964 	bl	4012c0 <strlen>
  401ff8:	2400      	movs	r4, #0
  401ffa:	9005      	str	r0, [sp, #20]
  401ffc:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  402000:	f7ff bb5e 	b.w	4016c0 <_vfiprintf_r+0x2a4>
  402004:	aa0f      	add	r2, sp, #60	; 0x3c
  402006:	9904      	ldr	r1, [sp, #16]
  402008:	9806      	ldr	r0, [sp, #24]
  40200a:	f7ff f9c7 	bl	40139c <__sprint_r.part.0>
  40200e:	2800      	cmp	r0, #0
  402010:	f47f aeb6 	bne.w	401d80 <_vfiprintf_r+0x964>
  402014:	9910      	ldr	r1, [sp, #64]	; 0x40
  402016:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402018:	1c48      	adds	r0, r1, #1
  40201a:	46ca      	mov	sl, r9
  40201c:	e5a7      	b.n	401b6e <_vfiprintf_r+0x752>
  40201e:	9910      	ldr	r1, [sp, #64]	; 0x40
  402020:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402022:	4e20      	ldr	r6, [pc, #128]	; (4020a4 <_vfiprintf_r+0xc88>)
  402024:	3101      	adds	r1, #1
  402026:	f7ff bb90 	b.w	40174a <_vfiprintf_r+0x32e>
  40202a:	2c06      	cmp	r4, #6
  40202c:	bf28      	it	cs
  40202e:	2406      	movcs	r4, #6
  402030:	9405      	str	r4, [sp, #20]
  402032:	9607      	str	r6, [sp, #28]
  402034:	9401      	str	r4, [sp, #4]
  402036:	f8df b070 	ldr.w	fp, [pc, #112]	; 4020a8 <_vfiprintf_r+0xc8c>
  40203a:	e4d5      	b.n	4019e8 <_vfiprintf_r+0x5cc>
  40203c:	9810      	ldr	r0, [sp, #64]	; 0x40
  40203e:	4e19      	ldr	r6, [pc, #100]	; (4020a4 <_vfiprintf_r+0xc88>)
  402040:	3001      	adds	r0, #1
  402042:	e603      	b.n	401c4c <_vfiprintf_r+0x830>
  402044:	9405      	str	r4, [sp, #20]
  402046:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40204a:	9607      	str	r6, [sp, #28]
  40204c:	9302      	str	r3, [sp, #8]
  40204e:	4604      	mov	r4, r0
  402050:	f7ff bb36 	b.w	4016c0 <_vfiprintf_r+0x2a4>
  402054:	4686      	mov	lr, r0
  402056:	f7ff bbce 	b.w	4017f6 <_vfiprintf_r+0x3da>
  40205a:	9806      	ldr	r0, [sp, #24]
  40205c:	aa0f      	add	r2, sp, #60	; 0x3c
  40205e:	4659      	mov	r1, fp
  402060:	f7ff f99c 	bl	40139c <__sprint_r.part.0>
  402064:	2800      	cmp	r0, #0
  402066:	f43f ae24 	beq.w	401cb2 <_vfiprintf_r+0x896>
  40206a:	e624      	b.n	401cb6 <_vfiprintf_r+0x89a>
  40206c:	9907      	ldr	r1, [sp, #28]
  40206e:	f898 2001 	ldrb.w	r2, [r8, #1]
  402072:	680c      	ldr	r4, [r1, #0]
  402074:	3104      	adds	r1, #4
  402076:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  40207a:	46b8      	mov	r8, r7
  40207c:	9107      	str	r1, [sp, #28]
  40207e:	f7ff ba3f 	b.w	401500 <_vfiprintf_r+0xe4>
  402082:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  402086:	e43c      	b.n	401902 <_vfiprintf_r+0x4e6>
  402088:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40208c:	e521      	b.n	401ad2 <_vfiprintf_r+0x6b6>
  40208e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  402092:	f7ff bbf4 	b.w	40187e <_vfiprintf_r+0x462>
  402096:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40209a:	e491      	b.n	4019c0 <_vfiprintf_r+0x5a4>
  40209c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4020a0:	e469      	b.n	401976 <_vfiprintf_r+0x55a>
  4020a2:	bf00      	nop
  4020a4:	004056b0 	.word	0x004056b0
  4020a8:	004056a8 	.word	0x004056a8

004020ac <__sbprintf>:
  4020ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4020b0:	460c      	mov	r4, r1
  4020b2:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  4020b6:	8989      	ldrh	r1, [r1, #12]
  4020b8:	6e66      	ldr	r6, [r4, #100]	; 0x64
  4020ba:	89e5      	ldrh	r5, [r4, #14]
  4020bc:	9619      	str	r6, [sp, #100]	; 0x64
  4020be:	f021 0102 	bic.w	r1, r1, #2
  4020c2:	4606      	mov	r6, r0
  4020c4:	69e0      	ldr	r0, [r4, #28]
  4020c6:	f8ad 100c 	strh.w	r1, [sp, #12]
  4020ca:	4617      	mov	r7, r2
  4020cc:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4020d0:	6a62      	ldr	r2, [r4, #36]	; 0x24
  4020d2:	f8ad 500e 	strh.w	r5, [sp, #14]
  4020d6:	4698      	mov	r8, r3
  4020d8:	ad1a      	add	r5, sp, #104	; 0x68
  4020da:	2300      	movs	r3, #0
  4020dc:	9007      	str	r0, [sp, #28]
  4020de:	a816      	add	r0, sp, #88	; 0x58
  4020e0:	9209      	str	r2, [sp, #36]	; 0x24
  4020e2:	9306      	str	r3, [sp, #24]
  4020e4:	9500      	str	r5, [sp, #0]
  4020e6:	9504      	str	r5, [sp, #16]
  4020e8:	9102      	str	r1, [sp, #8]
  4020ea:	9105      	str	r1, [sp, #20]
  4020ec:	f001 fb8c 	bl	403808 <__retarget_lock_init_recursive>
  4020f0:	4643      	mov	r3, r8
  4020f2:	463a      	mov	r2, r7
  4020f4:	4669      	mov	r1, sp
  4020f6:	4630      	mov	r0, r6
  4020f8:	f7ff f990 	bl	40141c <_vfiprintf_r>
  4020fc:	1e05      	subs	r5, r0, #0
  4020fe:	db07      	blt.n	402110 <__sbprintf+0x64>
  402100:	4630      	mov	r0, r6
  402102:	4669      	mov	r1, sp
  402104:	f000 fe32 	bl	402d6c <_fflush_r>
  402108:	2800      	cmp	r0, #0
  40210a:	bf18      	it	ne
  40210c:	f04f 35ff 	movne.w	r5, #4294967295
  402110:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  402114:	065b      	lsls	r3, r3, #25
  402116:	d503      	bpl.n	402120 <__sbprintf+0x74>
  402118:	89a3      	ldrh	r3, [r4, #12]
  40211a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40211e:	81a3      	strh	r3, [r4, #12]
  402120:	9816      	ldr	r0, [sp, #88]	; 0x58
  402122:	f001 fb73 	bl	40380c <__retarget_lock_close_recursive>
  402126:	4628      	mov	r0, r5
  402128:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  40212c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00402130 <__svfiscanf_r>:
  402130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402134:	468b      	mov	fp, r1
  402136:	b0d9      	sub	sp, #356	; 0x164
  402138:	6e49      	ldr	r1, [r1, #100]	; 0x64
  40213a:	9306      	str	r3, [sp, #24]
  40213c:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
  402140:	f011 0f01 	tst.w	r1, #1
  402144:	4607      	mov	r7, r0
  402146:	b299      	uxth	r1, r3
  402148:	d102      	bne.n	402150 <__svfiscanf_r+0x20>
  40214a:	058c      	lsls	r4, r1, #22
  40214c:	f140 83e5 	bpl.w	40291a <__svfiscanf_r+0x7ea>
  402150:	0488      	lsls	r0, r1, #18
  402152:	d409      	bmi.n	402168 <__svfiscanf_r+0x38>
  402154:	f8db 1064 	ldr.w	r1, [fp, #100]	; 0x64
  402158:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40215c:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  402160:	f8ab 300c 	strh.w	r3, [fp, #12]
  402164:	f8cb 1064 	str.w	r1, [fp, #100]	; 0x64
  402168:	4614      	mov	r4, r2
  40216a:	4626      	mov	r6, r4
  40216c:	2300      	movs	r3, #0
  40216e:	9307      	str	r3, [sp, #28]
  402170:	9304      	str	r3, [sp, #16]
  402172:	469a      	mov	sl, r3
  402174:	9305      	str	r3, [sp, #20]
  402176:	f816 3b01 	ldrb.w	r3, [r6], #1
  40217a:	930b      	str	r3, [sp, #44]	; 0x2c
  40217c:	b363      	cbz	r3, 4021d8 <__svfiscanf_r+0xa8>
  40217e:	f001 fb35 	bl	4037ec <__locale_ctype_ptr>
  402182:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402184:	4418      	add	r0, r3
  402186:	7845      	ldrb	r5, [r0, #1]
  402188:	f015 0508 	ands.w	r5, r5, #8
  40218c:	d033      	beq.n	4021f6 <__svfiscanf_r+0xc6>
  40218e:	f8db 2004 	ldr.w	r2, [fp, #4]
  402192:	e012      	b.n	4021ba <__svfiscanf_r+0x8a>
  402194:	f001 fb2a 	bl	4037ec <__locale_ctype_ptr>
  402198:	f8db 3000 	ldr.w	r3, [fp]
  40219c:	781a      	ldrb	r2, [r3, #0]
  40219e:	4410      	add	r0, r2
  4021a0:	3301      	adds	r3, #1
  4021a2:	7842      	ldrb	r2, [r0, #1]
  4021a4:	0711      	lsls	r1, r2, #28
  4021a6:	d510      	bpl.n	4021ca <__svfiscanf_r+0x9a>
  4021a8:	f8db 2004 	ldr.w	r2, [fp, #4]
  4021ac:	f8cb 3000 	str.w	r3, [fp]
  4021b0:	3a01      	subs	r2, #1
  4021b2:	f10a 0a01 	add.w	sl, sl, #1
  4021b6:	f8cb 2004 	str.w	r2, [fp, #4]
  4021ba:	2a00      	cmp	r2, #0
  4021bc:	dcea      	bgt.n	402194 <__svfiscanf_r+0x64>
  4021be:	4659      	mov	r1, fp
  4021c0:	4638      	mov	r0, r7
  4021c2:	f002 f9a7 	bl	404514 <__srefill_r>
  4021c6:	2800      	cmp	r0, #0
  4021c8:	d0e4      	beq.n	402194 <__svfiscanf_r+0x64>
  4021ca:	4634      	mov	r4, r6
  4021cc:	4626      	mov	r6, r4
  4021ce:	f816 3b01 	ldrb.w	r3, [r6], #1
  4021d2:	930b      	str	r3, [sp, #44]	; 0x2c
  4021d4:	2b00      	cmp	r3, #0
  4021d6:	d1d2      	bne.n	40217e <__svfiscanf_r+0x4e>
  4021d8:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4021dc:	07da      	lsls	r2, r3, #31
  4021de:	f100 81a7 	bmi.w	402530 <__svfiscanf_r+0x400>
  4021e2:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4021e6:	059b      	lsls	r3, r3, #22
  4021e8:	f100 81a2 	bmi.w	402530 <__svfiscanf_r+0x400>
  4021ec:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4021f0:	f001 fb10 	bl	403814 <__retarget_lock_release_recursive>
  4021f4:	e19c      	b.n	402530 <__svfiscanf_r+0x400>
  4021f6:	2b25      	cmp	r3, #37	; 0x25
  4021f8:	f040 8084 	bne.w	402304 <__svfiscanf_r+0x1d4>
  4021fc:	f894 8001 	ldrb.w	r8, [r4, #1]
  402200:	462c      	mov	r4, r5
  402202:	1c73      	adds	r3, r6, #1
  402204:	f1b8 0f78 	cmp.w	r8, #120	; 0x78
  402208:	f200 8196 	bhi.w	402538 <__svfiscanf_r+0x408>
  40220c:	e8df f018 	tbh	[pc, r8, lsl #1]
  402210:	01940184 	.word	0x01940184
  402214:	01940194 	.word	0x01940194
  402218:	01940194 	.word	0x01940194
  40221c:	01940194 	.word	0x01940194
  402220:	01940194 	.word	0x01940194
  402224:	01940194 	.word	0x01940194
  402228:	01940194 	.word	0x01940194
  40222c:	01940194 	.word	0x01940194
  402230:	01940194 	.word	0x01940194
  402234:	01940194 	.word	0x01940194
  402238:	01940194 	.word	0x01940194
  40223c:	01940194 	.word	0x01940194
  402240:	01940194 	.word	0x01940194
  402244:	01940194 	.word	0x01940194
  402248:	01940194 	.word	0x01940194
  40224c:	01940194 	.word	0x01940194
  402250:	01940194 	.word	0x01940194
  402254:	01940194 	.word	0x01940194
  402258:	00790194 	.word	0x00790194
  40225c:	01940194 	.word	0x01940194
  402260:	01940194 	.word	0x01940194
  402264:	0194017e 	.word	0x0194017e
  402268:	01940194 	.word	0x01940194
  40226c:	01940194 	.word	0x01940194
  402270:	01750175 	.word	0x01750175
  402274:	01750175 	.word	0x01750175
  402278:	01750175 	.word	0x01750175
  40227c:	01750175 	.word	0x01750175
  402280:	01750175 	.word	0x01750175
  402284:	01940194 	.word	0x01940194
  402288:	01940194 	.word	0x01940194
  40228c:	01940194 	.word	0x01940194
  402290:	01940194 	.word	0x01940194
  402294:	01940194 	.word	0x01940194
  402298:	01940171 	.word	0x01940171
  40229c:	01940194 	.word	0x01940194
  4022a0:	01940194 	.word	0x01940194
  4022a4:	01940194 	.word	0x01940194
  4022a8:	0194016b 	.word	0x0194016b
  4022ac:	01310194 	.word	0x01310194
  4022b0:	01940194 	.word	0x01940194
  4022b4:	01940194 	.word	0x01940194
  4022b8:	01940194 	.word	0x01940194
  4022bc:	01940194 	.word	0x01940194
  4022c0:	01940128 	.word	0x01940128
  4022c4:	011f0194 	.word	0x011f0194
  4022c8:	01940194 	.word	0x01940194
  4022cc:	01940194 	.word	0x01940194
  4022d0:	01940194 	.word	0x01940194
  4022d4:	011a0194 	.word	0x011a0194
  4022d8:	01940108 	.word	0x01940108
  4022dc:	01940194 	.word	0x01940194
  4022e0:	00930102 	.word	0x00930102
  4022e4:	01940194 	.word	0x01940194
  4022e8:	01940161 	.word	0x01940161
  4022ec:	0148014a 	.word	0x0148014a
  4022f0:	01940144 	.word	0x01940144
  4022f4:	01410194 	.word	0x01410194
  4022f8:	013a0194 	.word	0x013a0194
  4022fc:	01940194 	.word	0x01940194
  402300:	0128      	.short	0x0128
  402302:	461e      	mov	r6, r3
  402304:	f8db 3004 	ldr.w	r3, [fp, #4]
  402308:	2b00      	cmp	r3, #0
  40230a:	f340 8392 	ble.w	402a32 <__svfiscanf_r+0x902>
  40230e:	f8db 3000 	ldr.w	r3, [fp]
  402312:	f816 2c01 	ldrb.w	r2, [r6, #-1]
  402316:	7819      	ldrb	r1, [r3, #0]
  402318:	4291      	cmp	r1, r2
  40231a:	f47f af5d 	bne.w	4021d8 <__svfiscanf_r+0xa8>
  40231e:	f8db 2004 	ldr.w	r2, [fp, #4]
  402322:	3301      	adds	r3, #1
  402324:	3a01      	subs	r2, #1
  402326:	f8cb 3000 	str.w	r3, [fp]
  40232a:	f10a 0a01 	add.w	sl, sl, #1
  40232e:	f8cb 2004 	str.w	r2, [fp, #4]
  402332:	4634      	mov	r4, r6
  402334:	e74a      	b.n	4021cc <__svfiscanf_r+0x9c>
  402336:	9303      	str	r3, [sp, #12]
  402338:	4bb2      	ldr	r3, [pc, #712]	; (402604 <__svfiscanf_r+0x4d4>)
  40233a:	9307      	str	r3, [sp, #28]
  40233c:	2300      	movs	r3, #0
  40233e:	9304      	str	r3, [sp, #16]
  402340:	2603      	movs	r6, #3
  402342:	f8db 3004 	ldr.w	r3, [fp, #4]
  402346:	2b00      	cmp	r3, #0
  402348:	dd75      	ble.n	402436 <__svfiscanf_r+0x306>
  40234a:	0669      	lsls	r1, r5, #25
  40234c:	d533      	bpl.n	4023b6 <__svfiscanf_r+0x286>
  40234e:	2e02      	cmp	r6, #2
  402350:	f000 820d 	beq.w	40276e <__svfiscanf_r+0x63e>
  402354:	2e03      	cmp	r6, #3
  402356:	f000 8159 	beq.w	40260c <__svfiscanf_r+0x4dc>
  40235a:	2e01      	cmp	r6, #1
  40235c:	f000 8120 	beq.w	4025a0 <__svfiscanf_r+0x470>
  402360:	2c00      	cmp	r4, #0
  402362:	bf08      	it	eq
  402364:	2401      	moveq	r4, #1
  402366:	f015 0301 	ands.w	r3, r5, #1
  40236a:	f040 825d 	bne.w	402828 <__svfiscanf_r+0x6f8>
  40236e:	06ed      	lsls	r5, r5, #27
  402370:	f140 830b 	bpl.w	40298a <__svfiscanf_r+0x85a>
  402374:	461d      	mov	r5, r3
  402376:	e009      	b.n	40238c <__svfiscanf_r+0x25c>
  402378:	4413      	add	r3, r2
  40237a:	f8cb 3000 	str.w	r3, [fp]
  40237e:	4415      	add	r5, r2
  402380:	1aa4      	subs	r4, r4, r2
  402382:	f002 f8c7 	bl	404514 <__srefill_r>
  402386:	2800      	cmp	r0, #0
  402388:	f040 82fb 	bne.w	402982 <__svfiscanf_r+0x852>
  40238c:	f8db 2004 	ldr.w	r2, [fp, #4]
  402390:	f8db 3000 	ldr.w	r3, [fp]
  402394:	42a2      	cmp	r2, r4
  402396:	4659      	mov	r1, fp
  402398:	4638      	mov	r0, r7
  40239a:	dbed      	blt.n	402378 <__svfiscanf_r+0x248>
  40239c:	1b12      	subs	r2, r2, r4
  40239e:	4423      	add	r3, r4
  4023a0:	f8cb 2004 	str.w	r2, [fp, #4]
  4023a4:	4425      	add	r5, r4
  4023a6:	f8cb 3000 	str.w	r3, [fp]
  4023aa:	9e03      	ldr	r6, [sp, #12]
  4023ac:	44aa      	add	sl, r5
  4023ae:	4634      	mov	r4, r6
  4023b0:	e70c      	b.n	4021cc <__svfiscanf_r+0x9c>
  4023b2:	f8cb 3000 	str.w	r3, [fp]
  4023b6:	f001 fa19 	bl	4037ec <__locale_ctype_ptr>
  4023ba:	f8db 3000 	ldr.w	r3, [fp]
  4023be:	781a      	ldrb	r2, [r3, #0]
  4023c0:	4410      	add	r0, r2
  4023c2:	3301      	adds	r3, #1
  4023c4:	7842      	ldrb	r2, [r0, #1]
  4023c6:	0712      	lsls	r2, r2, #28
  4023c8:	d5c1      	bpl.n	40234e <__svfiscanf_r+0x21e>
  4023ca:	f8db 2004 	ldr.w	r2, [fp, #4]
  4023ce:	3a01      	subs	r2, #1
  4023d0:	2a00      	cmp	r2, #0
  4023d2:	f10a 0a01 	add.w	sl, sl, #1
  4023d6:	f8cb 2004 	str.w	r2, [fp, #4]
  4023da:	dcea      	bgt.n	4023b2 <__svfiscanf_r+0x282>
  4023dc:	4659      	mov	r1, fp
  4023de:	4638      	mov	r0, r7
  4023e0:	f002 f898 	bl	404514 <__srefill_r>
  4023e4:	2800      	cmp	r0, #0
  4023e6:	d0e6      	beq.n	4023b6 <__svfiscanf_r+0x286>
  4023e8:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4023ec:	07dc      	lsls	r4, r3, #31
  4023ee:	d404      	bmi.n	4023fa <__svfiscanf_r+0x2ca>
  4023f0:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4023f4:	0598      	lsls	r0, r3, #22
  4023f6:	f140 82b0 	bpl.w	40295a <__svfiscanf_r+0x82a>
  4023fa:	9b05      	ldr	r3, [sp, #20]
  4023fc:	2b00      	cmp	r3, #0
  4023fe:	f000 8094 	beq.w	40252a <__svfiscanf_r+0x3fa>
  402402:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402406:	0659      	lsls	r1, r3, #25
  402408:	f100 808f 	bmi.w	40252a <__svfiscanf_r+0x3fa>
  40240c:	9805      	ldr	r0, [sp, #20]
  40240e:	b059      	add	sp, #356	; 0x164
  402410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402414:	f896 8001 	ldrb.w	r8, [r6, #1]
  402418:	f045 0504 	orr.w	r5, r5, #4
  40241c:	461e      	mov	r6, r3
  40241e:	e6f0      	b.n	402202 <__svfiscanf_r+0xd2>
  402420:	9303      	str	r3, [sp, #12]
  402422:	4b78      	ldr	r3, [pc, #480]	; (402604 <__svfiscanf_r+0x4d4>)
  402424:	9307      	str	r3, [sp, #28]
  402426:	230a      	movs	r3, #10
  402428:	9304      	str	r3, [sp, #16]
  40242a:	f8db 3004 	ldr.w	r3, [fp, #4]
  40242e:	2b00      	cmp	r3, #0
  402430:	f04f 0603 	mov.w	r6, #3
  402434:	dc89      	bgt.n	40234a <__svfiscanf_r+0x21a>
  402436:	4659      	mov	r1, fp
  402438:	4638      	mov	r0, r7
  40243a:	f002 f86b 	bl	404514 <__srefill_r>
  40243e:	2800      	cmp	r0, #0
  402440:	d083      	beq.n	40234a <__svfiscanf_r+0x21a>
  402442:	e7d1      	b.n	4023e8 <__svfiscanf_r+0x2b8>
  402444:	9303      	str	r3, [sp, #12]
  402446:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  40244a:	2600      	movs	r6, #0
  40244c:	e779      	b.n	402342 <__svfiscanf_r+0x212>
  40244e:	4619      	mov	r1, r3
  402450:	a818      	add	r0, sp, #96	; 0x60
  402452:	f002 f8fb 	bl	40464c <__sccl>
  402456:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  40245a:	9003      	str	r0, [sp, #12]
  40245c:	2601      	movs	r6, #1
  40245e:	e770      	b.n	402342 <__svfiscanf_r+0x212>
  402460:	9303      	str	r3, [sp, #12]
  402462:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  402466:	4b68      	ldr	r3, [pc, #416]	; (402608 <__svfiscanf_r+0x4d8>)
  402468:	9307      	str	r3, [sp, #28]
  40246a:	2310      	movs	r3, #16
  40246c:	9304      	str	r3, [sp, #16]
  40246e:	2603      	movs	r6, #3
  402470:	e767      	b.n	402342 <__svfiscanf_r+0x212>
  402472:	9303      	str	r3, [sp, #12]
  402474:	f045 0501 	orr.w	r5, r5, #1
  402478:	4b63      	ldr	r3, [pc, #396]	; (402608 <__svfiscanf_r+0x4d8>)
  40247a:	9307      	str	r3, [sp, #28]
  40247c:	2308      	movs	r3, #8
  40247e:	9304      	str	r3, [sp, #16]
  402480:	2603      	movs	r6, #3
  402482:	e75e      	b.n	402342 <__svfiscanf_r+0x212>
  402484:	9303      	str	r3, [sp, #12]
  402486:	4b60      	ldr	r3, [pc, #384]	; (402608 <__svfiscanf_r+0x4d8>)
  402488:	9307      	str	r3, [sp, #28]
  40248a:	230a      	movs	r3, #10
  40248c:	9304      	str	r3, [sp, #16]
  40248e:	2603      	movs	r6, #3
  402490:	e757      	b.n	402342 <__svfiscanf_r+0x212>
  402492:	9303      	str	r3, [sp, #12]
  402494:	2602      	movs	r6, #2
  402496:	e754      	b.n	402342 <__svfiscanf_r+0x212>
  402498:	9303      	str	r3, [sp, #12]
  40249a:	f445 7508 	orr.w	r5, r5, #544	; 0x220
  40249e:	e7e2      	b.n	402466 <__svfiscanf_r+0x336>
  4024a0:	9303      	str	r3, [sp, #12]
  4024a2:	e7e9      	b.n	402478 <__svfiscanf_r+0x348>
  4024a4:	06ea      	lsls	r2, r5, #27
  4024a6:	9303      	str	r3, [sp, #12]
  4024a8:	d477      	bmi.n	40259a <__svfiscanf_r+0x46a>
  4024aa:	076b      	lsls	r3, r5, #29
  4024ac:	f100 82ec 	bmi.w	402a88 <__svfiscanf_r+0x958>
  4024b0:	07ee      	lsls	r6, r5, #31
  4024b2:	f100 82d8 	bmi.w	402a66 <__svfiscanf_r+0x936>
  4024b6:	07ad      	lsls	r5, r5, #30
  4024b8:	f140 82d5 	bpl.w	402a66 <__svfiscanf_r+0x936>
  4024bc:	9a06      	ldr	r2, [sp, #24]
  4024be:	9e03      	ldr	r6, [sp, #12]
  4024c0:	6813      	ldr	r3, [r2, #0]
  4024c2:	4650      	mov	r0, sl
  4024c4:	17c1      	asrs	r1, r0, #31
  4024c6:	3204      	adds	r2, #4
  4024c8:	9206      	str	r2, [sp, #24]
  4024ca:	e9c3 0100 	strd	r0, r1, [r3]
  4024ce:	4634      	mov	r4, r6
  4024d0:	e67c      	b.n	4021cc <__svfiscanf_r+0x9c>
  4024d2:	f896 8001 	ldrb.w	r8, [r6, #1]
  4024d6:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
  4024da:	f000 82b2 	beq.w	402a42 <__svfiscanf_r+0x912>
  4024de:	f045 0501 	orr.w	r5, r5, #1
  4024e2:	461e      	mov	r6, r3
  4024e4:	e68d      	b.n	402202 <__svfiscanf_r+0xd2>
  4024e6:	f896 8001 	ldrb.w	r8, [r6, #1]
  4024ea:	f045 0502 	orr.w	r5, r5, #2
  4024ee:	461e      	mov	r6, r3
  4024f0:	e687      	b.n	402202 <__svfiscanf_r+0xd2>
  4024f2:	9303      	str	r3, [sp, #12]
  4024f4:	f045 0501 	orr.w	r5, r5, #1
  4024f8:	e793      	b.n	402422 <__svfiscanf_r+0x2f2>
  4024fa:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4024fe:	eb08 0444 	add.w	r4, r8, r4, lsl #1
  402502:	3c30      	subs	r4, #48	; 0x30
  402504:	f896 8001 	ldrb.w	r8, [r6, #1]
  402508:	461e      	mov	r6, r3
  40250a:	e67a      	b.n	402202 <__svfiscanf_r+0xd2>
  40250c:	f896 8001 	ldrb.w	r8, [r6, #1]
  402510:	f045 0510 	orr.w	r5, r5, #16
  402514:	461e      	mov	r6, r3
  402516:	e674      	b.n	402202 <__svfiscanf_r+0xd2>
  402518:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40251c:	07dc      	lsls	r4, r3, #31
  40251e:	d404      	bmi.n	40252a <__svfiscanf_r+0x3fa>
  402520:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  402524:	0598      	lsls	r0, r3, #22
  402526:	f140 8293 	bpl.w	402a50 <__svfiscanf_r+0x920>
  40252a:	f04f 33ff 	mov.w	r3, #4294967295
  40252e:	9305      	str	r3, [sp, #20]
  402530:	9805      	ldr	r0, [sp, #20]
  402532:	b059      	add	sp, #356	; 0x164
  402534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402538:	9303      	str	r3, [sp, #12]
  40253a:	f001 f957 	bl	4037ec <__locale_ctype_ptr>
  40253e:	4440      	add	r0, r8
  402540:	7843      	ldrb	r3, [r0, #1]
  402542:	f003 0303 	and.w	r3, r3, #3
  402546:	2b01      	cmp	r3, #1
  402548:	f47f af6b 	bne.w	402422 <__svfiscanf_r+0x2f2>
  40254c:	f045 0501 	orr.w	r5, r5, #1
  402550:	e767      	b.n	402422 <__svfiscanf_r+0x2f2>
  402552:	ab0c      	add	r3, sp, #48	; 0x30
  402554:	4618      	mov	r0, r3
  402556:	2208      	movs	r2, #8
  402558:	2100      	movs	r1, #0
  40255a:	9308      	str	r3, [sp, #32]
  40255c:	f7fe fd80 	bl	401060 <memset>
  402560:	f015 0310 	ands.w	r3, r5, #16
  402564:	9309      	str	r3, [sp, #36]	; 0x24
  402566:	f000 81eb 	beq.w	402940 <__svfiscanf_r+0x810>
  40256a:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  40256e:	2600      	movs	r6, #0
  402570:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  402574:	f001 f93a 	bl	4037ec <__locale_ctype_ptr>
  402578:	f8db 3000 	ldr.w	r3, [fp]
  40257c:	781b      	ldrb	r3, [r3, #0]
  40257e:	4403      	add	r3, r0
  402580:	785b      	ldrb	r3, [r3, #1]
  402582:	071a      	lsls	r2, r3, #28
  402584:	d402      	bmi.n	40258c <__svfiscanf_r+0x45c>
  402586:	2c00      	cmp	r4, #0
  402588:	f040 8289 	bne.w	402a9e <__svfiscanf_r+0x96e>
  40258c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40258e:	b923      	cbnz	r3, 40259a <__svfiscanf_r+0x46a>
  402590:	f8c9 3000 	str.w	r3, [r9]
  402594:	9b05      	ldr	r3, [sp, #20]
  402596:	3301      	adds	r3, #1
  402598:	9305      	str	r3, [sp, #20]
  40259a:	9e03      	ldr	r6, [sp, #12]
  40259c:	4634      	mov	r4, r6
  40259e:	e615      	b.n	4021cc <__svfiscanf_r+0x9c>
  4025a0:	2c00      	cmp	r4, #0
  4025a2:	bf08      	it	eq
  4025a4:	f04f 34ff 	moveq.w	r4, #4294967295
  4025a8:	06e8      	lsls	r0, r5, #27
  4025aa:	f140 810b 	bpl.w	4027c4 <__svfiscanf_r+0x694>
  4025ae:	f8db 2000 	ldr.w	r2, [fp]
  4025b2:	2500      	movs	r5, #0
  4025b4:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  4025b8:	7813      	ldrb	r3, [r2, #0]
  4025ba:	f818 3003 	ldrb.w	r3, [r8, r3]
  4025be:	3201      	adds	r2, #1
  4025c0:	b1db      	cbz	r3, 4025fa <__svfiscanf_r+0x4ca>
  4025c2:	f8db 3004 	ldr.w	r3, [fp, #4]
  4025c6:	f8cb 2000 	str.w	r2, [fp]
  4025ca:	3501      	adds	r5, #1
  4025cc:	3b01      	subs	r3, #1
  4025ce:	42ac      	cmp	r4, r5
  4025d0:	f8cb 3004 	str.w	r3, [fp, #4]
  4025d4:	f43f aee9 	beq.w	4023aa <__svfiscanf_r+0x27a>
  4025d8:	2b00      	cmp	r3, #0
  4025da:	dced      	bgt.n	4025b8 <__svfiscanf_r+0x488>
  4025dc:	4659      	mov	r1, fp
  4025de:	4638      	mov	r0, r7
  4025e0:	f001 ff98 	bl	404514 <__srefill_r>
  4025e4:	2800      	cmp	r0, #0
  4025e6:	f47f aee0 	bne.w	4023aa <__svfiscanf_r+0x27a>
  4025ea:	f8db 2000 	ldr.w	r2, [fp]
  4025ee:	7813      	ldrb	r3, [r2, #0]
  4025f0:	f818 3003 	ldrb.w	r3, [r8, r3]
  4025f4:	3201      	adds	r2, #1
  4025f6:	2b00      	cmp	r3, #0
  4025f8:	d1e3      	bne.n	4025c2 <__svfiscanf_r+0x492>
  4025fa:	2d00      	cmp	r5, #0
  4025fc:	f47f aed5 	bne.w	4023aa <__svfiscanf_r+0x27a>
  402600:	e5ea      	b.n	4021d8 <__svfiscanf_r+0xa8>
  402602:	bf00      	nop
  402604:	00404871 	.word	0x00404871
  402608:	00404b9d 	.word	0x00404b9d
  40260c:	1e63      	subs	r3, r4, #1
  40260e:	2b26      	cmp	r3, #38	; 0x26
  402610:	bf8c      	ite	hi
  402612:	f1a4 0227 	subhi.w	r2, r4, #39	; 0x27
  402616:	2200      	movls	r2, #0
  402618:	f04f 0900 	mov.w	r9, #0
  40261c:	4611      	mov	r1, r2
  40261e:	ae0e      	add	r6, sp, #56	; 0x38
  402620:	464b      	mov	r3, r9
  402622:	46b9      	mov	r9, r7
  402624:	9f04      	ldr	r7, [sp, #16]
  402626:	4652      	mov	r2, sl
  402628:	bf88      	it	hi
  40262a:	2427      	movhi	r4, #39	; 0x27
  40262c:	f445 6558 	orr.w	r5, r5, #3456	; 0xd80
  402630:	46b0      	mov	r8, r6
  402632:	468a      	mov	sl, r1
  402634:	f8db 0000 	ldr.w	r0, [fp]
  402638:	f890 e000 	ldrb.w	lr, [r0]
  40263c:	f1ae 012b 	sub.w	r1, lr, #43	; 0x2b
  402640:	294d      	cmp	r1, #77	; 0x4d
  402642:	d842      	bhi.n	4026ca <__svfiscanf_r+0x59a>
  402644:	e8df f001 	tbb	[pc, r1]
  402648:	418e418e 	.word	0x418e418e
  40264c:	63636941 	.word	0x63636941
  402650:	63636363 	.word	0x63636363
  402654:	415d5d63 	.word	0x415d5d63
  402658:	41414141 	.word	0x41414141
  40265c:	58584141 	.word	0x58584141
  402660:	58585858 	.word	0x58585858
  402664:	41414141 	.word	0x41414141
  402668:	41414141 	.word	0x41414141
  40266c:	41414141 	.word	0x41414141
  402670:	41414141 	.word	0x41414141
  402674:	41412741 	.word	0x41412741
  402678:	41414141 	.word	0x41414141
  40267c:	58584141 	.word	0x58584141
  402680:	58585858 	.word	0x58585858
  402684:	41414141 	.word	0x41414141
  402688:	41414141 	.word	0x41414141
  40268c:	41414141 	.word	0x41414141
  402690:	41414141 	.word	0x41414141
  402694:	2741      	.short	0x2741
  402696:	f405 61c0 	and.w	r1, r5, #1536	; 0x600
  40269a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  40269e:	d114      	bne.n	4026ca <__svfiscanf_r+0x59a>
  4026a0:	f425 7500 	bic.w	r5, r5, #512	; 0x200
  4026a4:	f445 65a0 	orr.w	r5, r5, #1280	; 0x500
  4026a8:	2710      	movs	r7, #16
  4026aa:	f8db 1004 	ldr.w	r1, [fp, #4]
  4026ae:	f888 e000 	strb.w	lr, [r8]
  4026b2:	3901      	subs	r1, #1
  4026b4:	2900      	cmp	r1, #0
  4026b6:	f108 0801 	add.w	r8, r8, #1
  4026ba:	f8cb 1004 	str.w	r1, [fp, #4]
  4026be:	dd46      	ble.n	40274e <__svfiscanf_r+0x61e>
  4026c0:	3001      	adds	r0, #1
  4026c2:	f8cb 0000 	str.w	r0, [fp]
  4026c6:	3c01      	subs	r4, #1
  4026c8:	d1b4      	bne.n	402634 <__svfiscanf_r+0x504>
  4026ca:	05e9      	lsls	r1, r5, #23
  4026cc:	9704      	str	r7, [sp, #16]
  4026ce:	4692      	mov	sl, r2
  4026d0:	464f      	mov	r7, r9
  4026d2:	4699      	mov	r9, r3
  4026d4:	d505      	bpl.n	4026e2 <__svfiscanf_r+0x5b2>
  4026d6:	45b0      	cmp	r8, r6
  4026d8:	f200 81a2 	bhi.w	402a20 <__svfiscanf_r+0x8f0>
  4026dc:	45b0      	cmp	r8, r6
  4026de:	f43f ad7b 	beq.w	4021d8 <__svfiscanf_r+0xa8>
  4026e2:	f015 0410 	ands.w	r4, r5, #16
  4026e6:	f000 80e5 	beq.w	4028b4 <__svfiscanf_r+0x784>
  4026ea:	eba8 0606 	sub.w	r6, r8, r6
  4026ee:	44b1      	add	r9, r6
  4026f0:	9e03      	ldr	r6, [sp, #12]
  4026f2:	44ca      	add	sl, r9
  4026f4:	4634      	mov	r4, r6
  4026f6:	e569      	b.n	4021cc <__svfiscanf_r+0x9c>
  4026f8:	2f0a      	cmp	r7, #10
  4026fa:	dde6      	ble.n	4026ca <__svfiscanf_r+0x59a>
  4026fc:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  402700:	e7d3      	b.n	4026aa <__svfiscanf_r+0x57a>
  402702:	49ac      	ldr	r1, [pc, #688]	; (4029b4 <__svfiscanf_r+0x884>)
  402704:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  402708:	2f08      	cmp	r7, #8
  40270a:	dcf7      	bgt.n	4026fc <__svfiscanf_r+0x5cc>
  40270c:	e7dd      	b.n	4026ca <__svfiscanf_r+0x59a>
  40270e:	49a9      	ldr	r1, [pc, #676]	; (4029b4 <__svfiscanf_r+0x884>)
  402710:	f425 6538 	bic.w	r5, r5, #2944	; 0xb80
  402714:	f931 7017 	ldrsh.w	r7, [r1, r7, lsl #1]
  402718:	e7c7      	b.n	4026aa <__svfiscanf_r+0x57a>
  40271a:	0529      	lsls	r1, r5, #20
  40271c:	d5c5      	bpl.n	4026aa <__svfiscanf_r+0x57a>
  40271e:	b917      	cbnz	r7, 402726 <__svfiscanf_r+0x5f6>
  402720:	f445 7500 	orr.w	r5, r5, #512	; 0x200
  402724:	2708      	movs	r7, #8
  402726:	0569      	lsls	r1, r5, #21
  402728:	f100 80eb 	bmi.w	402902 <__svfiscanf_r+0x7d2>
  40272c:	f425 7560 	bic.w	r5, r5, #896	; 0x380
  402730:	f1ba 0f00 	cmp.w	sl, #0
  402734:	d002      	beq.n	40273c <__svfiscanf_r+0x60c>
  402736:	f10a 3aff 	add.w	sl, sl, #4294967295
  40273a:	3401      	adds	r4, #1
  40273c:	f8db 1004 	ldr.w	r1, [fp, #4]
  402740:	3901      	subs	r1, #1
  402742:	2900      	cmp	r1, #0
  402744:	f103 0301 	add.w	r3, r3, #1
  402748:	f8cb 1004 	str.w	r1, [fp, #4]
  40274c:	dcb8      	bgt.n	4026c0 <__svfiscanf_r+0x590>
  40274e:	4659      	mov	r1, fp
  402750:	4648      	mov	r0, r9
  402752:	9308      	str	r3, [sp, #32]
  402754:	9204      	str	r2, [sp, #16]
  402756:	f001 fedd 	bl	404514 <__srefill_r>
  40275a:	9a04      	ldr	r2, [sp, #16]
  40275c:	9b08      	ldr	r3, [sp, #32]
  40275e:	2800      	cmp	r0, #0
  402760:	d0b1      	beq.n	4026c6 <__svfiscanf_r+0x596>
  402762:	e7b2      	b.n	4026ca <__svfiscanf_r+0x59a>
  402764:	0629      	lsls	r1, r5, #24
  402766:	d5b0      	bpl.n	4026ca <__svfiscanf_r+0x59a>
  402768:	f025 0580 	bic.w	r5, r5, #128	; 0x80
  40276c:	e79d      	b.n	4026aa <__svfiscanf_r+0x57a>
  40276e:	2c00      	cmp	r4, #0
  402770:	bf08      	it	eq
  402772:	f04f 34ff 	moveq.w	r4, #4294967295
  402776:	f015 0601 	ands.w	r6, r5, #1
  40277a:	f47f aeea 	bne.w	402552 <__svfiscanf_r+0x422>
  40277e:	06eb      	lsls	r3, r5, #27
  402780:	f140 811c 	bpl.w	4029bc <__svfiscanf_r+0x88c>
  402784:	f001 f832 	bl	4037ec <__locale_ctype_ptr>
  402788:	f8db 3000 	ldr.w	r3, [fp]
  40278c:	781a      	ldrb	r2, [r3, #0]
  40278e:	4410      	add	r0, r2
  402790:	3301      	adds	r3, #1
  402792:	7842      	ldrb	r2, [r0, #1]
  402794:	0715      	lsls	r5, r2, #28
  402796:	d411      	bmi.n	4027bc <__svfiscanf_r+0x68c>
  402798:	f8db 2004 	ldr.w	r2, [fp, #4]
  40279c:	f8cb 3000 	str.w	r3, [fp]
  4027a0:	3601      	adds	r6, #1
  4027a2:	3a01      	subs	r2, #1
  4027a4:	42b4      	cmp	r4, r6
  4027a6:	f8cb 2004 	str.w	r2, [fp, #4]
  4027aa:	d007      	beq.n	4027bc <__svfiscanf_r+0x68c>
  4027ac:	2a00      	cmp	r2, #0
  4027ae:	dce9      	bgt.n	402784 <__svfiscanf_r+0x654>
  4027b0:	4659      	mov	r1, fp
  4027b2:	4638      	mov	r0, r7
  4027b4:	f001 feae 	bl	404514 <__srefill_r>
  4027b8:	2800      	cmp	r0, #0
  4027ba:	d0e3      	beq.n	402784 <__svfiscanf_r+0x654>
  4027bc:	44b2      	add	sl, r6
  4027be:	9e03      	ldr	r6, [sp, #12]
  4027c0:	4634      	mov	r4, r6
  4027c2:	e503      	b.n	4021cc <__svfiscanf_r+0x9c>
  4027c4:	9a06      	ldr	r2, [sp, #24]
  4027c6:	6815      	ldr	r5, [r2, #0]
  4027c8:	1d16      	adds	r6, r2, #4
  4027ca:	46a9      	mov	r9, r5
  4027cc:	f10d 0860 	add.w	r8, sp, #96	; 0x60
  4027d0:	f8db 3000 	ldr.w	r3, [fp]
  4027d4:	781a      	ldrb	r2, [r3, #0]
  4027d6:	f818 2002 	ldrb.w	r2, [r8, r2]
  4027da:	1c59      	adds	r1, r3, #1
  4027dc:	b1c2      	cbz	r2, 402810 <__svfiscanf_r+0x6e0>
  4027de:	f8db 2004 	ldr.w	r2, [fp, #4]
  4027e2:	f8cb 1000 	str.w	r1, [fp]
  4027e6:	3a01      	subs	r2, #1
  4027e8:	f8cb 2004 	str.w	r2, [fp, #4]
  4027ec:	781b      	ldrb	r3, [r3, #0]
  4027ee:	f809 3b01 	strb.w	r3, [r9], #1
  4027f2:	3c01      	subs	r4, #1
  4027f4:	d00c      	beq.n	402810 <__svfiscanf_r+0x6e0>
  4027f6:	f8db 3004 	ldr.w	r3, [fp, #4]
  4027fa:	2b00      	cmp	r3, #0
  4027fc:	dce8      	bgt.n	4027d0 <__svfiscanf_r+0x6a0>
  4027fe:	4659      	mov	r1, fp
  402800:	4638      	mov	r0, r7
  402802:	f001 fe87 	bl	404514 <__srefill_r>
  402806:	2800      	cmp	r0, #0
  402808:	d0e2      	beq.n	4027d0 <__svfiscanf_r+0x6a0>
  40280a:	454d      	cmp	r5, r9
  40280c:	f43f adec 	beq.w	4023e8 <__svfiscanf_r+0x2b8>
  402810:	ebb9 0505 	subs.w	r5, r9, r5
  402814:	f43f ace0 	beq.w	4021d8 <__svfiscanf_r+0xa8>
  402818:	9a05      	ldr	r2, [sp, #20]
  40281a:	9606      	str	r6, [sp, #24]
  40281c:	2300      	movs	r3, #0
  40281e:	3201      	adds	r2, #1
  402820:	9205      	str	r2, [sp, #20]
  402822:	f889 3000 	strb.w	r3, [r9]
  402826:	e5c0      	b.n	4023aa <__svfiscanf_r+0x27a>
  402828:	ab0c      	add	r3, sp, #48	; 0x30
  40282a:	4618      	mov	r0, r3
  40282c:	2208      	movs	r2, #8
  40282e:	2100      	movs	r1, #0
  402830:	9308      	str	r3, [sp, #32]
  402832:	f7fe fc15 	bl	401060 <memset>
  402836:	f015 0310 	ands.w	r3, r5, #16
  40283a:	9309      	str	r3, [sp, #36]	; 0x24
  40283c:	d077      	beq.n	40292e <__svfiscanf_r+0x7fe>
  40283e:	f04f 0900 	mov.w	r9, #0
  402842:	2c00      	cmp	r4, #0
  402844:	f43f aea9 	beq.w	40259a <__svfiscanf_r+0x46a>
  402848:	2500      	movs	r5, #0
  40284a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
  40284e:	f000 ffbb 	bl	4037c8 <__locale_mb_cur_max>
  402852:	42a8      	cmp	r0, r5
  402854:	f43f adc8 	beq.w	4023e8 <__svfiscanf_r+0x2b8>
  402858:	e89b 000c 	ldmia.w	fp, {r2, r3}
  40285c:	f812 0b01 	ldrb.w	r0, [r2], #1
  402860:	f8cb 2000 	str.w	r2, [fp]
  402864:	3b01      	subs	r3, #1
  402866:	9a08      	ldr	r2, [sp, #32]
  402868:	9200      	str	r2, [sp, #0]
  40286a:	1c6e      	adds	r6, r5, #1
  40286c:	f8cb 3004 	str.w	r3, [fp, #4]
  402870:	f808 0005 	strb.w	r0, [r8, r5]
  402874:	4633      	mov	r3, r6
  402876:	4642      	mov	r2, r8
  402878:	4649      	mov	r1, r9
  40287a:	4638      	mov	r0, r7
  40287c:	f001 fafc 	bl	403e78 <_mbrtowc_r>
  402880:	1c43      	adds	r3, r0, #1
  402882:	f43f adb1 	beq.w	4023e8 <__svfiscanf_r+0x2b8>
  402886:	2800      	cmp	r0, #0
  402888:	d16c      	bne.n	402964 <__svfiscanf_r+0x834>
  40288a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40288c:	2b00      	cmp	r3, #0
  40288e:	d16d      	bne.n	40296c <__svfiscanf_r+0x83c>
  402890:	f8c9 3000 	str.w	r3, [r9]
  402894:	44b2      	add	sl, r6
  402896:	3c01      	subs	r4, #1
  402898:	f109 0904 	add.w	r9, r9, #4
  40289c:	2500      	movs	r5, #0
  40289e:	f8db 3004 	ldr.w	r3, [fp, #4]
  4028a2:	2b00      	cmp	r3, #0
  4028a4:	dd30      	ble.n	402908 <__svfiscanf_r+0x7d8>
  4028a6:	2c00      	cmp	r4, #0
  4028a8:	d1d1      	bne.n	40284e <__svfiscanf_r+0x71e>
  4028aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4028ac:	2b00      	cmp	r3, #0
  4028ae:	f47f ae74 	bne.w	40259a <__svfiscanf_r+0x46a>
  4028b2:	e66f      	b.n	402594 <__svfiscanf_r+0x464>
  4028b4:	4622      	mov	r2, r4
  4028b6:	f888 4000 	strb.w	r4, [r8]
  4028ba:	9b04      	ldr	r3, [sp, #16]
  4028bc:	9c07      	ldr	r4, [sp, #28]
  4028be:	4631      	mov	r1, r6
  4028c0:	4638      	mov	r0, r7
  4028c2:	47a0      	blx	r4
  4028c4:	06aa      	lsls	r2, r5, #26
  4028c6:	d442      	bmi.n	40294e <__svfiscanf_r+0x81e>
  4028c8:	076b      	lsls	r3, r5, #29
  4028ca:	f100 80d7 	bmi.w	402a7c <__svfiscanf_r+0x94c>
  4028ce:	f015 0201 	ands.w	r2, r5, #1
  4028d2:	d13c      	bne.n	40294e <__svfiscanf_r+0x81e>
  4028d4:	07ad      	lsls	r5, r5, #30
  4028d6:	d53a      	bpl.n	40294e <__svfiscanf_r+0x81e>
  4028d8:	9b07      	ldr	r3, [sp, #28]
  4028da:	4619      	mov	r1, r3
  4028dc:	4b36      	ldr	r3, [pc, #216]	; (4029b8 <__svfiscanf_r+0x888>)
  4028de:	4299      	cmp	r1, r3
  4028e0:	4638      	mov	r0, r7
  4028e2:	9b04      	ldr	r3, [sp, #16]
  4028e4:	4631      	mov	r1, r6
  4028e6:	f000 811e 	beq.w	402b26 <__svfiscanf_r+0x9f6>
  4028ea:	f002 f8a1 	bl	404a30 <_strtoll_r>
  4028ee:	9a06      	ldr	r2, [sp, #24]
  4028f0:	6813      	ldr	r3, [r2, #0]
  4028f2:	e9c3 0100 	strd	r0, r1, [r3]
  4028f6:	3204      	adds	r2, #4
  4028f8:	9206      	str	r2, [sp, #24]
  4028fa:	9b05      	ldr	r3, [sp, #20]
  4028fc:	3301      	adds	r3, #1
  4028fe:	9305      	str	r3, [sp, #20]
  402900:	e6f3      	b.n	4026ea <__svfiscanf_r+0x5ba>
  402902:	f425 65b0 	bic.w	r5, r5, #1408	; 0x580
  402906:	e6d0      	b.n	4026aa <__svfiscanf_r+0x57a>
  402908:	4659      	mov	r1, fp
  40290a:	4638      	mov	r0, r7
  40290c:	f001 fe02 	bl	404514 <__srefill_r>
  402910:	2800      	cmp	r0, #0
  402912:	d0c8      	beq.n	4028a6 <__svfiscanf_r+0x776>
  402914:	2d00      	cmp	r5, #0
  402916:	d0c8      	beq.n	4028aa <__svfiscanf_r+0x77a>
  402918:	e566      	b.n	4023e8 <__svfiscanf_r+0x2b8>
  40291a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40291e:	9203      	str	r2, [sp, #12]
  402920:	f000 ff76 	bl	403810 <__retarget_lock_acquire_recursive>
  402924:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
  402928:	9a03      	ldr	r2, [sp, #12]
  40292a:	b299      	uxth	r1, r3
  40292c:	e410      	b.n	402150 <__svfiscanf_r+0x20>
  40292e:	9a06      	ldr	r2, [sp, #24]
  402930:	4613      	mov	r3, r2
  402932:	3304      	adds	r3, #4
  402934:	f8d2 9000 	ldr.w	r9, [r2]
  402938:	9306      	str	r3, [sp, #24]
  40293a:	2c00      	cmp	r4, #0
  40293c:	d184      	bne.n	402848 <__svfiscanf_r+0x718>
  40293e:	e629      	b.n	402594 <__svfiscanf_r+0x464>
  402940:	9a06      	ldr	r2, [sp, #24]
  402942:	4613      	mov	r3, r2
  402944:	3304      	adds	r3, #4
  402946:	f8d2 9000 	ldr.w	r9, [r2]
  40294a:	9306      	str	r3, [sp, #24]
  40294c:	e60f      	b.n	40256e <__svfiscanf_r+0x43e>
  40294e:	9a06      	ldr	r2, [sp, #24]
  402950:	6813      	ldr	r3, [r2, #0]
  402952:	3204      	adds	r2, #4
  402954:	9206      	str	r2, [sp, #24]
  402956:	6018      	str	r0, [r3, #0]
  402958:	e7cf      	b.n	4028fa <__svfiscanf_r+0x7ca>
  40295a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40295e:	f000 ff59 	bl	403814 <__retarget_lock_release_recursive>
  402962:	e54a      	b.n	4023fa <__svfiscanf_r+0x2ca>
  402964:	3002      	adds	r0, #2
  402966:	d105      	bne.n	402974 <__svfiscanf_r+0x844>
  402968:	4635      	mov	r5, r6
  40296a:	e798      	b.n	40289e <__svfiscanf_r+0x76e>
  40296c:	44b2      	add	sl, r6
  40296e:	3c01      	subs	r4, #1
  402970:	4605      	mov	r5, r0
  402972:	e794      	b.n	40289e <__svfiscanf_r+0x76e>
  402974:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402976:	44b2      	add	sl, r6
  402978:	3c01      	subs	r4, #1
  40297a:	2b00      	cmp	r3, #0
  40297c:	d08c      	beq.n	402898 <__svfiscanf_r+0x768>
  40297e:	2500      	movs	r5, #0
  402980:	e78d      	b.n	40289e <__svfiscanf_r+0x76e>
  402982:	2d00      	cmp	r5, #0
  402984:	f47f ad11 	bne.w	4023aa <__svfiscanf_r+0x27a>
  402988:	e52e      	b.n	4023e8 <__svfiscanf_r+0x2b8>
  40298a:	9d06      	ldr	r5, [sp, #24]
  40298c:	4623      	mov	r3, r4
  40298e:	6829      	ldr	r1, [r5, #0]
  402990:	f8cd b000 	str.w	fp, [sp]
  402994:	2201      	movs	r2, #1
  402996:	4638      	mov	r0, r7
  402998:	f000 fb28 	bl	402fec <_fread_r>
  40299c:	1d2e      	adds	r6, r5, #4
  40299e:	2800      	cmp	r0, #0
  4029a0:	f43f ad22 	beq.w	4023e8 <__svfiscanf_r+0x2b8>
  4029a4:	9b05      	ldr	r3, [sp, #20]
  4029a6:	9606      	str	r6, [sp, #24]
  4029a8:	9e03      	ldr	r6, [sp, #12]
  4029aa:	3301      	adds	r3, #1
  4029ac:	4482      	add	sl, r0
  4029ae:	9305      	str	r3, [sp, #20]
  4029b0:	4634      	mov	r4, r6
  4029b2:	e40b      	b.n	4021cc <__svfiscanf_r+0x9c>
  4029b4:	004056d0 	.word	0x004056d0
  4029b8:	00404b9d 	.word	0x00404b9d
  4029bc:	9a06      	ldr	r2, [sp, #24]
  4029be:	6816      	ldr	r6, [r2, #0]
  4029c0:	f102 0804 	add.w	r8, r2, #4
  4029c4:	4635      	mov	r5, r6
  4029c6:	f000 ff11 	bl	4037ec <__locale_ctype_ptr>
  4029ca:	f8db 2000 	ldr.w	r2, [fp]
  4029ce:	7813      	ldrb	r3, [r2, #0]
  4029d0:	4418      	add	r0, r3
  4029d2:	1c51      	adds	r1, r2, #1
  4029d4:	7843      	ldrb	r3, [r0, #1]
  4029d6:	0718      	lsls	r0, r3, #28
  4029d8:	d415      	bmi.n	402a06 <__svfiscanf_r+0x8d6>
  4029da:	f8db 3004 	ldr.w	r3, [fp, #4]
  4029de:	f8cb 1000 	str.w	r1, [fp]
  4029e2:	3b01      	subs	r3, #1
  4029e4:	f8cb 3004 	str.w	r3, [fp, #4]
  4029e8:	7813      	ldrb	r3, [r2, #0]
  4029ea:	f805 3b01 	strb.w	r3, [r5], #1
  4029ee:	3c01      	subs	r4, #1
  4029f0:	d009      	beq.n	402a06 <__svfiscanf_r+0x8d6>
  4029f2:	f8db 3004 	ldr.w	r3, [fp, #4]
  4029f6:	2b00      	cmp	r3, #0
  4029f8:	dce5      	bgt.n	4029c6 <__svfiscanf_r+0x896>
  4029fa:	4659      	mov	r1, fp
  4029fc:	4638      	mov	r0, r7
  4029fe:	f001 fd89 	bl	404514 <__srefill_r>
  402a02:	2800      	cmp	r0, #0
  402a04:	d0df      	beq.n	4029c6 <__svfiscanf_r+0x896>
  402a06:	1bae      	subs	r6, r5, r6
  402a08:	9a05      	ldr	r2, [sp, #20]
  402a0a:	f8cd 8018 	str.w	r8, [sp, #24]
  402a0e:	44b2      	add	sl, r6
  402a10:	9e03      	ldr	r6, [sp, #12]
  402a12:	2300      	movs	r3, #0
  402a14:	3201      	adds	r2, #1
  402a16:	9205      	str	r2, [sp, #20]
  402a18:	702b      	strb	r3, [r5, #0]
  402a1a:	4634      	mov	r4, r6
  402a1c:	f7ff bbd6 	b.w	4021cc <__svfiscanf_r+0x9c>
  402a20:	f818 1c01 	ldrb.w	r1, [r8, #-1]
  402a24:	465a      	mov	r2, fp
  402a26:	4638      	mov	r0, r7
  402a28:	f002 f9f6 	bl	404e18 <_ungetc_r>
  402a2c:	f108 38ff 	add.w	r8, r8, #4294967295
  402a30:	e654      	b.n	4026dc <__svfiscanf_r+0x5ac>
  402a32:	4659      	mov	r1, fp
  402a34:	4638      	mov	r0, r7
  402a36:	f001 fd6d 	bl	404514 <__srefill_r>
  402a3a:	2800      	cmp	r0, #0
  402a3c:	f43f ac67 	beq.w	40230e <__svfiscanf_r+0x1de>
  402a40:	e4d2      	b.n	4023e8 <__svfiscanf_r+0x2b8>
  402a42:	f896 8002 	ldrb.w	r8, [r6, #2]
  402a46:	f045 0502 	orr.w	r5, r5, #2
  402a4a:	3602      	adds	r6, #2
  402a4c:	f7ff bbd9 	b.w	402202 <__svfiscanf_r+0xd2>
  402a50:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  402a54:	f000 fede 	bl	403814 <__retarget_lock_release_recursive>
  402a58:	f04f 33ff 	mov.w	r3, #4294967295
  402a5c:	9305      	str	r3, [sp, #20]
  402a5e:	9805      	ldr	r0, [sp, #20]
  402a60:	b059      	add	sp, #356	; 0x164
  402a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a66:	9a06      	ldr	r2, [sp, #24]
  402a68:	9e03      	ldr	r6, [sp, #12]
  402a6a:	6813      	ldr	r3, [r2, #0]
  402a6c:	f8c3 a000 	str.w	sl, [r3]
  402a70:	4613      	mov	r3, r2
  402a72:	3304      	adds	r3, #4
  402a74:	9306      	str	r3, [sp, #24]
  402a76:	4634      	mov	r4, r6
  402a78:	f7ff bba8 	b.w	4021cc <__svfiscanf_r+0x9c>
  402a7c:	9a06      	ldr	r2, [sp, #24]
  402a7e:	6813      	ldr	r3, [r2, #0]
  402a80:	3204      	adds	r2, #4
  402a82:	9206      	str	r2, [sp, #24]
  402a84:	8018      	strh	r0, [r3, #0]
  402a86:	e738      	b.n	4028fa <__svfiscanf_r+0x7ca>
  402a88:	9a06      	ldr	r2, [sp, #24]
  402a8a:	9e03      	ldr	r6, [sp, #12]
  402a8c:	6813      	ldr	r3, [r2, #0]
  402a8e:	f8a3 a000 	strh.w	sl, [r3]
  402a92:	4613      	mov	r3, r2
  402a94:	3304      	adds	r3, #4
  402a96:	9306      	str	r3, [sp, #24]
  402a98:	4634      	mov	r4, r6
  402a9a:	f7ff bb97 	b.w	4021cc <__svfiscanf_r+0x9c>
  402a9e:	f000 fe93 	bl	4037c8 <__locale_mb_cur_max>
  402aa2:	4286      	cmp	r6, r0
  402aa4:	f43f aca0 	beq.w	4023e8 <__svfiscanf_r+0x2b8>
  402aa8:	e89b 000c 	ldmia.w	fp, {r2, r3}
  402aac:	f812 0b01 	ldrb.w	r0, [r2], #1
  402ab0:	f8cb 2000 	str.w	r2, [fp]
  402ab4:	3b01      	subs	r3, #1
  402ab6:	9a08      	ldr	r2, [sp, #32]
  402ab8:	9200      	str	r2, [sp, #0]
  402aba:	1c75      	adds	r5, r6, #1
  402abc:	f8cb 3004 	str.w	r3, [fp, #4]
  402ac0:	4649      	mov	r1, r9
  402ac2:	f808 0006 	strb.w	r0, [r8, r6]
  402ac6:	462b      	mov	r3, r5
  402ac8:	4642      	mov	r2, r8
  402aca:	4638      	mov	r0, r7
  402acc:	f001 f9d4 	bl	403e78 <_mbrtowc_r>
  402ad0:	1c41      	adds	r1, r0, #1
  402ad2:	f43f ac89 	beq.w	4023e8 <__svfiscanf_r+0x2b8>
  402ad6:	b198      	cbz	r0, 402b00 <__svfiscanf_r+0x9d0>
  402ad8:	3002      	adds	r0, #2
  402ada:	bf08      	it	eq
  402adc:	462e      	moveq	r6, r5
  402ade:	d12e      	bne.n	402b3e <__svfiscanf_r+0xa0e>
  402ae0:	f8db 3004 	ldr.w	r3, [fp, #4]
  402ae4:	2b00      	cmp	r3, #0
  402ae6:	f73f ad45 	bgt.w	402574 <__svfiscanf_r+0x444>
  402aea:	4659      	mov	r1, fp
  402aec:	4638      	mov	r0, r7
  402aee:	f001 fd11 	bl	404514 <__srefill_r>
  402af2:	2800      	cmp	r0, #0
  402af4:	f43f ad3e 	beq.w	402574 <__svfiscanf_r+0x444>
  402af8:	2e00      	cmp	r6, #0
  402afa:	f47f ac75 	bne.w	4023e8 <__svfiscanf_r+0x2b8>
  402afe:	e545      	b.n	40258c <__svfiscanf_r+0x45c>
  402b00:	f8c9 0000 	str.w	r0, [r9]
  402b04:	f000 fe52 	bl	4037ac <iswspace>
  402b08:	4606      	mov	r6, r0
  402b0a:	b178      	cbz	r0, 402b2c <__svfiscanf_r+0x9fc>
  402b0c:	2d00      	cmp	r5, #0
  402b0e:	f43f ad3d 	beq.w	40258c <__svfiscanf_r+0x45c>
  402b12:	4445      	add	r5, r8
  402b14:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
  402b18:	465a      	mov	r2, fp
  402b1a:	4638      	mov	r0, r7
  402b1c:	f002 f97c 	bl	404e18 <_ungetc_r>
  402b20:	4545      	cmp	r5, r8
  402b22:	d1f7      	bne.n	402b14 <__svfiscanf_r+0x9e4>
  402b24:	e532      	b.n	40258c <__svfiscanf_r+0x45c>
  402b26:	f002 f929 	bl	404d7c <_strtoull_r>
  402b2a:	e6e0      	b.n	4028ee <__svfiscanf_r+0x7be>
  402b2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402b2e:	44aa      	add	sl, r5
  402b30:	3c01      	subs	r4, #1
  402b32:	2b00      	cmp	r3, #0
  402b34:	d1d4      	bne.n	402ae0 <__svfiscanf_r+0x9b0>
  402b36:	f109 0904 	add.w	r9, r9, #4
  402b3a:	461e      	mov	r6, r3
  402b3c:	e7d0      	b.n	402ae0 <__svfiscanf_r+0x9b0>
  402b3e:	f8d9 0000 	ldr.w	r0, [r9]
  402b42:	e7df      	b.n	402b04 <__svfiscanf_r+0x9d4>

00402b44 <__swsetup_r>:
  402b44:	b538      	push	{r3, r4, r5, lr}
  402b46:	4b30      	ldr	r3, [pc, #192]	; (402c08 <__swsetup_r+0xc4>)
  402b48:	681b      	ldr	r3, [r3, #0]
  402b4a:	4605      	mov	r5, r0
  402b4c:	460c      	mov	r4, r1
  402b4e:	b113      	cbz	r3, 402b56 <__swsetup_r+0x12>
  402b50:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  402b52:	2a00      	cmp	r2, #0
  402b54:	d038      	beq.n	402bc8 <__swsetup_r+0x84>
  402b56:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402b5a:	b293      	uxth	r3, r2
  402b5c:	0718      	lsls	r0, r3, #28
  402b5e:	d50c      	bpl.n	402b7a <__swsetup_r+0x36>
  402b60:	6920      	ldr	r0, [r4, #16]
  402b62:	b1a8      	cbz	r0, 402b90 <__swsetup_r+0x4c>
  402b64:	f013 0201 	ands.w	r2, r3, #1
  402b68:	d01e      	beq.n	402ba8 <__swsetup_r+0x64>
  402b6a:	6963      	ldr	r3, [r4, #20]
  402b6c:	2200      	movs	r2, #0
  402b6e:	425b      	negs	r3, r3
  402b70:	61a3      	str	r3, [r4, #24]
  402b72:	60a2      	str	r2, [r4, #8]
  402b74:	b1f0      	cbz	r0, 402bb4 <__swsetup_r+0x70>
  402b76:	2000      	movs	r0, #0
  402b78:	bd38      	pop	{r3, r4, r5, pc}
  402b7a:	06d9      	lsls	r1, r3, #27
  402b7c:	d53c      	bpl.n	402bf8 <__swsetup_r+0xb4>
  402b7e:	0758      	lsls	r0, r3, #29
  402b80:	d426      	bmi.n	402bd0 <__swsetup_r+0x8c>
  402b82:	6920      	ldr	r0, [r4, #16]
  402b84:	f042 0308 	orr.w	r3, r2, #8
  402b88:	81a3      	strh	r3, [r4, #12]
  402b8a:	b29b      	uxth	r3, r3
  402b8c:	2800      	cmp	r0, #0
  402b8e:	d1e9      	bne.n	402b64 <__swsetup_r+0x20>
  402b90:	f403 7220 	and.w	r2, r3, #640	; 0x280
  402b94:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  402b98:	d0e4      	beq.n	402b64 <__swsetup_r+0x20>
  402b9a:	4628      	mov	r0, r5
  402b9c:	4621      	mov	r1, r4
  402b9e:	f000 fe69 	bl	403874 <__smakebuf_r>
  402ba2:	89a3      	ldrh	r3, [r4, #12]
  402ba4:	6920      	ldr	r0, [r4, #16]
  402ba6:	e7dd      	b.n	402b64 <__swsetup_r+0x20>
  402ba8:	0799      	lsls	r1, r3, #30
  402baa:	bf58      	it	pl
  402bac:	6962      	ldrpl	r2, [r4, #20]
  402bae:	60a2      	str	r2, [r4, #8]
  402bb0:	2800      	cmp	r0, #0
  402bb2:	d1e0      	bne.n	402b76 <__swsetup_r+0x32>
  402bb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402bb8:	061a      	lsls	r2, r3, #24
  402bba:	d5dd      	bpl.n	402b78 <__swsetup_r+0x34>
  402bbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402bc0:	81a3      	strh	r3, [r4, #12]
  402bc2:	f04f 30ff 	mov.w	r0, #4294967295
  402bc6:	bd38      	pop	{r3, r4, r5, pc}
  402bc8:	4618      	mov	r0, r3
  402bca:	f000 f939 	bl	402e40 <__sinit>
  402bce:	e7c2      	b.n	402b56 <__swsetup_r+0x12>
  402bd0:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402bd2:	b151      	cbz	r1, 402bea <__swsetup_r+0xa6>
  402bd4:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402bd8:	4299      	cmp	r1, r3
  402bda:	d004      	beq.n	402be6 <__swsetup_r+0xa2>
  402bdc:	4628      	mov	r0, r5
  402bde:	f000 fb37 	bl	403250 <_free_r>
  402be2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402be6:	2300      	movs	r3, #0
  402be8:	6323      	str	r3, [r4, #48]	; 0x30
  402bea:	2300      	movs	r3, #0
  402bec:	6920      	ldr	r0, [r4, #16]
  402bee:	6063      	str	r3, [r4, #4]
  402bf0:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  402bf4:	6020      	str	r0, [r4, #0]
  402bf6:	e7c5      	b.n	402b84 <__swsetup_r+0x40>
  402bf8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  402bfc:	2309      	movs	r3, #9
  402bfe:	602b      	str	r3, [r5, #0]
  402c00:	f04f 30ff 	mov.w	r0, #4294967295
  402c04:	81a2      	strh	r2, [r4, #12]
  402c06:	bd38      	pop	{r3, r4, r5, pc}
  402c08:	20400018 	.word	0x20400018

00402c0c <register_fini>:
  402c0c:	4b02      	ldr	r3, [pc, #8]	; (402c18 <register_fini+0xc>)
  402c0e:	b113      	cbz	r3, 402c16 <register_fini+0xa>
  402c10:	4802      	ldr	r0, [pc, #8]	; (402c1c <register_fini+0x10>)
  402c12:	f000 b805 	b.w	402c20 <atexit>
  402c16:	4770      	bx	lr
  402c18:	00000000 	.word	0x00000000
  402c1c:	00402eb1 	.word	0x00402eb1

00402c20 <atexit>:
  402c20:	2300      	movs	r3, #0
  402c22:	4601      	mov	r1, r0
  402c24:	461a      	mov	r2, r3
  402c26:	4618      	mov	r0, r3
  402c28:	f002 ba38 	b.w	40509c <__register_exitproc>

00402c2c <__sflush_r>:
  402c2c:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  402c30:	b29a      	uxth	r2, r3
  402c32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402c36:	460d      	mov	r5, r1
  402c38:	0711      	lsls	r1, r2, #28
  402c3a:	4680      	mov	r8, r0
  402c3c:	d43a      	bmi.n	402cb4 <__sflush_r+0x88>
  402c3e:	686a      	ldr	r2, [r5, #4]
  402c40:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402c44:	2a00      	cmp	r2, #0
  402c46:	81ab      	strh	r3, [r5, #12]
  402c48:	dd6f      	ble.n	402d2a <__sflush_r+0xfe>
  402c4a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402c4c:	2c00      	cmp	r4, #0
  402c4e:	d049      	beq.n	402ce4 <__sflush_r+0xb8>
  402c50:	2200      	movs	r2, #0
  402c52:	b29b      	uxth	r3, r3
  402c54:	f8d8 6000 	ldr.w	r6, [r8]
  402c58:	f8c8 2000 	str.w	r2, [r8]
  402c5c:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  402c60:	d067      	beq.n	402d32 <__sflush_r+0x106>
  402c62:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  402c64:	075f      	lsls	r7, r3, #29
  402c66:	d505      	bpl.n	402c74 <__sflush_r+0x48>
  402c68:	6869      	ldr	r1, [r5, #4]
  402c6a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  402c6c:	1a52      	subs	r2, r2, r1
  402c6e:	b10b      	cbz	r3, 402c74 <__sflush_r+0x48>
  402c70:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  402c72:	1ad2      	subs	r2, r2, r3
  402c74:	2300      	movs	r3, #0
  402c76:	69e9      	ldr	r1, [r5, #28]
  402c78:	4640      	mov	r0, r8
  402c7a:	47a0      	blx	r4
  402c7c:	1c44      	adds	r4, r0, #1
  402c7e:	d03c      	beq.n	402cfa <__sflush_r+0xce>
  402c80:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  402c84:	692a      	ldr	r2, [r5, #16]
  402c86:	602a      	str	r2, [r5, #0]
  402c88:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  402c8c:	2200      	movs	r2, #0
  402c8e:	81ab      	strh	r3, [r5, #12]
  402c90:	04db      	lsls	r3, r3, #19
  402c92:	606a      	str	r2, [r5, #4]
  402c94:	d447      	bmi.n	402d26 <__sflush_r+0xfa>
  402c96:	6b29      	ldr	r1, [r5, #48]	; 0x30
  402c98:	f8c8 6000 	str.w	r6, [r8]
  402c9c:	b311      	cbz	r1, 402ce4 <__sflush_r+0xb8>
  402c9e:	f105 0340 	add.w	r3, r5, #64	; 0x40
  402ca2:	4299      	cmp	r1, r3
  402ca4:	d002      	beq.n	402cac <__sflush_r+0x80>
  402ca6:	4640      	mov	r0, r8
  402ca8:	f000 fad2 	bl	403250 <_free_r>
  402cac:	2000      	movs	r0, #0
  402cae:	6328      	str	r0, [r5, #48]	; 0x30
  402cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402cb4:	692e      	ldr	r6, [r5, #16]
  402cb6:	b1ae      	cbz	r6, 402ce4 <__sflush_r+0xb8>
  402cb8:	682c      	ldr	r4, [r5, #0]
  402cba:	602e      	str	r6, [r5, #0]
  402cbc:	0791      	lsls	r1, r2, #30
  402cbe:	bf0c      	ite	eq
  402cc0:	696b      	ldreq	r3, [r5, #20]
  402cc2:	2300      	movne	r3, #0
  402cc4:	1ba4      	subs	r4, r4, r6
  402cc6:	60ab      	str	r3, [r5, #8]
  402cc8:	e00a      	b.n	402ce0 <__sflush_r+0xb4>
  402cca:	4623      	mov	r3, r4
  402ccc:	4632      	mov	r2, r6
  402cce:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  402cd0:	69e9      	ldr	r1, [r5, #28]
  402cd2:	4640      	mov	r0, r8
  402cd4:	47b8      	blx	r7
  402cd6:	2800      	cmp	r0, #0
  402cd8:	eba4 0400 	sub.w	r4, r4, r0
  402cdc:	4406      	add	r6, r0
  402cde:	dd04      	ble.n	402cea <__sflush_r+0xbe>
  402ce0:	2c00      	cmp	r4, #0
  402ce2:	dcf2      	bgt.n	402cca <__sflush_r+0x9e>
  402ce4:	2000      	movs	r0, #0
  402ce6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402cea:	89ab      	ldrh	r3, [r5, #12]
  402cec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402cf0:	81ab      	strh	r3, [r5, #12]
  402cf2:	f04f 30ff 	mov.w	r0, #4294967295
  402cf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402cfa:	f8d8 4000 	ldr.w	r4, [r8]
  402cfe:	2c1d      	cmp	r4, #29
  402d00:	d8f3      	bhi.n	402cea <__sflush_r+0xbe>
  402d02:	4b19      	ldr	r3, [pc, #100]	; (402d68 <__sflush_r+0x13c>)
  402d04:	40e3      	lsrs	r3, r4
  402d06:	43db      	mvns	r3, r3
  402d08:	f013 0301 	ands.w	r3, r3, #1
  402d0c:	d1ed      	bne.n	402cea <__sflush_r+0xbe>
  402d0e:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  402d12:	606b      	str	r3, [r5, #4]
  402d14:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  402d18:	6929      	ldr	r1, [r5, #16]
  402d1a:	81ab      	strh	r3, [r5, #12]
  402d1c:	04da      	lsls	r2, r3, #19
  402d1e:	6029      	str	r1, [r5, #0]
  402d20:	d5b9      	bpl.n	402c96 <__sflush_r+0x6a>
  402d22:	2c00      	cmp	r4, #0
  402d24:	d1b7      	bne.n	402c96 <__sflush_r+0x6a>
  402d26:	6528      	str	r0, [r5, #80]	; 0x50
  402d28:	e7b5      	b.n	402c96 <__sflush_r+0x6a>
  402d2a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  402d2c:	2a00      	cmp	r2, #0
  402d2e:	dc8c      	bgt.n	402c4a <__sflush_r+0x1e>
  402d30:	e7d8      	b.n	402ce4 <__sflush_r+0xb8>
  402d32:	2301      	movs	r3, #1
  402d34:	69e9      	ldr	r1, [r5, #28]
  402d36:	4640      	mov	r0, r8
  402d38:	47a0      	blx	r4
  402d3a:	1c43      	adds	r3, r0, #1
  402d3c:	4602      	mov	r2, r0
  402d3e:	d002      	beq.n	402d46 <__sflush_r+0x11a>
  402d40:	89ab      	ldrh	r3, [r5, #12]
  402d42:	6aac      	ldr	r4, [r5, #40]	; 0x28
  402d44:	e78e      	b.n	402c64 <__sflush_r+0x38>
  402d46:	f8d8 3000 	ldr.w	r3, [r8]
  402d4a:	2b00      	cmp	r3, #0
  402d4c:	d0f8      	beq.n	402d40 <__sflush_r+0x114>
  402d4e:	2b1d      	cmp	r3, #29
  402d50:	d001      	beq.n	402d56 <__sflush_r+0x12a>
  402d52:	2b16      	cmp	r3, #22
  402d54:	d102      	bne.n	402d5c <__sflush_r+0x130>
  402d56:	f8c8 6000 	str.w	r6, [r8]
  402d5a:	e7c3      	b.n	402ce4 <__sflush_r+0xb8>
  402d5c:	89ab      	ldrh	r3, [r5, #12]
  402d5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402d62:	81ab      	strh	r3, [r5, #12]
  402d64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402d68:	20400001 	.word	0x20400001

00402d6c <_fflush_r>:
  402d6c:	b538      	push	{r3, r4, r5, lr}
  402d6e:	460d      	mov	r5, r1
  402d70:	4604      	mov	r4, r0
  402d72:	b108      	cbz	r0, 402d78 <_fflush_r+0xc>
  402d74:	6b83      	ldr	r3, [r0, #56]	; 0x38
  402d76:	b1bb      	cbz	r3, 402da8 <_fflush_r+0x3c>
  402d78:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  402d7c:	b188      	cbz	r0, 402da2 <_fflush_r+0x36>
  402d7e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  402d80:	07db      	lsls	r3, r3, #31
  402d82:	d401      	bmi.n	402d88 <_fflush_r+0x1c>
  402d84:	0581      	lsls	r1, r0, #22
  402d86:	d517      	bpl.n	402db8 <_fflush_r+0x4c>
  402d88:	4620      	mov	r0, r4
  402d8a:	4629      	mov	r1, r5
  402d8c:	f7ff ff4e 	bl	402c2c <__sflush_r>
  402d90:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  402d92:	07da      	lsls	r2, r3, #31
  402d94:	4604      	mov	r4, r0
  402d96:	d402      	bmi.n	402d9e <_fflush_r+0x32>
  402d98:	89ab      	ldrh	r3, [r5, #12]
  402d9a:	059b      	lsls	r3, r3, #22
  402d9c:	d507      	bpl.n	402dae <_fflush_r+0x42>
  402d9e:	4620      	mov	r0, r4
  402da0:	bd38      	pop	{r3, r4, r5, pc}
  402da2:	4604      	mov	r4, r0
  402da4:	4620      	mov	r0, r4
  402da6:	bd38      	pop	{r3, r4, r5, pc}
  402da8:	f000 f84a 	bl	402e40 <__sinit>
  402dac:	e7e4      	b.n	402d78 <_fflush_r+0xc>
  402dae:	6da8      	ldr	r0, [r5, #88]	; 0x58
  402db0:	f000 fd30 	bl	403814 <__retarget_lock_release_recursive>
  402db4:	4620      	mov	r0, r4
  402db6:	bd38      	pop	{r3, r4, r5, pc}
  402db8:	6da8      	ldr	r0, [r5, #88]	; 0x58
  402dba:	f000 fd29 	bl	403810 <__retarget_lock_acquire_recursive>
  402dbe:	e7e3      	b.n	402d88 <_fflush_r+0x1c>

00402dc0 <fflush>:
  402dc0:	b120      	cbz	r0, 402dcc <fflush+0xc>
  402dc2:	4b05      	ldr	r3, [pc, #20]	; (402dd8 <fflush+0x18>)
  402dc4:	4601      	mov	r1, r0
  402dc6:	6818      	ldr	r0, [r3, #0]
  402dc8:	f7ff bfd0 	b.w	402d6c <_fflush_r>
  402dcc:	4b03      	ldr	r3, [pc, #12]	; (402ddc <fflush+0x1c>)
  402dce:	4904      	ldr	r1, [pc, #16]	; (402de0 <fflush+0x20>)
  402dd0:	6818      	ldr	r0, [r3, #0]
  402dd2:	f000 bcc1 	b.w	403758 <_fwalk_reent>
  402dd6:	bf00      	nop
  402dd8:	20400018 	.word	0x20400018
  402ddc:	0040567c 	.word	0x0040567c
  402de0:	00402d6d 	.word	0x00402d6d

00402de4 <_cleanup_r>:
  402de4:	4901      	ldr	r1, [pc, #4]	; (402dec <_cleanup_r+0x8>)
  402de6:	f000 bcb7 	b.w	403758 <_fwalk_reent>
  402dea:	bf00      	nop
  402dec:	00405185 	.word	0x00405185

00402df0 <std.isra.0>:
  402df0:	b510      	push	{r4, lr}
  402df2:	2300      	movs	r3, #0
  402df4:	4604      	mov	r4, r0
  402df6:	8181      	strh	r1, [r0, #12]
  402df8:	81c2      	strh	r2, [r0, #14]
  402dfa:	6003      	str	r3, [r0, #0]
  402dfc:	6043      	str	r3, [r0, #4]
  402dfe:	6083      	str	r3, [r0, #8]
  402e00:	6643      	str	r3, [r0, #100]	; 0x64
  402e02:	6103      	str	r3, [r0, #16]
  402e04:	6143      	str	r3, [r0, #20]
  402e06:	6183      	str	r3, [r0, #24]
  402e08:	4619      	mov	r1, r3
  402e0a:	2208      	movs	r2, #8
  402e0c:	305c      	adds	r0, #92	; 0x5c
  402e0e:	f7fe f927 	bl	401060 <memset>
  402e12:	4807      	ldr	r0, [pc, #28]	; (402e30 <std.isra.0+0x40>)
  402e14:	4907      	ldr	r1, [pc, #28]	; (402e34 <std.isra.0+0x44>)
  402e16:	4a08      	ldr	r2, [pc, #32]	; (402e38 <std.isra.0+0x48>)
  402e18:	4b08      	ldr	r3, [pc, #32]	; (402e3c <std.isra.0+0x4c>)
  402e1a:	6220      	str	r0, [r4, #32]
  402e1c:	61e4      	str	r4, [r4, #28]
  402e1e:	6261      	str	r1, [r4, #36]	; 0x24
  402e20:	62a2      	str	r2, [r4, #40]	; 0x28
  402e22:	62e3      	str	r3, [r4, #44]	; 0x2c
  402e24:	f104 0058 	add.w	r0, r4, #88	; 0x58
  402e28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402e2c:	f000 bcec 	b.w	403808 <__retarget_lock_init_recursive>
  402e30:	004046c1 	.word	0x004046c1
  402e34:	004046e5 	.word	0x004046e5
  402e38:	00404721 	.word	0x00404721
  402e3c:	00404741 	.word	0x00404741

00402e40 <__sinit>:
  402e40:	b510      	push	{r4, lr}
  402e42:	4604      	mov	r4, r0
  402e44:	4812      	ldr	r0, [pc, #72]	; (402e90 <__sinit+0x50>)
  402e46:	f000 fce3 	bl	403810 <__retarget_lock_acquire_recursive>
  402e4a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  402e4c:	b9d2      	cbnz	r2, 402e84 <__sinit+0x44>
  402e4e:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  402e52:	4810      	ldr	r0, [pc, #64]	; (402e94 <__sinit+0x54>)
  402e54:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  402e58:	2103      	movs	r1, #3
  402e5a:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  402e5e:	63e0      	str	r0, [r4, #60]	; 0x3c
  402e60:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  402e64:	6860      	ldr	r0, [r4, #4]
  402e66:	2104      	movs	r1, #4
  402e68:	f7ff ffc2 	bl	402df0 <std.isra.0>
  402e6c:	2201      	movs	r2, #1
  402e6e:	2109      	movs	r1, #9
  402e70:	68a0      	ldr	r0, [r4, #8]
  402e72:	f7ff ffbd 	bl	402df0 <std.isra.0>
  402e76:	2202      	movs	r2, #2
  402e78:	2112      	movs	r1, #18
  402e7a:	68e0      	ldr	r0, [r4, #12]
  402e7c:	f7ff ffb8 	bl	402df0 <std.isra.0>
  402e80:	2301      	movs	r3, #1
  402e82:	63a3      	str	r3, [r4, #56]	; 0x38
  402e84:	4802      	ldr	r0, [pc, #8]	; (402e90 <__sinit+0x50>)
  402e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  402e8a:	f000 bcc3 	b.w	403814 <__retarget_lock_release_recursive>
  402e8e:	bf00      	nop
  402e90:	20400ae4 	.word	0x20400ae4
  402e94:	00402de5 	.word	0x00402de5

00402e98 <__sfp_lock_acquire>:
  402e98:	4801      	ldr	r0, [pc, #4]	; (402ea0 <__sfp_lock_acquire+0x8>)
  402e9a:	f000 bcb9 	b.w	403810 <__retarget_lock_acquire_recursive>
  402e9e:	bf00      	nop
  402ea0:	20400af8 	.word	0x20400af8

00402ea4 <__sfp_lock_release>:
  402ea4:	4801      	ldr	r0, [pc, #4]	; (402eac <__sfp_lock_release+0x8>)
  402ea6:	f000 bcb5 	b.w	403814 <__retarget_lock_release_recursive>
  402eaa:	bf00      	nop
  402eac:	20400af8 	.word	0x20400af8

00402eb0 <__libc_fini_array>:
  402eb0:	b538      	push	{r3, r4, r5, lr}
  402eb2:	4c0a      	ldr	r4, [pc, #40]	; (402edc <__libc_fini_array+0x2c>)
  402eb4:	4d0a      	ldr	r5, [pc, #40]	; (402ee0 <__libc_fini_array+0x30>)
  402eb6:	1b64      	subs	r4, r4, r5
  402eb8:	10a4      	asrs	r4, r4, #2
  402eba:	d00a      	beq.n	402ed2 <__libc_fini_array+0x22>
  402ebc:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  402ec0:	3b01      	subs	r3, #1
  402ec2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  402ec6:	3c01      	subs	r4, #1
  402ec8:	f855 3904 	ldr.w	r3, [r5], #-4
  402ecc:	4798      	blx	r3
  402ece:	2c00      	cmp	r4, #0
  402ed0:	d1f9      	bne.n	402ec6 <__libc_fini_array+0x16>
  402ed2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  402ed6:	f002 bca1 	b.w	40581c <_fini>
  402eda:	bf00      	nop
  402edc:	0040582c 	.word	0x0040582c
  402ee0:	00405828 	.word	0x00405828

00402ee4 <__fputwc>:
  402ee4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  402ee8:	b082      	sub	sp, #8
  402eea:	4680      	mov	r8, r0
  402eec:	4689      	mov	r9, r1
  402eee:	4614      	mov	r4, r2
  402ef0:	f000 fc6a 	bl	4037c8 <__locale_mb_cur_max>
  402ef4:	2801      	cmp	r0, #1
  402ef6:	d036      	beq.n	402f66 <__fputwc+0x82>
  402ef8:	464a      	mov	r2, r9
  402efa:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  402efe:	a901      	add	r1, sp, #4
  402f00:	4640      	mov	r0, r8
  402f02:	f002 f87d 	bl	405000 <_wcrtomb_r>
  402f06:	1c42      	adds	r2, r0, #1
  402f08:	4606      	mov	r6, r0
  402f0a:	d025      	beq.n	402f58 <__fputwc+0x74>
  402f0c:	b3a8      	cbz	r0, 402f7a <__fputwc+0x96>
  402f0e:	f89d e004 	ldrb.w	lr, [sp, #4]
  402f12:	2500      	movs	r5, #0
  402f14:	f10d 0a04 	add.w	sl, sp, #4
  402f18:	e009      	b.n	402f2e <__fputwc+0x4a>
  402f1a:	6823      	ldr	r3, [r4, #0]
  402f1c:	1c5a      	adds	r2, r3, #1
  402f1e:	6022      	str	r2, [r4, #0]
  402f20:	f883 e000 	strb.w	lr, [r3]
  402f24:	3501      	adds	r5, #1
  402f26:	42b5      	cmp	r5, r6
  402f28:	d227      	bcs.n	402f7a <__fputwc+0x96>
  402f2a:	f815 e00a 	ldrb.w	lr, [r5, sl]
  402f2e:	68a3      	ldr	r3, [r4, #8]
  402f30:	3b01      	subs	r3, #1
  402f32:	2b00      	cmp	r3, #0
  402f34:	60a3      	str	r3, [r4, #8]
  402f36:	daf0      	bge.n	402f1a <__fputwc+0x36>
  402f38:	69a7      	ldr	r7, [r4, #24]
  402f3a:	42bb      	cmp	r3, r7
  402f3c:	4671      	mov	r1, lr
  402f3e:	4622      	mov	r2, r4
  402f40:	4640      	mov	r0, r8
  402f42:	db02      	blt.n	402f4a <__fputwc+0x66>
  402f44:	f1be 0f0a 	cmp.w	lr, #10
  402f48:	d1e7      	bne.n	402f1a <__fputwc+0x36>
  402f4a:	f002 f801 	bl	404f50 <__swbuf_r>
  402f4e:	1c43      	adds	r3, r0, #1
  402f50:	d1e8      	bne.n	402f24 <__fputwc+0x40>
  402f52:	b002      	add	sp, #8
  402f54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402f58:	89a3      	ldrh	r3, [r4, #12]
  402f5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  402f5e:	81a3      	strh	r3, [r4, #12]
  402f60:	b002      	add	sp, #8
  402f62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402f66:	f109 33ff 	add.w	r3, r9, #4294967295
  402f6a:	2bfe      	cmp	r3, #254	; 0xfe
  402f6c:	d8c4      	bhi.n	402ef8 <__fputwc+0x14>
  402f6e:	fa5f fe89 	uxtb.w	lr, r9
  402f72:	4606      	mov	r6, r0
  402f74:	f88d e004 	strb.w	lr, [sp, #4]
  402f78:	e7cb      	b.n	402f12 <__fputwc+0x2e>
  402f7a:	4648      	mov	r0, r9
  402f7c:	b002      	add	sp, #8
  402f7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402f82:	bf00      	nop

00402f84 <_fputwc_r>:
  402f84:	b530      	push	{r4, r5, lr}
  402f86:	6e53      	ldr	r3, [r2, #100]	; 0x64
  402f88:	f013 0f01 	tst.w	r3, #1
  402f8c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  402f90:	4614      	mov	r4, r2
  402f92:	b083      	sub	sp, #12
  402f94:	4605      	mov	r5, r0
  402f96:	b29a      	uxth	r2, r3
  402f98:	d101      	bne.n	402f9e <_fputwc_r+0x1a>
  402f9a:	0590      	lsls	r0, r2, #22
  402f9c:	d51c      	bpl.n	402fd8 <_fputwc_r+0x54>
  402f9e:	0490      	lsls	r0, r2, #18
  402fa0:	d406      	bmi.n	402fb0 <_fputwc_r+0x2c>
  402fa2:	6e62      	ldr	r2, [r4, #100]	; 0x64
  402fa4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  402fa8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  402fac:	81a3      	strh	r3, [r4, #12]
  402fae:	6662      	str	r2, [r4, #100]	; 0x64
  402fb0:	4628      	mov	r0, r5
  402fb2:	4622      	mov	r2, r4
  402fb4:	f7ff ff96 	bl	402ee4 <__fputwc>
  402fb8:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402fba:	07da      	lsls	r2, r3, #31
  402fbc:	4605      	mov	r5, r0
  402fbe:	d402      	bmi.n	402fc6 <_fputwc_r+0x42>
  402fc0:	89a3      	ldrh	r3, [r4, #12]
  402fc2:	059b      	lsls	r3, r3, #22
  402fc4:	d502      	bpl.n	402fcc <_fputwc_r+0x48>
  402fc6:	4628      	mov	r0, r5
  402fc8:	b003      	add	sp, #12
  402fca:	bd30      	pop	{r4, r5, pc}
  402fcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402fce:	f000 fc21 	bl	403814 <__retarget_lock_release_recursive>
  402fd2:	4628      	mov	r0, r5
  402fd4:	b003      	add	sp, #12
  402fd6:	bd30      	pop	{r4, r5, pc}
  402fd8:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402fda:	9101      	str	r1, [sp, #4]
  402fdc:	f000 fc18 	bl	403810 <__retarget_lock_acquire_recursive>
  402fe0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402fe4:	9901      	ldr	r1, [sp, #4]
  402fe6:	b29a      	uxth	r2, r3
  402fe8:	e7d9      	b.n	402f9e <_fputwc_r+0x1a>
  402fea:	bf00      	nop

00402fec <_fread_r>:
  402fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402ff0:	b085      	sub	sp, #20
  402ff2:	fb02 f703 	mul.w	r7, r2, r3
  402ff6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  402ff8:	2f00      	cmp	r7, #0
  402ffa:	d050      	beq.n	40309e <_fread_r+0xb2>
  402ffc:	4606      	mov	r6, r0
  402ffe:	460d      	mov	r5, r1
  403000:	9301      	str	r3, [sp, #4]
  403002:	9202      	str	r2, [sp, #8]
  403004:	b118      	cbz	r0, 40300e <_fread_r+0x22>
  403006:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403008:	2b00      	cmp	r3, #0
  40300a:	f000 80be 	beq.w	40318a <_fread_r+0x19e>
  40300e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403010:	f013 0f01 	tst.w	r3, #1
  403014:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403018:	b29a      	uxth	r2, r3
  40301a:	d102      	bne.n	403022 <_fread_r+0x36>
  40301c:	0590      	lsls	r0, r2, #22
  40301e:	f140 80b7 	bpl.w	403190 <_fread_r+0x1a4>
  403022:	0491      	lsls	r1, r2, #18
  403024:	d407      	bmi.n	403036 <_fread_r+0x4a>
  403026:	6e62      	ldr	r2, [r4, #100]	; 0x64
  403028:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40302c:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
  403030:	81a3      	strh	r3, [r4, #12]
  403032:	b29a      	uxth	r2, r3
  403034:	6661      	str	r1, [r4, #100]	; 0x64
  403036:	f8d4 9004 	ldr.w	r9, [r4, #4]
  40303a:	f1b9 0f00 	cmp.w	r9, #0
  40303e:	db49      	blt.n	4030d4 <_fread_r+0xe8>
  403040:	0792      	lsls	r2, r2, #30
  403042:	464b      	mov	r3, r9
  403044:	d44c      	bmi.n	4030e0 <_fread_r+0xf4>
  403046:	46b0      	mov	r8, r6
  403048:	46ba      	mov	sl, r7
  40304a:	464e      	mov	r6, r9
  40304c:	e00e      	b.n	40306c <_fread_r+0x80>
  40304e:	6821      	ldr	r1, [r4, #0]
  403050:	f000 ffa6 	bl	403fa0 <memcpy>
  403054:	6823      	ldr	r3, [r4, #0]
  403056:	4433      	add	r3, r6
  403058:	6023      	str	r3, [r4, #0]
  40305a:	4621      	mov	r1, r4
  40305c:	4640      	mov	r0, r8
  40305e:	4435      	add	r5, r6
  403060:	ebaa 0a06 	sub.w	sl, sl, r6
  403064:	f001 fa56 	bl	404514 <__srefill_r>
  403068:	bb10      	cbnz	r0, 4030b0 <_fread_r+0xc4>
  40306a:	6866      	ldr	r6, [r4, #4]
  40306c:	45b2      	cmp	sl, r6
  40306e:	4632      	mov	r2, r6
  403070:	4628      	mov	r0, r5
  403072:	d8ec      	bhi.n	40304e <_fread_r+0x62>
  403074:	4652      	mov	r2, sl
  403076:	6821      	ldr	r1, [r4, #0]
  403078:	f000 ff92 	bl	403fa0 <memcpy>
  40307c:	6862      	ldr	r2, [r4, #4]
  40307e:	6823      	ldr	r3, [r4, #0]
  403080:	eba2 020a 	sub.w	r2, r2, sl
  403084:	4453      	add	r3, sl
  403086:	6062      	str	r2, [r4, #4]
  403088:	6023      	str	r3, [r4, #0]
  40308a:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40308c:	07da      	lsls	r2, r3, #31
  40308e:	d40a      	bmi.n	4030a6 <_fread_r+0xba>
  403090:	89a3      	ldrh	r3, [r4, #12]
  403092:	059b      	lsls	r3, r3, #22
  403094:	d407      	bmi.n	4030a6 <_fread_r+0xba>
  403096:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403098:	f000 fbbc 	bl	403814 <__retarget_lock_release_recursive>
  40309c:	9f01      	ldr	r7, [sp, #4]
  40309e:	4638      	mov	r0, r7
  4030a0:	b005      	add	sp, #20
  4030a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030a6:	9f01      	ldr	r7, [sp, #4]
  4030a8:	4638      	mov	r0, r7
  4030aa:	b005      	add	sp, #20
  4030ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030b0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4030b2:	07d8      	lsls	r0, r3, #31
  4030b4:	d405      	bmi.n	4030c2 <_fread_r+0xd6>
  4030b6:	89a3      	ldrh	r3, [r4, #12]
  4030b8:	0599      	lsls	r1, r3, #22
  4030ba:	d402      	bmi.n	4030c2 <_fread_r+0xd6>
  4030bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4030be:	f000 fba9 	bl	403814 <__retarget_lock_release_recursive>
  4030c2:	9b02      	ldr	r3, [sp, #8]
  4030c4:	eba7 070a 	sub.w	r7, r7, sl
  4030c8:	fbb7 f7f3 	udiv	r7, r7, r3
  4030cc:	4638      	mov	r0, r7
  4030ce:	b005      	add	sp, #20
  4030d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030d4:	2100      	movs	r1, #0
  4030d6:	0792      	lsls	r2, r2, #30
  4030d8:	460b      	mov	r3, r1
  4030da:	6061      	str	r1, [r4, #4]
  4030dc:	4689      	mov	r9, r1
  4030de:	d5b2      	bpl.n	403046 <_fread_r+0x5a>
  4030e0:	42bb      	cmp	r3, r7
  4030e2:	bf28      	it	cs
  4030e4:	463b      	movcs	r3, r7
  4030e6:	461a      	mov	r2, r3
  4030e8:	6821      	ldr	r1, [r4, #0]
  4030ea:	9303      	str	r3, [sp, #12]
  4030ec:	4628      	mov	r0, r5
  4030ee:	f000 ff57 	bl	403fa0 <memcpy>
  4030f2:	e894 0005 	ldmia.w	r4, {r0, r2}
  4030f6:	9b03      	ldr	r3, [sp, #12]
  4030f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4030fa:	eb00 0903 	add.w	r9, r0, r3
  4030fe:	1ad2      	subs	r2, r2, r3
  403100:	f8c4 9000 	str.w	r9, [r4]
  403104:	6062      	str	r2, [r4, #4]
  403106:	eba7 0803 	sub.w	r8, r7, r3
  40310a:	2900      	cmp	r1, #0
  40310c:	d04b      	beq.n	4031a6 <_fread_r+0x1ba>
  40310e:	f1b8 0f00 	cmp.w	r8, #0
  403112:	d0ba      	beq.n	40308a <_fread_r+0x9e>
  403114:	f104 0040 	add.w	r0, r4, #64	; 0x40
  403118:	4281      	cmp	r1, r0
  40311a:	d005      	beq.n	403128 <_fread_r+0x13c>
  40311c:	4630      	mov	r0, r6
  40311e:	f000 f897 	bl	403250 <_free_r>
  403122:	f8d4 9000 	ldr.w	r9, [r4]
  403126:	9b03      	ldr	r3, [sp, #12]
  403128:	2100      	movs	r1, #0
  40312a:	6321      	str	r1, [r4, #48]	; 0x30
  40312c:	463a      	mov	r2, r7
  40312e:	441d      	add	r5, r3
  403130:	4633      	mov	r3, r6
  403132:	464f      	mov	r7, r9
  403134:	4646      	mov	r6, r8
  403136:	f8d4 b010 	ldr.w	fp, [r4, #16]
  40313a:	f8d4 a014 	ldr.w	sl, [r4, #20]
  40313e:	4698      	mov	r8, r3
  403140:	4691      	mov	r9, r2
  403142:	e001      	b.n	403148 <_fread_r+0x15c>
  403144:	2e00      	cmp	r6, #0
  403146:	d0a0      	beq.n	40308a <_fread_r+0x9e>
  403148:	6125      	str	r5, [r4, #16]
  40314a:	6166      	str	r6, [r4, #20]
  40314c:	6025      	str	r5, [r4, #0]
  40314e:	4621      	mov	r1, r4
  403150:	4640      	mov	r0, r8
  403152:	f001 f9df 	bl	404514 <__srefill_r>
  403156:	6863      	ldr	r3, [r4, #4]
  403158:	f8c4 b010 	str.w	fp, [r4, #16]
  40315c:	1af6      	subs	r6, r6, r3
  40315e:	441d      	add	r5, r3
  403160:	2300      	movs	r3, #0
  403162:	f8c4 a014 	str.w	sl, [r4, #20]
  403166:	6027      	str	r7, [r4, #0]
  403168:	6063      	str	r3, [r4, #4]
  40316a:	2800      	cmp	r0, #0
  40316c:	d0ea      	beq.n	403144 <_fread_r+0x158>
  40316e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  403170:	46b0      	mov	r8, r6
  403172:	07de      	lsls	r6, r3, #31
  403174:	464f      	mov	r7, r9
  403176:	d402      	bmi.n	40317e <_fread_r+0x192>
  403178:	89a3      	ldrh	r3, [r4, #12]
  40317a:	059d      	lsls	r5, r3, #22
  40317c:	d50f      	bpl.n	40319e <_fread_r+0x1b2>
  40317e:	eba7 0708 	sub.w	r7, r7, r8
  403182:	9b02      	ldr	r3, [sp, #8]
  403184:	fbb7 f7f3 	udiv	r7, r7, r3
  403188:	e789      	b.n	40309e <_fread_r+0xb2>
  40318a:	f7ff fe59 	bl	402e40 <__sinit>
  40318e:	e73e      	b.n	40300e <_fread_r+0x22>
  403190:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403192:	f000 fb3d 	bl	403810 <__retarget_lock_acquire_recursive>
  403196:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40319a:	b29a      	uxth	r2, r3
  40319c:	e741      	b.n	403022 <_fread_r+0x36>
  40319e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4031a0:	f000 fb38 	bl	403814 <__retarget_lock_release_recursive>
  4031a4:	e7eb      	b.n	40317e <_fread_r+0x192>
  4031a6:	f1b8 0f00 	cmp.w	r8, #0
  4031aa:	d1bf      	bne.n	40312c <_fread_r+0x140>
  4031ac:	e76d      	b.n	40308a <_fread_r+0x9e>
  4031ae:	bf00      	nop

004031b0 <_malloc_trim_r>:
  4031b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4031b2:	4f24      	ldr	r7, [pc, #144]	; (403244 <_malloc_trim_r+0x94>)
  4031b4:	460c      	mov	r4, r1
  4031b6:	4606      	mov	r6, r0
  4031b8:	f000 fff0 	bl	40419c <__malloc_lock>
  4031bc:	68bb      	ldr	r3, [r7, #8]
  4031be:	685d      	ldr	r5, [r3, #4]
  4031c0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4031c4:	310f      	adds	r1, #15
  4031c6:	f025 0503 	bic.w	r5, r5, #3
  4031ca:	4429      	add	r1, r5
  4031cc:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4031d0:	f021 010f 	bic.w	r1, r1, #15
  4031d4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4031d8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4031dc:	db07      	blt.n	4031ee <_malloc_trim_r+0x3e>
  4031de:	2100      	movs	r1, #0
  4031e0:	4630      	mov	r0, r6
  4031e2:	f001 fa21 	bl	404628 <_sbrk_r>
  4031e6:	68bb      	ldr	r3, [r7, #8]
  4031e8:	442b      	add	r3, r5
  4031ea:	4298      	cmp	r0, r3
  4031ec:	d004      	beq.n	4031f8 <_malloc_trim_r+0x48>
  4031ee:	4630      	mov	r0, r6
  4031f0:	f000 ffda 	bl	4041a8 <__malloc_unlock>
  4031f4:	2000      	movs	r0, #0
  4031f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4031f8:	4261      	negs	r1, r4
  4031fa:	4630      	mov	r0, r6
  4031fc:	f001 fa14 	bl	404628 <_sbrk_r>
  403200:	3001      	adds	r0, #1
  403202:	d00d      	beq.n	403220 <_malloc_trim_r+0x70>
  403204:	4b10      	ldr	r3, [pc, #64]	; (403248 <_malloc_trim_r+0x98>)
  403206:	68ba      	ldr	r2, [r7, #8]
  403208:	6819      	ldr	r1, [r3, #0]
  40320a:	1b2d      	subs	r5, r5, r4
  40320c:	f045 0501 	orr.w	r5, r5, #1
  403210:	4630      	mov	r0, r6
  403212:	1b09      	subs	r1, r1, r4
  403214:	6055      	str	r5, [r2, #4]
  403216:	6019      	str	r1, [r3, #0]
  403218:	f000 ffc6 	bl	4041a8 <__malloc_unlock>
  40321c:	2001      	movs	r0, #1
  40321e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  403220:	2100      	movs	r1, #0
  403222:	4630      	mov	r0, r6
  403224:	f001 fa00 	bl	404628 <_sbrk_r>
  403228:	68ba      	ldr	r2, [r7, #8]
  40322a:	1a83      	subs	r3, r0, r2
  40322c:	2b0f      	cmp	r3, #15
  40322e:	ddde      	ble.n	4031ee <_malloc_trim_r+0x3e>
  403230:	4c06      	ldr	r4, [pc, #24]	; (40324c <_malloc_trim_r+0x9c>)
  403232:	4905      	ldr	r1, [pc, #20]	; (403248 <_malloc_trim_r+0x98>)
  403234:	6824      	ldr	r4, [r4, #0]
  403236:	f043 0301 	orr.w	r3, r3, #1
  40323a:	1b00      	subs	r0, r0, r4
  40323c:	6053      	str	r3, [r2, #4]
  40323e:	6008      	str	r0, [r1, #0]
  403240:	e7d5      	b.n	4031ee <_malloc_trim_r+0x3e>
  403242:	bf00      	nop
  403244:	204005b8 	.word	0x204005b8
  403248:	20400a8c 	.word	0x20400a8c
  40324c:	204009c0 	.word	0x204009c0

00403250 <_free_r>:
  403250:	2900      	cmp	r1, #0
  403252:	d044      	beq.n	4032de <_free_r+0x8e>
  403254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403258:	460d      	mov	r5, r1
  40325a:	4680      	mov	r8, r0
  40325c:	f000 ff9e 	bl	40419c <__malloc_lock>
  403260:	f855 7c04 	ldr.w	r7, [r5, #-4]
  403264:	4969      	ldr	r1, [pc, #420]	; (40340c <_free_r+0x1bc>)
  403266:	f027 0301 	bic.w	r3, r7, #1
  40326a:	f1a5 0408 	sub.w	r4, r5, #8
  40326e:	18e2      	adds	r2, r4, r3
  403270:	688e      	ldr	r6, [r1, #8]
  403272:	6850      	ldr	r0, [r2, #4]
  403274:	42b2      	cmp	r2, r6
  403276:	f020 0003 	bic.w	r0, r0, #3
  40327a:	d05e      	beq.n	40333a <_free_r+0xea>
  40327c:	07fe      	lsls	r6, r7, #31
  40327e:	6050      	str	r0, [r2, #4]
  403280:	d40b      	bmi.n	40329a <_free_r+0x4a>
  403282:	f855 7c08 	ldr.w	r7, [r5, #-8]
  403286:	1be4      	subs	r4, r4, r7
  403288:	f101 0e08 	add.w	lr, r1, #8
  40328c:	68a5      	ldr	r5, [r4, #8]
  40328e:	4575      	cmp	r5, lr
  403290:	443b      	add	r3, r7
  403292:	d06d      	beq.n	403370 <_free_r+0x120>
  403294:	68e7      	ldr	r7, [r4, #12]
  403296:	60ef      	str	r7, [r5, #12]
  403298:	60bd      	str	r5, [r7, #8]
  40329a:	1815      	adds	r5, r2, r0
  40329c:	686d      	ldr	r5, [r5, #4]
  40329e:	07ed      	lsls	r5, r5, #31
  4032a0:	d53e      	bpl.n	403320 <_free_r+0xd0>
  4032a2:	f043 0201 	orr.w	r2, r3, #1
  4032a6:	6062      	str	r2, [r4, #4]
  4032a8:	50e3      	str	r3, [r4, r3]
  4032aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4032ae:	d217      	bcs.n	4032e0 <_free_r+0x90>
  4032b0:	08db      	lsrs	r3, r3, #3
  4032b2:	1c58      	adds	r0, r3, #1
  4032b4:	109a      	asrs	r2, r3, #2
  4032b6:	684d      	ldr	r5, [r1, #4]
  4032b8:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4032bc:	60a7      	str	r7, [r4, #8]
  4032be:	2301      	movs	r3, #1
  4032c0:	4093      	lsls	r3, r2
  4032c2:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4032c6:	432b      	orrs	r3, r5
  4032c8:	3a08      	subs	r2, #8
  4032ca:	60e2      	str	r2, [r4, #12]
  4032cc:	604b      	str	r3, [r1, #4]
  4032ce:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4032d2:	60fc      	str	r4, [r7, #12]
  4032d4:	4640      	mov	r0, r8
  4032d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4032da:	f000 bf65 	b.w	4041a8 <__malloc_unlock>
  4032de:	4770      	bx	lr
  4032e0:	0a5a      	lsrs	r2, r3, #9
  4032e2:	2a04      	cmp	r2, #4
  4032e4:	d852      	bhi.n	40338c <_free_r+0x13c>
  4032e6:	099a      	lsrs	r2, r3, #6
  4032e8:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4032ec:	00ff      	lsls	r7, r7, #3
  4032ee:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4032f2:	19c8      	adds	r0, r1, r7
  4032f4:	59ca      	ldr	r2, [r1, r7]
  4032f6:	3808      	subs	r0, #8
  4032f8:	4290      	cmp	r0, r2
  4032fa:	d04f      	beq.n	40339c <_free_r+0x14c>
  4032fc:	6851      	ldr	r1, [r2, #4]
  4032fe:	f021 0103 	bic.w	r1, r1, #3
  403302:	428b      	cmp	r3, r1
  403304:	d232      	bcs.n	40336c <_free_r+0x11c>
  403306:	6892      	ldr	r2, [r2, #8]
  403308:	4290      	cmp	r0, r2
  40330a:	d1f7      	bne.n	4032fc <_free_r+0xac>
  40330c:	68c3      	ldr	r3, [r0, #12]
  40330e:	60a0      	str	r0, [r4, #8]
  403310:	60e3      	str	r3, [r4, #12]
  403312:	609c      	str	r4, [r3, #8]
  403314:	60c4      	str	r4, [r0, #12]
  403316:	4640      	mov	r0, r8
  403318:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40331c:	f000 bf44 	b.w	4041a8 <__malloc_unlock>
  403320:	6895      	ldr	r5, [r2, #8]
  403322:	4f3b      	ldr	r7, [pc, #236]	; (403410 <_free_r+0x1c0>)
  403324:	42bd      	cmp	r5, r7
  403326:	4403      	add	r3, r0
  403328:	d040      	beq.n	4033ac <_free_r+0x15c>
  40332a:	68d0      	ldr	r0, [r2, #12]
  40332c:	60e8      	str	r0, [r5, #12]
  40332e:	f043 0201 	orr.w	r2, r3, #1
  403332:	6085      	str	r5, [r0, #8]
  403334:	6062      	str	r2, [r4, #4]
  403336:	50e3      	str	r3, [r4, r3]
  403338:	e7b7      	b.n	4032aa <_free_r+0x5a>
  40333a:	07ff      	lsls	r7, r7, #31
  40333c:	4403      	add	r3, r0
  40333e:	d407      	bmi.n	403350 <_free_r+0x100>
  403340:	f855 2c08 	ldr.w	r2, [r5, #-8]
  403344:	1aa4      	subs	r4, r4, r2
  403346:	4413      	add	r3, r2
  403348:	68a0      	ldr	r0, [r4, #8]
  40334a:	68e2      	ldr	r2, [r4, #12]
  40334c:	60c2      	str	r2, [r0, #12]
  40334e:	6090      	str	r0, [r2, #8]
  403350:	4a30      	ldr	r2, [pc, #192]	; (403414 <_free_r+0x1c4>)
  403352:	6812      	ldr	r2, [r2, #0]
  403354:	f043 0001 	orr.w	r0, r3, #1
  403358:	4293      	cmp	r3, r2
  40335a:	6060      	str	r0, [r4, #4]
  40335c:	608c      	str	r4, [r1, #8]
  40335e:	d3b9      	bcc.n	4032d4 <_free_r+0x84>
  403360:	4b2d      	ldr	r3, [pc, #180]	; (403418 <_free_r+0x1c8>)
  403362:	4640      	mov	r0, r8
  403364:	6819      	ldr	r1, [r3, #0]
  403366:	f7ff ff23 	bl	4031b0 <_malloc_trim_r>
  40336a:	e7b3      	b.n	4032d4 <_free_r+0x84>
  40336c:	4610      	mov	r0, r2
  40336e:	e7cd      	b.n	40330c <_free_r+0xbc>
  403370:	1811      	adds	r1, r2, r0
  403372:	6849      	ldr	r1, [r1, #4]
  403374:	07c9      	lsls	r1, r1, #31
  403376:	d444      	bmi.n	403402 <_free_r+0x1b2>
  403378:	6891      	ldr	r1, [r2, #8]
  40337a:	68d2      	ldr	r2, [r2, #12]
  40337c:	60ca      	str	r2, [r1, #12]
  40337e:	4403      	add	r3, r0
  403380:	f043 0001 	orr.w	r0, r3, #1
  403384:	6091      	str	r1, [r2, #8]
  403386:	6060      	str	r0, [r4, #4]
  403388:	50e3      	str	r3, [r4, r3]
  40338a:	e7a3      	b.n	4032d4 <_free_r+0x84>
  40338c:	2a14      	cmp	r2, #20
  40338e:	d816      	bhi.n	4033be <_free_r+0x16e>
  403390:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  403394:	00ff      	lsls	r7, r7, #3
  403396:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40339a:	e7aa      	b.n	4032f2 <_free_r+0xa2>
  40339c:	10aa      	asrs	r2, r5, #2
  40339e:	2301      	movs	r3, #1
  4033a0:	684d      	ldr	r5, [r1, #4]
  4033a2:	4093      	lsls	r3, r2
  4033a4:	432b      	orrs	r3, r5
  4033a6:	604b      	str	r3, [r1, #4]
  4033a8:	4603      	mov	r3, r0
  4033aa:	e7b0      	b.n	40330e <_free_r+0xbe>
  4033ac:	f043 0201 	orr.w	r2, r3, #1
  4033b0:	614c      	str	r4, [r1, #20]
  4033b2:	610c      	str	r4, [r1, #16]
  4033b4:	60e5      	str	r5, [r4, #12]
  4033b6:	60a5      	str	r5, [r4, #8]
  4033b8:	6062      	str	r2, [r4, #4]
  4033ba:	50e3      	str	r3, [r4, r3]
  4033bc:	e78a      	b.n	4032d4 <_free_r+0x84>
  4033be:	2a54      	cmp	r2, #84	; 0x54
  4033c0:	d806      	bhi.n	4033d0 <_free_r+0x180>
  4033c2:	0b1a      	lsrs	r2, r3, #12
  4033c4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4033c8:	00ff      	lsls	r7, r7, #3
  4033ca:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4033ce:	e790      	b.n	4032f2 <_free_r+0xa2>
  4033d0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4033d4:	d806      	bhi.n	4033e4 <_free_r+0x194>
  4033d6:	0bda      	lsrs	r2, r3, #15
  4033d8:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4033dc:	00ff      	lsls	r7, r7, #3
  4033de:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4033e2:	e786      	b.n	4032f2 <_free_r+0xa2>
  4033e4:	f240 5054 	movw	r0, #1364	; 0x554
  4033e8:	4282      	cmp	r2, r0
  4033ea:	d806      	bhi.n	4033fa <_free_r+0x1aa>
  4033ec:	0c9a      	lsrs	r2, r3, #18
  4033ee:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4033f2:	00ff      	lsls	r7, r7, #3
  4033f4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4033f8:	e77b      	b.n	4032f2 <_free_r+0xa2>
  4033fa:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4033fe:	257e      	movs	r5, #126	; 0x7e
  403400:	e777      	b.n	4032f2 <_free_r+0xa2>
  403402:	f043 0101 	orr.w	r1, r3, #1
  403406:	6061      	str	r1, [r4, #4]
  403408:	6013      	str	r3, [r2, #0]
  40340a:	e763      	b.n	4032d4 <_free_r+0x84>
  40340c:	204005b8 	.word	0x204005b8
  403410:	204005c0 	.word	0x204005c0
  403414:	204009c4 	.word	0x204009c4
  403418:	20400abc 	.word	0x20400abc

0040341c <__sfvwrite_r>:
  40341c:	6893      	ldr	r3, [r2, #8]
  40341e:	2b00      	cmp	r3, #0
  403420:	d073      	beq.n	40350a <__sfvwrite_r+0xee>
  403422:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403426:	898b      	ldrh	r3, [r1, #12]
  403428:	b083      	sub	sp, #12
  40342a:	460c      	mov	r4, r1
  40342c:	0719      	lsls	r1, r3, #28
  40342e:	9000      	str	r0, [sp, #0]
  403430:	4616      	mov	r6, r2
  403432:	d526      	bpl.n	403482 <__sfvwrite_r+0x66>
  403434:	6922      	ldr	r2, [r4, #16]
  403436:	b322      	cbz	r2, 403482 <__sfvwrite_r+0x66>
  403438:	f013 0002 	ands.w	r0, r3, #2
  40343c:	6835      	ldr	r5, [r6, #0]
  40343e:	d02c      	beq.n	40349a <__sfvwrite_r+0x7e>
  403440:	f04f 0900 	mov.w	r9, #0
  403444:	4fb0      	ldr	r7, [pc, #704]	; (403708 <__sfvwrite_r+0x2ec>)
  403446:	46c8      	mov	r8, r9
  403448:	46b2      	mov	sl, r6
  40344a:	45b8      	cmp	r8, r7
  40344c:	4643      	mov	r3, r8
  40344e:	464a      	mov	r2, r9
  403450:	bf28      	it	cs
  403452:	463b      	movcs	r3, r7
  403454:	9800      	ldr	r0, [sp, #0]
  403456:	f1b8 0f00 	cmp.w	r8, #0
  40345a:	d050      	beq.n	4034fe <__sfvwrite_r+0xe2>
  40345c:	69e1      	ldr	r1, [r4, #28]
  40345e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  403460:	47b0      	blx	r6
  403462:	2800      	cmp	r0, #0
  403464:	dd58      	ble.n	403518 <__sfvwrite_r+0xfc>
  403466:	f8da 3008 	ldr.w	r3, [sl, #8]
  40346a:	1a1b      	subs	r3, r3, r0
  40346c:	4481      	add	r9, r0
  40346e:	eba8 0800 	sub.w	r8, r8, r0
  403472:	f8ca 3008 	str.w	r3, [sl, #8]
  403476:	2b00      	cmp	r3, #0
  403478:	d1e7      	bne.n	40344a <__sfvwrite_r+0x2e>
  40347a:	2000      	movs	r0, #0
  40347c:	b003      	add	sp, #12
  40347e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403482:	4621      	mov	r1, r4
  403484:	9800      	ldr	r0, [sp, #0]
  403486:	f7ff fb5d 	bl	402b44 <__swsetup_r>
  40348a:	2800      	cmp	r0, #0
  40348c:	f040 8133 	bne.w	4036f6 <__sfvwrite_r+0x2da>
  403490:	89a3      	ldrh	r3, [r4, #12]
  403492:	6835      	ldr	r5, [r6, #0]
  403494:	f013 0002 	ands.w	r0, r3, #2
  403498:	d1d2      	bne.n	403440 <__sfvwrite_r+0x24>
  40349a:	f013 0901 	ands.w	r9, r3, #1
  40349e:	d145      	bne.n	40352c <__sfvwrite_r+0x110>
  4034a0:	464f      	mov	r7, r9
  4034a2:	9601      	str	r6, [sp, #4]
  4034a4:	b337      	cbz	r7, 4034f4 <__sfvwrite_r+0xd8>
  4034a6:	059a      	lsls	r2, r3, #22
  4034a8:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4034ac:	f140 8083 	bpl.w	4035b6 <__sfvwrite_r+0x19a>
  4034b0:	4547      	cmp	r7, r8
  4034b2:	46c3      	mov	fp, r8
  4034b4:	f0c0 80ab 	bcc.w	40360e <__sfvwrite_r+0x1f2>
  4034b8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4034bc:	f040 80ac 	bne.w	403618 <__sfvwrite_r+0x1fc>
  4034c0:	6820      	ldr	r0, [r4, #0]
  4034c2:	46ba      	mov	sl, r7
  4034c4:	465a      	mov	r2, fp
  4034c6:	4649      	mov	r1, r9
  4034c8:	f000 fe04 	bl	4040d4 <memmove>
  4034cc:	68a2      	ldr	r2, [r4, #8]
  4034ce:	6823      	ldr	r3, [r4, #0]
  4034d0:	eba2 0208 	sub.w	r2, r2, r8
  4034d4:	445b      	add	r3, fp
  4034d6:	60a2      	str	r2, [r4, #8]
  4034d8:	6023      	str	r3, [r4, #0]
  4034da:	9a01      	ldr	r2, [sp, #4]
  4034dc:	6893      	ldr	r3, [r2, #8]
  4034de:	eba3 030a 	sub.w	r3, r3, sl
  4034e2:	44d1      	add	r9, sl
  4034e4:	eba7 070a 	sub.w	r7, r7, sl
  4034e8:	6093      	str	r3, [r2, #8]
  4034ea:	2b00      	cmp	r3, #0
  4034ec:	d0c5      	beq.n	40347a <__sfvwrite_r+0x5e>
  4034ee:	89a3      	ldrh	r3, [r4, #12]
  4034f0:	2f00      	cmp	r7, #0
  4034f2:	d1d8      	bne.n	4034a6 <__sfvwrite_r+0x8a>
  4034f4:	f8d5 9000 	ldr.w	r9, [r5]
  4034f8:	686f      	ldr	r7, [r5, #4]
  4034fa:	3508      	adds	r5, #8
  4034fc:	e7d2      	b.n	4034a4 <__sfvwrite_r+0x88>
  4034fe:	f8d5 9000 	ldr.w	r9, [r5]
  403502:	f8d5 8004 	ldr.w	r8, [r5, #4]
  403506:	3508      	adds	r5, #8
  403508:	e79f      	b.n	40344a <__sfvwrite_r+0x2e>
  40350a:	2000      	movs	r0, #0
  40350c:	4770      	bx	lr
  40350e:	4621      	mov	r1, r4
  403510:	9800      	ldr	r0, [sp, #0]
  403512:	f7ff fc2b 	bl	402d6c <_fflush_r>
  403516:	b370      	cbz	r0, 403576 <__sfvwrite_r+0x15a>
  403518:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40351c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  403520:	f04f 30ff 	mov.w	r0, #4294967295
  403524:	81a3      	strh	r3, [r4, #12]
  403526:	b003      	add	sp, #12
  403528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40352c:	4681      	mov	r9, r0
  40352e:	4633      	mov	r3, r6
  403530:	464e      	mov	r6, r9
  403532:	46a8      	mov	r8, r5
  403534:	469a      	mov	sl, r3
  403536:	464d      	mov	r5, r9
  403538:	b34e      	cbz	r6, 40358e <__sfvwrite_r+0x172>
  40353a:	b380      	cbz	r0, 40359e <__sfvwrite_r+0x182>
  40353c:	6820      	ldr	r0, [r4, #0]
  40353e:	6923      	ldr	r3, [r4, #16]
  403540:	6962      	ldr	r2, [r4, #20]
  403542:	45b1      	cmp	r9, r6
  403544:	46cb      	mov	fp, r9
  403546:	bf28      	it	cs
  403548:	46b3      	movcs	fp, r6
  40354a:	4298      	cmp	r0, r3
  40354c:	465f      	mov	r7, fp
  40354e:	d904      	bls.n	40355a <__sfvwrite_r+0x13e>
  403550:	68a3      	ldr	r3, [r4, #8]
  403552:	4413      	add	r3, r2
  403554:	459b      	cmp	fp, r3
  403556:	f300 80a6 	bgt.w	4036a6 <__sfvwrite_r+0x28a>
  40355a:	4593      	cmp	fp, r2
  40355c:	db4b      	blt.n	4035f6 <__sfvwrite_r+0x1da>
  40355e:	4613      	mov	r3, r2
  403560:	6a67      	ldr	r7, [r4, #36]	; 0x24
  403562:	69e1      	ldr	r1, [r4, #28]
  403564:	9800      	ldr	r0, [sp, #0]
  403566:	462a      	mov	r2, r5
  403568:	47b8      	blx	r7
  40356a:	1e07      	subs	r7, r0, #0
  40356c:	ddd4      	ble.n	403518 <__sfvwrite_r+0xfc>
  40356e:	ebb9 0907 	subs.w	r9, r9, r7
  403572:	d0cc      	beq.n	40350e <__sfvwrite_r+0xf2>
  403574:	2001      	movs	r0, #1
  403576:	f8da 3008 	ldr.w	r3, [sl, #8]
  40357a:	1bdb      	subs	r3, r3, r7
  40357c:	443d      	add	r5, r7
  40357e:	1bf6      	subs	r6, r6, r7
  403580:	f8ca 3008 	str.w	r3, [sl, #8]
  403584:	2b00      	cmp	r3, #0
  403586:	f43f af78 	beq.w	40347a <__sfvwrite_r+0x5e>
  40358a:	2e00      	cmp	r6, #0
  40358c:	d1d5      	bne.n	40353a <__sfvwrite_r+0x11e>
  40358e:	f108 0308 	add.w	r3, r8, #8
  403592:	e913 0060 	ldmdb	r3, {r5, r6}
  403596:	4698      	mov	r8, r3
  403598:	3308      	adds	r3, #8
  40359a:	2e00      	cmp	r6, #0
  40359c:	d0f9      	beq.n	403592 <__sfvwrite_r+0x176>
  40359e:	4632      	mov	r2, r6
  4035a0:	210a      	movs	r1, #10
  4035a2:	4628      	mov	r0, r5
  4035a4:	f000 fcac 	bl	403f00 <memchr>
  4035a8:	2800      	cmp	r0, #0
  4035aa:	f000 80a1 	beq.w	4036f0 <__sfvwrite_r+0x2d4>
  4035ae:	3001      	adds	r0, #1
  4035b0:	eba0 0905 	sub.w	r9, r0, r5
  4035b4:	e7c2      	b.n	40353c <__sfvwrite_r+0x120>
  4035b6:	6820      	ldr	r0, [r4, #0]
  4035b8:	6923      	ldr	r3, [r4, #16]
  4035ba:	4298      	cmp	r0, r3
  4035bc:	d802      	bhi.n	4035c4 <__sfvwrite_r+0x1a8>
  4035be:	6963      	ldr	r3, [r4, #20]
  4035c0:	429f      	cmp	r7, r3
  4035c2:	d25d      	bcs.n	403680 <__sfvwrite_r+0x264>
  4035c4:	45b8      	cmp	r8, r7
  4035c6:	bf28      	it	cs
  4035c8:	46b8      	movcs	r8, r7
  4035ca:	4642      	mov	r2, r8
  4035cc:	4649      	mov	r1, r9
  4035ce:	f000 fd81 	bl	4040d4 <memmove>
  4035d2:	68a3      	ldr	r3, [r4, #8]
  4035d4:	6822      	ldr	r2, [r4, #0]
  4035d6:	eba3 0308 	sub.w	r3, r3, r8
  4035da:	4442      	add	r2, r8
  4035dc:	60a3      	str	r3, [r4, #8]
  4035de:	6022      	str	r2, [r4, #0]
  4035e0:	b10b      	cbz	r3, 4035e6 <__sfvwrite_r+0x1ca>
  4035e2:	46c2      	mov	sl, r8
  4035e4:	e779      	b.n	4034da <__sfvwrite_r+0xbe>
  4035e6:	4621      	mov	r1, r4
  4035e8:	9800      	ldr	r0, [sp, #0]
  4035ea:	f7ff fbbf 	bl	402d6c <_fflush_r>
  4035ee:	2800      	cmp	r0, #0
  4035f0:	d192      	bne.n	403518 <__sfvwrite_r+0xfc>
  4035f2:	46c2      	mov	sl, r8
  4035f4:	e771      	b.n	4034da <__sfvwrite_r+0xbe>
  4035f6:	465a      	mov	r2, fp
  4035f8:	4629      	mov	r1, r5
  4035fa:	f000 fd6b 	bl	4040d4 <memmove>
  4035fe:	68a2      	ldr	r2, [r4, #8]
  403600:	6823      	ldr	r3, [r4, #0]
  403602:	eba2 020b 	sub.w	r2, r2, fp
  403606:	445b      	add	r3, fp
  403608:	60a2      	str	r2, [r4, #8]
  40360a:	6023      	str	r3, [r4, #0]
  40360c:	e7af      	b.n	40356e <__sfvwrite_r+0x152>
  40360e:	6820      	ldr	r0, [r4, #0]
  403610:	46b8      	mov	r8, r7
  403612:	46ba      	mov	sl, r7
  403614:	46bb      	mov	fp, r7
  403616:	e755      	b.n	4034c4 <__sfvwrite_r+0xa8>
  403618:	6962      	ldr	r2, [r4, #20]
  40361a:	6820      	ldr	r0, [r4, #0]
  40361c:	6921      	ldr	r1, [r4, #16]
  40361e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  403622:	eba0 0a01 	sub.w	sl, r0, r1
  403626:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40362a:	f10a 0001 	add.w	r0, sl, #1
  40362e:	ea4f 0868 	mov.w	r8, r8, asr #1
  403632:	4438      	add	r0, r7
  403634:	4540      	cmp	r0, r8
  403636:	4642      	mov	r2, r8
  403638:	bf84      	itt	hi
  40363a:	4680      	movhi	r8, r0
  40363c:	4642      	movhi	r2, r8
  40363e:	055b      	lsls	r3, r3, #21
  403640:	d544      	bpl.n	4036cc <__sfvwrite_r+0x2b0>
  403642:	4611      	mov	r1, r2
  403644:	9800      	ldr	r0, [sp, #0]
  403646:	f000 f967 	bl	403918 <_malloc_r>
  40364a:	4683      	mov	fp, r0
  40364c:	2800      	cmp	r0, #0
  40364e:	d055      	beq.n	4036fc <__sfvwrite_r+0x2e0>
  403650:	4652      	mov	r2, sl
  403652:	6921      	ldr	r1, [r4, #16]
  403654:	f000 fca4 	bl	403fa0 <memcpy>
  403658:	89a3      	ldrh	r3, [r4, #12]
  40365a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40365e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  403662:	81a3      	strh	r3, [r4, #12]
  403664:	eb0b 000a 	add.w	r0, fp, sl
  403668:	eba8 030a 	sub.w	r3, r8, sl
  40366c:	f8c4 b010 	str.w	fp, [r4, #16]
  403670:	f8c4 8014 	str.w	r8, [r4, #20]
  403674:	6020      	str	r0, [r4, #0]
  403676:	60a3      	str	r3, [r4, #8]
  403678:	46b8      	mov	r8, r7
  40367a:	46ba      	mov	sl, r7
  40367c:	46bb      	mov	fp, r7
  40367e:	e721      	b.n	4034c4 <__sfvwrite_r+0xa8>
  403680:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  403684:	42b9      	cmp	r1, r7
  403686:	bf28      	it	cs
  403688:	4639      	movcs	r1, r7
  40368a:	464a      	mov	r2, r9
  40368c:	fb91 f1f3 	sdiv	r1, r1, r3
  403690:	9800      	ldr	r0, [sp, #0]
  403692:	6a66      	ldr	r6, [r4, #36]	; 0x24
  403694:	fb03 f301 	mul.w	r3, r3, r1
  403698:	69e1      	ldr	r1, [r4, #28]
  40369a:	47b0      	blx	r6
  40369c:	f1b0 0a00 	subs.w	sl, r0, #0
  4036a0:	f73f af1b 	bgt.w	4034da <__sfvwrite_r+0xbe>
  4036a4:	e738      	b.n	403518 <__sfvwrite_r+0xfc>
  4036a6:	461a      	mov	r2, r3
  4036a8:	4629      	mov	r1, r5
  4036aa:	9301      	str	r3, [sp, #4]
  4036ac:	f000 fd12 	bl	4040d4 <memmove>
  4036b0:	6822      	ldr	r2, [r4, #0]
  4036b2:	9b01      	ldr	r3, [sp, #4]
  4036b4:	9800      	ldr	r0, [sp, #0]
  4036b6:	441a      	add	r2, r3
  4036b8:	6022      	str	r2, [r4, #0]
  4036ba:	4621      	mov	r1, r4
  4036bc:	f7ff fb56 	bl	402d6c <_fflush_r>
  4036c0:	9b01      	ldr	r3, [sp, #4]
  4036c2:	2800      	cmp	r0, #0
  4036c4:	f47f af28 	bne.w	403518 <__sfvwrite_r+0xfc>
  4036c8:	461f      	mov	r7, r3
  4036ca:	e750      	b.n	40356e <__sfvwrite_r+0x152>
  4036cc:	9800      	ldr	r0, [sp, #0]
  4036ce:	f000 fd71 	bl	4041b4 <_realloc_r>
  4036d2:	4683      	mov	fp, r0
  4036d4:	2800      	cmp	r0, #0
  4036d6:	d1c5      	bne.n	403664 <__sfvwrite_r+0x248>
  4036d8:	9d00      	ldr	r5, [sp, #0]
  4036da:	6921      	ldr	r1, [r4, #16]
  4036dc:	4628      	mov	r0, r5
  4036de:	f7ff fdb7 	bl	403250 <_free_r>
  4036e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4036e6:	220c      	movs	r2, #12
  4036e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4036ec:	602a      	str	r2, [r5, #0]
  4036ee:	e715      	b.n	40351c <__sfvwrite_r+0x100>
  4036f0:	f106 0901 	add.w	r9, r6, #1
  4036f4:	e722      	b.n	40353c <__sfvwrite_r+0x120>
  4036f6:	f04f 30ff 	mov.w	r0, #4294967295
  4036fa:	e6bf      	b.n	40347c <__sfvwrite_r+0x60>
  4036fc:	9a00      	ldr	r2, [sp, #0]
  4036fe:	230c      	movs	r3, #12
  403700:	6013      	str	r3, [r2, #0]
  403702:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403706:	e709      	b.n	40351c <__sfvwrite_r+0x100>
  403708:	7ffffc00 	.word	0x7ffffc00

0040370c <_fwalk>:
  40370c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403710:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403714:	d01b      	beq.n	40374e <_fwalk+0x42>
  403716:	4688      	mov	r8, r1
  403718:	2600      	movs	r6, #0
  40371a:	687d      	ldr	r5, [r7, #4]
  40371c:	68bc      	ldr	r4, [r7, #8]
  40371e:	3d01      	subs	r5, #1
  403720:	d40f      	bmi.n	403742 <_fwalk+0x36>
  403722:	89a3      	ldrh	r3, [r4, #12]
  403724:	2b01      	cmp	r3, #1
  403726:	f105 35ff 	add.w	r5, r5, #4294967295
  40372a:	d906      	bls.n	40373a <_fwalk+0x2e>
  40372c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403730:	3301      	adds	r3, #1
  403732:	4620      	mov	r0, r4
  403734:	d001      	beq.n	40373a <_fwalk+0x2e>
  403736:	47c0      	blx	r8
  403738:	4306      	orrs	r6, r0
  40373a:	1c6b      	adds	r3, r5, #1
  40373c:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403740:	d1ef      	bne.n	403722 <_fwalk+0x16>
  403742:	683f      	ldr	r7, [r7, #0]
  403744:	2f00      	cmp	r7, #0
  403746:	d1e8      	bne.n	40371a <_fwalk+0xe>
  403748:	4630      	mov	r0, r6
  40374a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40374e:	463e      	mov	r6, r7
  403750:	4630      	mov	r0, r6
  403752:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403756:	bf00      	nop

00403758 <_fwalk_reent>:
  403758:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40375c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  403760:	d01f      	beq.n	4037a2 <_fwalk_reent+0x4a>
  403762:	4688      	mov	r8, r1
  403764:	4606      	mov	r6, r0
  403766:	f04f 0900 	mov.w	r9, #0
  40376a:	687d      	ldr	r5, [r7, #4]
  40376c:	68bc      	ldr	r4, [r7, #8]
  40376e:	3d01      	subs	r5, #1
  403770:	d411      	bmi.n	403796 <_fwalk_reent+0x3e>
  403772:	89a3      	ldrh	r3, [r4, #12]
  403774:	2b01      	cmp	r3, #1
  403776:	f105 35ff 	add.w	r5, r5, #4294967295
  40377a:	d908      	bls.n	40378e <_fwalk_reent+0x36>
  40377c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  403780:	3301      	adds	r3, #1
  403782:	4621      	mov	r1, r4
  403784:	4630      	mov	r0, r6
  403786:	d002      	beq.n	40378e <_fwalk_reent+0x36>
  403788:	47c0      	blx	r8
  40378a:	ea49 0900 	orr.w	r9, r9, r0
  40378e:	1c6b      	adds	r3, r5, #1
  403790:	f104 0468 	add.w	r4, r4, #104	; 0x68
  403794:	d1ed      	bne.n	403772 <_fwalk_reent+0x1a>
  403796:	683f      	ldr	r7, [r7, #0]
  403798:	2f00      	cmp	r7, #0
  40379a:	d1e6      	bne.n	40376a <_fwalk_reent+0x12>
  40379c:	4648      	mov	r0, r9
  40379e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4037a2:	46b9      	mov	r9, r7
  4037a4:	4648      	mov	r0, r9
  4037a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4037aa:	bf00      	nop

004037ac <iswspace>:
  4037ac:	28ff      	cmp	r0, #255	; 0xff
  4037ae:	d901      	bls.n	4037b4 <iswspace+0x8>
  4037b0:	2000      	movs	r0, #0
  4037b2:	4770      	bx	lr
  4037b4:	b510      	push	{r4, lr}
  4037b6:	4604      	mov	r4, r0
  4037b8:	f000 f818 	bl	4037ec <__locale_ctype_ptr>
  4037bc:	4420      	add	r0, r4
  4037be:	7840      	ldrb	r0, [r0, #1]
  4037c0:	f000 0008 	and.w	r0, r0, #8
  4037c4:	bd10      	pop	{r4, pc}
  4037c6:	bf00      	nop

004037c8 <__locale_mb_cur_max>:
  4037c8:	4b04      	ldr	r3, [pc, #16]	; (4037dc <__locale_mb_cur_max+0x14>)
  4037ca:	4a05      	ldr	r2, [pc, #20]	; (4037e0 <__locale_mb_cur_max+0x18>)
  4037cc:	681b      	ldr	r3, [r3, #0]
  4037ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4037d0:	2b00      	cmp	r3, #0
  4037d2:	bf08      	it	eq
  4037d4:	4613      	moveq	r3, r2
  4037d6:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  4037da:	4770      	bx	lr
  4037dc:	20400018 	.word	0x20400018
  4037e0:	2040044c 	.word	0x2040044c

004037e4 <__locale_ctype_ptr_l>:
  4037e4:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
  4037e8:	4770      	bx	lr
  4037ea:	bf00      	nop

004037ec <__locale_ctype_ptr>:
  4037ec:	4b04      	ldr	r3, [pc, #16]	; (403800 <__locale_ctype_ptr+0x14>)
  4037ee:	4a05      	ldr	r2, [pc, #20]	; (403804 <__locale_ctype_ptr+0x18>)
  4037f0:	681b      	ldr	r3, [r3, #0]
  4037f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  4037f4:	2b00      	cmp	r3, #0
  4037f6:	bf08      	it	eq
  4037f8:	4613      	moveq	r3, r2
  4037fa:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
  4037fe:	4770      	bx	lr
  403800:	20400018 	.word	0x20400018
  403804:	2040044c 	.word	0x2040044c

00403808 <__retarget_lock_init_recursive>:
  403808:	4770      	bx	lr
  40380a:	bf00      	nop

0040380c <__retarget_lock_close_recursive>:
  40380c:	4770      	bx	lr
  40380e:	bf00      	nop

00403810 <__retarget_lock_acquire_recursive>:
  403810:	4770      	bx	lr
  403812:	bf00      	nop

00403814 <__retarget_lock_release_recursive>:
  403814:	4770      	bx	lr
  403816:	bf00      	nop

00403818 <__swhatbuf_r>:
  403818:	b570      	push	{r4, r5, r6, lr}
  40381a:	460c      	mov	r4, r1
  40381c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403820:	2900      	cmp	r1, #0
  403822:	b090      	sub	sp, #64	; 0x40
  403824:	4615      	mov	r5, r2
  403826:	461e      	mov	r6, r3
  403828:	db14      	blt.n	403854 <__swhatbuf_r+0x3c>
  40382a:	aa01      	add	r2, sp, #4
  40382c:	f001 fd0c 	bl	405248 <_fstat_r>
  403830:	2800      	cmp	r0, #0
  403832:	db0f      	blt.n	403854 <__swhatbuf_r+0x3c>
  403834:	9a02      	ldr	r2, [sp, #8]
  403836:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40383a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40383e:	fab2 f282 	clz	r2, r2
  403842:	0952      	lsrs	r2, r2, #5
  403844:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403848:	f44f 6000 	mov.w	r0, #2048	; 0x800
  40384c:	6032      	str	r2, [r6, #0]
  40384e:	602b      	str	r3, [r5, #0]
  403850:	b010      	add	sp, #64	; 0x40
  403852:	bd70      	pop	{r4, r5, r6, pc}
  403854:	89a2      	ldrh	r2, [r4, #12]
  403856:	2300      	movs	r3, #0
  403858:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  40385c:	6033      	str	r3, [r6, #0]
  40385e:	d004      	beq.n	40386a <__swhatbuf_r+0x52>
  403860:	2240      	movs	r2, #64	; 0x40
  403862:	4618      	mov	r0, r3
  403864:	602a      	str	r2, [r5, #0]
  403866:	b010      	add	sp, #64	; 0x40
  403868:	bd70      	pop	{r4, r5, r6, pc}
  40386a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40386e:	602b      	str	r3, [r5, #0]
  403870:	b010      	add	sp, #64	; 0x40
  403872:	bd70      	pop	{r4, r5, r6, pc}

00403874 <__smakebuf_r>:
  403874:	898a      	ldrh	r2, [r1, #12]
  403876:	0792      	lsls	r2, r2, #30
  403878:	460b      	mov	r3, r1
  40387a:	d506      	bpl.n	40388a <__smakebuf_r+0x16>
  40387c:	f101 0243 	add.w	r2, r1, #67	; 0x43
  403880:	2101      	movs	r1, #1
  403882:	601a      	str	r2, [r3, #0]
  403884:	611a      	str	r2, [r3, #16]
  403886:	6159      	str	r1, [r3, #20]
  403888:	4770      	bx	lr
  40388a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40388c:	b083      	sub	sp, #12
  40388e:	ab01      	add	r3, sp, #4
  403890:	466a      	mov	r2, sp
  403892:	460c      	mov	r4, r1
  403894:	4606      	mov	r6, r0
  403896:	f7ff ffbf 	bl	403818 <__swhatbuf_r>
  40389a:	9900      	ldr	r1, [sp, #0]
  40389c:	4605      	mov	r5, r0
  40389e:	4630      	mov	r0, r6
  4038a0:	f000 f83a 	bl	403918 <_malloc_r>
  4038a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4038a8:	b1d8      	cbz	r0, 4038e2 <__smakebuf_r+0x6e>
  4038aa:	9a01      	ldr	r2, [sp, #4]
  4038ac:	4f15      	ldr	r7, [pc, #84]	; (403904 <__smakebuf_r+0x90>)
  4038ae:	9900      	ldr	r1, [sp, #0]
  4038b0:	63f7      	str	r7, [r6, #60]	; 0x3c
  4038b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4038b6:	81a3      	strh	r3, [r4, #12]
  4038b8:	6020      	str	r0, [r4, #0]
  4038ba:	6120      	str	r0, [r4, #16]
  4038bc:	6161      	str	r1, [r4, #20]
  4038be:	b91a      	cbnz	r2, 4038c8 <__smakebuf_r+0x54>
  4038c0:	432b      	orrs	r3, r5
  4038c2:	81a3      	strh	r3, [r4, #12]
  4038c4:	b003      	add	sp, #12
  4038c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4038c8:	4630      	mov	r0, r6
  4038ca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4038ce:	f001 fccf 	bl	405270 <_isatty_r>
  4038d2:	b1a0      	cbz	r0, 4038fe <__smakebuf_r+0x8a>
  4038d4:	89a3      	ldrh	r3, [r4, #12]
  4038d6:	f023 0303 	bic.w	r3, r3, #3
  4038da:	f043 0301 	orr.w	r3, r3, #1
  4038de:	b21b      	sxth	r3, r3
  4038e0:	e7ee      	b.n	4038c0 <__smakebuf_r+0x4c>
  4038e2:	059a      	lsls	r2, r3, #22
  4038e4:	d4ee      	bmi.n	4038c4 <__smakebuf_r+0x50>
  4038e6:	f023 0303 	bic.w	r3, r3, #3
  4038ea:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4038ee:	f043 0302 	orr.w	r3, r3, #2
  4038f2:	2101      	movs	r1, #1
  4038f4:	81a3      	strh	r3, [r4, #12]
  4038f6:	6022      	str	r2, [r4, #0]
  4038f8:	6122      	str	r2, [r4, #16]
  4038fa:	6161      	str	r1, [r4, #20]
  4038fc:	e7e2      	b.n	4038c4 <__smakebuf_r+0x50>
  4038fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403902:	e7dd      	b.n	4038c0 <__smakebuf_r+0x4c>
  403904:	00402de5 	.word	0x00402de5

00403908 <malloc>:
  403908:	4b02      	ldr	r3, [pc, #8]	; (403914 <malloc+0xc>)
  40390a:	4601      	mov	r1, r0
  40390c:	6818      	ldr	r0, [r3, #0]
  40390e:	f000 b803 	b.w	403918 <_malloc_r>
  403912:	bf00      	nop
  403914:	20400018 	.word	0x20400018

00403918 <_malloc_r>:
  403918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40391c:	f101 060b 	add.w	r6, r1, #11
  403920:	2e16      	cmp	r6, #22
  403922:	b083      	sub	sp, #12
  403924:	4605      	mov	r5, r0
  403926:	f240 809e 	bls.w	403a66 <_malloc_r+0x14e>
  40392a:	f036 0607 	bics.w	r6, r6, #7
  40392e:	f100 80bd 	bmi.w	403aac <_malloc_r+0x194>
  403932:	42b1      	cmp	r1, r6
  403934:	f200 80ba 	bhi.w	403aac <_malloc_r+0x194>
  403938:	f000 fc30 	bl	40419c <__malloc_lock>
  40393c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403940:	f0c0 8293 	bcc.w	403e6a <_malloc_r+0x552>
  403944:	0a73      	lsrs	r3, r6, #9
  403946:	f000 80b8 	beq.w	403aba <_malloc_r+0x1a2>
  40394a:	2b04      	cmp	r3, #4
  40394c:	f200 8179 	bhi.w	403c42 <_malloc_r+0x32a>
  403950:	09b3      	lsrs	r3, r6, #6
  403952:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403956:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40395a:	00c3      	lsls	r3, r0, #3
  40395c:	4fbf      	ldr	r7, [pc, #764]	; (403c5c <_malloc_r+0x344>)
  40395e:	443b      	add	r3, r7
  403960:	f1a3 0108 	sub.w	r1, r3, #8
  403964:	685c      	ldr	r4, [r3, #4]
  403966:	42a1      	cmp	r1, r4
  403968:	d106      	bne.n	403978 <_malloc_r+0x60>
  40396a:	e00c      	b.n	403986 <_malloc_r+0x6e>
  40396c:	2a00      	cmp	r2, #0
  40396e:	f280 80aa 	bge.w	403ac6 <_malloc_r+0x1ae>
  403972:	68e4      	ldr	r4, [r4, #12]
  403974:	42a1      	cmp	r1, r4
  403976:	d006      	beq.n	403986 <_malloc_r+0x6e>
  403978:	6863      	ldr	r3, [r4, #4]
  40397a:	f023 0303 	bic.w	r3, r3, #3
  40397e:	1b9a      	subs	r2, r3, r6
  403980:	2a0f      	cmp	r2, #15
  403982:	ddf3      	ble.n	40396c <_malloc_r+0x54>
  403984:	4670      	mov	r0, lr
  403986:	693c      	ldr	r4, [r7, #16]
  403988:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 403c70 <_malloc_r+0x358>
  40398c:	4574      	cmp	r4, lr
  40398e:	f000 81ab 	beq.w	403ce8 <_malloc_r+0x3d0>
  403992:	6863      	ldr	r3, [r4, #4]
  403994:	f023 0303 	bic.w	r3, r3, #3
  403998:	1b9a      	subs	r2, r3, r6
  40399a:	2a0f      	cmp	r2, #15
  40399c:	f300 8190 	bgt.w	403cc0 <_malloc_r+0x3a8>
  4039a0:	2a00      	cmp	r2, #0
  4039a2:	f8c7 e014 	str.w	lr, [r7, #20]
  4039a6:	f8c7 e010 	str.w	lr, [r7, #16]
  4039aa:	f280 809d 	bge.w	403ae8 <_malloc_r+0x1d0>
  4039ae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4039b2:	f080 8161 	bcs.w	403c78 <_malloc_r+0x360>
  4039b6:	08db      	lsrs	r3, r3, #3
  4039b8:	f103 0c01 	add.w	ip, r3, #1
  4039bc:	1099      	asrs	r1, r3, #2
  4039be:	687a      	ldr	r2, [r7, #4]
  4039c0:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4039c4:	f8c4 8008 	str.w	r8, [r4, #8]
  4039c8:	2301      	movs	r3, #1
  4039ca:	408b      	lsls	r3, r1
  4039cc:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4039d0:	4313      	orrs	r3, r2
  4039d2:	3908      	subs	r1, #8
  4039d4:	60e1      	str	r1, [r4, #12]
  4039d6:	607b      	str	r3, [r7, #4]
  4039d8:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4039dc:	f8c8 400c 	str.w	r4, [r8, #12]
  4039e0:	1082      	asrs	r2, r0, #2
  4039e2:	2401      	movs	r4, #1
  4039e4:	4094      	lsls	r4, r2
  4039e6:	429c      	cmp	r4, r3
  4039e8:	f200 808b 	bhi.w	403b02 <_malloc_r+0x1ea>
  4039ec:	421c      	tst	r4, r3
  4039ee:	d106      	bne.n	4039fe <_malloc_r+0xe6>
  4039f0:	f020 0003 	bic.w	r0, r0, #3
  4039f4:	0064      	lsls	r4, r4, #1
  4039f6:	421c      	tst	r4, r3
  4039f8:	f100 0004 	add.w	r0, r0, #4
  4039fc:	d0fa      	beq.n	4039f4 <_malloc_r+0xdc>
  4039fe:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403a02:	46cc      	mov	ip, r9
  403a04:	4680      	mov	r8, r0
  403a06:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403a0a:	459c      	cmp	ip, r3
  403a0c:	d107      	bne.n	403a1e <_malloc_r+0x106>
  403a0e:	e16d      	b.n	403cec <_malloc_r+0x3d4>
  403a10:	2a00      	cmp	r2, #0
  403a12:	f280 817b 	bge.w	403d0c <_malloc_r+0x3f4>
  403a16:	68db      	ldr	r3, [r3, #12]
  403a18:	459c      	cmp	ip, r3
  403a1a:	f000 8167 	beq.w	403cec <_malloc_r+0x3d4>
  403a1e:	6859      	ldr	r1, [r3, #4]
  403a20:	f021 0103 	bic.w	r1, r1, #3
  403a24:	1b8a      	subs	r2, r1, r6
  403a26:	2a0f      	cmp	r2, #15
  403a28:	ddf2      	ble.n	403a10 <_malloc_r+0xf8>
  403a2a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403a2e:	f8d3 8008 	ldr.w	r8, [r3, #8]
  403a32:	9300      	str	r3, [sp, #0]
  403a34:	199c      	adds	r4, r3, r6
  403a36:	4628      	mov	r0, r5
  403a38:	f046 0601 	orr.w	r6, r6, #1
  403a3c:	f042 0501 	orr.w	r5, r2, #1
  403a40:	605e      	str	r6, [r3, #4]
  403a42:	f8c8 c00c 	str.w	ip, [r8, #12]
  403a46:	f8cc 8008 	str.w	r8, [ip, #8]
  403a4a:	617c      	str	r4, [r7, #20]
  403a4c:	613c      	str	r4, [r7, #16]
  403a4e:	f8c4 e00c 	str.w	lr, [r4, #12]
  403a52:	f8c4 e008 	str.w	lr, [r4, #8]
  403a56:	6065      	str	r5, [r4, #4]
  403a58:	505a      	str	r2, [r3, r1]
  403a5a:	f000 fba5 	bl	4041a8 <__malloc_unlock>
  403a5e:	9b00      	ldr	r3, [sp, #0]
  403a60:	f103 0408 	add.w	r4, r3, #8
  403a64:	e01e      	b.n	403aa4 <_malloc_r+0x18c>
  403a66:	2910      	cmp	r1, #16
  403a68:	d820      	bhi.n	403aac <_malloc_r+0x194>
  403a6a:	f000 fb97 	bl	40419c <__malloc_lock>
  403a6e:	2610      	movs	r6, #16
  403a70:	2318      	movs	r3, #24
  403a72:	2002      	movs	r0, #2
  403a74:	4f79      	ldr	r7, [pc, #484]	; (403c5c <_malloc_r+0x344>)
  403a76:	443b      	add	r3, r7
  403a78:	f1a3 0208 	sub.w	r2, r3, #8
  403a7c:	685c      	ldr	r4, [r3, #4]
  403a7e:	4294      	cmp	r4, r2
  403a80:	f000 813d 	beq.w	403cfe <_malloc_r+0x3e6>
  403a84:	6863      	ldr	r3, [r4, #4]
  403a86:	68e1      	ldr	r1, [r4, #12]
  403a88:	68a6      	ldr	r6, [r4, #8]
  403a8a:	f023 0303 	bic.w	r3, r3, #3
  403a8e:	4423      	add	r3, r4
  403a90:	4628      	mov	r0, r5
  403a92:	685a      	ldr	r2, [r3, #4]
  403a94:	60f1      	str	r1, [r6, #12]
  403a96:	f042 0201 	orr.w	r2, r2, #1
  403a9a:	608e      	str	r6, [r1, #8]
  403a9c:	605a      	str	r2, [r3, #4]
  403a9e:	f000 fb83 	bl	4041a8 <__malloc_unlock>
  403aa2:	3408      	adds	r4, #8
  403aa4:	4620      	mov	r0, r4
  403aa6:	b003      	add	sp, #12
  403aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403aac:	2400      	movs	r4, #0
  403aae:	230c      	movs	r3, #12
  403ab0:	4620      	mov	r0, r4
  403ab2:	602b      	str	r3, [r5, #0]
  403ab4:	b003      	add	sp, #12
  403ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403aba:	2040      	movs	r0, #64	; 0x40
  403abc:	f44f 7300 	mov.w	r3, #512	; 0x200
  403ac0:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  403ac4:	e74a      	b.n	40395c <_malloc_r+0x44>
  403ac6:	4423      	add	r3, r4
  403ac8:	68e1      	ldr	r1, [r4, #12]
  403aca:	685a      	ldr	r2, [r3, #4]
  403acc:	68a6      	ldr	r6, [r4, #8]
  403ace:	f042 0201 	orr.w	r2, r2, #1
  403ad2:	60f1      	str	r1, [r6, #12]
  403ad4:	4628      	mov	r0, r5
  403ad6:	608e      	str	r6, [r1, #8]
  403ad8:	605a      	str	r2, [r3, #4]
  403ada:	f000 fb65 	bl	4041a8 <__malloc_unlock>
  403ade:	3408      	adds	r4, #8
  403ae0:	4620      	mov	r0, r4
  403ae2:	b003      	add	sp, #12
  403ae4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ae8:	4423      	add	r3, r4
  403aea:	4628      	mov	r0, r5
  403aec:	685a      	ldr	r2, [r3, #4]
  403aee:	f042 0201 	orr.w	r2, r2, #1
  403af2:	605a      	str	r2, [r3, #4]
  403af4:	f000 fb58 	bl	4041a8 <__malloc_unlock>
  403af8:	3408      	adds	r4, #8
  403afa:	4620      	mov	r0, r4
  403afc:	b003      	add	sp, #12
  403afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b02:	68bc      	ldr	r4, [r7, #8]
  403b04:	6863      	ldr	r3, [r4, #4]
  403b06:	f023 0803 	bic.w	r8, r3, #3
  403b0a:	45b0      	cmp	r8, r6
  403b0c:	d304      	bcc.n	403b18 <_malloc_r+0x200>
  403b0e:	eba8 0306 	sub.w	r3, r8, r6
  403b12:	2b0f      	cmp	r3, #15
  403b14:	f300 8085 	bgt.w	403c22 <_malloc_r+0x30a>
  403b18:	f8df 9158 	ldr.w	r9, [pc, #344]	; 403c74 <_malloc_r+0x35c>
  403b1c:	4b50      	ldr	r3, [pc, #320]	; (403c60 <_malloc_r+0x348>)
  403b1e:	f8d9 2000 	ldr.w	r2, [r9]
  403b22:	681b      	ldr	r3, [r3, #0]
  403b24:	3201      	adds	r2, #1
  403b26:	4433      	add	r3, r6
  403b28:	eb04 0a08 	add.w	sl, r4, r8
  403b2c:	f000 8155 	beq.w	403dda <_malloc_r+0x4c2>
  403b30:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  403b34:	330f      	adds	r3, #15
  403b36:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  403b3a:	f02b 0b0f 	bic.w	fp, fp, #15
  403b3e:	4659      	mov	r1, fp
  403b40:	4628      	mov	r0, r5
  403b42:	f000 fd71 	bl	404628 <_sbrk_r>
  403b46:	1c41      	adds	r1, r0, #1
  403b48:	4602      	mov	r2, r0
  403b4a:	f000 80fc 	beq.w	403d46 <_malloc_r+0x42e>
  403b4e:	4582      	cmp	sl, r0
  403b50:	f200 80f7 	bhi.w	403d42 <_malloc_r+0x42a>
  403b54:	4b43      	ldr	r3, [pc, #268]	; (403c64 <_malloc_r+0x34c>)
  403b56:	6819      	ldr	r1, [r3, #0]
  403b58:	4459      	add	r1, fp
  403b5a:	6019      	str	r1, [r3, #0]
  403b5c:	f000 814d 	beq.w	403dfa <_malloc_r+0x4e2>
  403b60:	f8d9 0000 	ldr.w	r0, [r9]
  403b64:	3001      	adds	r0, #1
  403b66:	bf1b      	ittet	ne
  403b68:	eba2 0a0a 	subne.w	sl, r2, sl
  403b6c:	4451      	addne	r1, sl
  403b6e:	f8c9 2000 	streq.w	r2, [r9]
  403b72:	6019      	strne	r1, [r3, #0]
  403b74:	f012 0107 	ands.w	r1, r2, #7
  403b78:	f000 8115 	beq.w	403da6 <_malloc_r+0x48e>
  403b7c:	f1c1 0008 	rsb	r0, r1, #8
  403b80:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  403b84:	4402      	add	r2, r0
  403b86:	3108      	adds	r1, #8
  403b88:	eb02 090b 	add.w	r9, r2, fp
  403b8c:	f3c9 090b 	ubfx	r9, r9, #0, #12
  403b90:	eba1 0909 	sub.w	r9, r1, r9
  403b94:	4649      	mov	r1, r9
  403b96:	4628      	mov	r0, r5
  403b98:	9301      	str	r3, [sp, #4]
  403b9a:	9200      	str	r2, [sp, #0]
  403b9c:	f000 fd44 	bl	404628 <_sbrk_r>
  403ba0:	1c43      	adds	r3, r0, #1
  403ba2:	e89d 000c 	ldmia.w	sp, {r2, r3}
  403ba6:	f000 8143 	beq.w	403e30 <_malloc_r+0x518>
  403baa:	1a80      	subs	r0, r0, r2
  403bac:	4448      	add	r0, r9
  403bae:	f040 0001 	orr.w	r0, r0, #1
  403bb2:	6819      	ldr	r1, [r3, #0]
  403bb4:	60ba      	str	r2, [r7, #8]
  403bb6:	4449      	add	r1, r9
  403bb8:	42bc      	cmp	r4, r7
  403bba:	6050      	str	r0, [r2, #4]
  403bbc:	6019      	str	r1, [r3, #0]
  403bbe:	d017      	beq.n	403bf0 <_malloc_r+0x2d8>
  403bc0:	f1b8 0f0f 	cmp.w	r8, #15
  403bc4:	f240 80fb 	bls.w	403dbe <_malloc_r+0x4a6>
  403bc8:	6860      	ldr	r0, [r4, #4]
  403bca:	f1a8 020c 	sub.w	r2, r8, #12
  403bce:	f022 0207 	bic.w	r2, r2, #7
  403bd2:	eb04 0e02 	add.w	lr, r4, r2
  403bd6:	f000 0001 	and.w	r0, r0, #1
  403bda:	f04f 0c05 	mov.w	ip, #5
  403bde:	4310      	orrs	r0, r2
  403be0:	2a0f      	cmp	r2, #15
  403be2:	6060      	str	r0, [r4, #4]
  403be4:	f8ce c004 	str.w	ip, [lr, #4]
  403be8:	f8ce c008 	str.w	ip, [lr, #8]
  403bec:	f200 8117 	bhi.w	403e1e <_malloc_r+0x506>
  403bf0:	4b1d      	ldr	r3, [pc, #116]	; (403c68 <_malloc_r+0x350>)
  403bf2:	68bc      	ldr	r4, [r7, #8]
  403bf4:	681a      	ldr	r2, [r3, #0]
  403bf6:	4291      	cmp	r1, r2
  403bf8:	bf88      	it	hi
  403bfa:	6019      	strhi	r1, [r3, #0]
  403bfc:	4b1b      	ldr	r3, [pc, #108]	; (403c6c <_malloc_r+0x354>)
  403bfe:	681a      	ldr	r2, [r3, #0]
  403c00:	4291      	cmp	r1, r2
  403c02:	6862      	ldr	r2, [r4, #4]
  403c04:	bf88      	it	hi
  403c06:	6019      	strhi	r1, [r3, #0]
  403c08:	f022 0203 	bic.w	r2, r2, #3
  403c0c:	4296      	cmp	r6, r2
  403c0e:	eba2 0306 	sub.w	r3, r2, r6
  403c12:	d801      	bhi.n	403c18 <_malloc_r+0x300>
  403c14:	2b0f      	cmp	r3, #15
  403c16:	dc04      	bgt.n	403c22 <_malloc_r+0x30a>
  403c18:	4628      	mov	r0, r5
  403c1a:	f000 fac5 	bl	4041a8 <__malloc_unlock>
  403c1e:	2400      	movs	r4, #0
  403c20:	e740      	b.n	403aa4 <_malloc_r+0x18c>
  403c22:	19a2      	adds	r2, r4, r6
  403c24:	f043 0301 	orr.w	r3, r3, #1
  403c28:	f046 0601 	orr.w	r6, r6, #1
  403c2c:	6066      	str	r6, [r4, #4]
  403c2e:	4628      	mov	r0, r5
  403c30:	60ba      	str	r2, [r7, #8]
  403c32:	6053      	str	r3, [r2, #4]
  403c34:	f000 fab8 	bl	4041a8 <__malloc_unlock>
  403c38:	3408      	adds	r4, #8
  403c3a:	4620      	mov	r0, r4
  403c3c:	b003      	add	sp, #12
  403c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403c42:	2b14      	cmp	r3, #20
  403c44:	d971      	bls.n	403d2a <_malloc_r+0x412>
  403c46:	2b54      	cmp	r3, #84	; 0x54
  403c48:	f200 80a3 	bhi.w	403d92 <_malloc_r+0x47a>
  403c4c:	0b33      	lsrs	r3, r6, #12
  403c4e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  403c52:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  403c56:	00c3      	lsls	r3, r0, #3
  403c58:	e680      	b.n	40395c <_malloc_r+0x44>
  403c5a:	bf00      	nop
  403c5c:	204005b8 	.word	0x204005b8
  403c60:	20400abc 	.word	0x20400abc
  403c64:	20400a8c 	.word	0x20400a8c
  403c68:	20400ab4 	.word	0x20400ab4
  403c6c:	20400ab8 	.word	0x20400ab8
  403c70:	204005c0 	.word	0x204005c0
  403c74:	204009c0 	.word	0x204009c0
  403c78:	0a5a      	lsrs	r2, r3, #9
  403c7a:	2a04      	cmp	r2, #4
  403c7c:	d95b      	bls.n	403d36 <_malloc_r+0x41e>
  403c7e:	2a14      	cmp	r2, #20
  403c80:	f200 80ae 	bhi.w	403de0 <_malloc_r+0x4c8>
  403c84:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  403c88:	00c9      	lsls	r1, r1, #3
  403c8a:	325b      	adds	r2, #91	; 0x5b
  403c8c:	eb07 0c01 	add.w	ip, r7, r1
  403c90:	5879      	ldr	r1, [r7, r1]
  403c92:	f1ac 0c08 	sub.w	ip, ip, #8
  403c96:	458c      	cmp	ip, r1
  403c98:	f000 8088 	beq.w	403dac <_malloc_r+0x494>
  403c9c:	684a      	ldr	r2, [r1, #4]
  403c9e:	f022 0203 	bic.w	r2, r2, #3
  403ca2:	4293      	cmp	r3, r2
  403ca4:	d273      	bcs.n	403d8e <_malloc_r+0x476>
  403ca6:	6889      	ldr	r1, [r1, #8]
  403ca8:	458c      	cmp	ip, r1
  403caa:	d1f7      	bne.n	403c9c <_malloc_r+0x384>
  403cac:	f8dc 200c 	ldr.w	r2, [ip, #12]
  403cb0:	687b      	ldr	r3, [r7, #4]
  403cb2:	60e2      	str	r2, [r4, #12]
  403cb4:	f8c4 c008 	str.w	ip, [r4, #8]
  403cb8:	6094      	str	r4, [r2, #8]
  403cba:	f8cc 400c 	str.w	r4, [ip, #12]
  403cbe:	e68f      	b.n	4039e0 <_malloc_r+0xc8>
  403cc0:	19a1      	adds	r1, r4, r6
  403cc2:	f046 0c01 	orr.w	ip, r6, #1
  403cc6:	f042 0601 	orr.w	r6, r2, #1
  403cca:	f8c4 c004 	str.w	ip, [r4, #4]
  403cce:	4628      	mov	r0, r5
  403cd0:	6179      	str	r1, [r7, #20]
  403cd2:	6139      	str	r1, [r7, #16]
  403cd4:	f8c1 e00c 	str.w	lr, [r1, #12]
  403cd8:	f8c1 e008 	str.w	lr, [r1, #8]
  403cdc:	604e      	str	r6, [r1, #4]
  403cde:	50e2      	str	r2, [r4, r3]
  403ce0:	f000 fa62 	bl	4041a8 <__malloc_unlock>
  403ce4:	3408      	adds	r4, #8
  403ce6:	e6dd      	b.n	403aa4 <_malloc_r+0x18c>
  403ce8:	687b      	ldr	r3, [r7, #4]
  403cea:	e679      	b.n	4039e0 <_malloc_r+0xc8>
  403cec:	f108 0801 	add.w	r8, r8, #1
  403cf0:	f018 0f03 	tst.w	r8, #3
  403cf4:	f10c 0c08 	add.w	ip, ip, #8
  403cf8:	f47f ae85 	bne.w	403a06 <_malloc_r+0xee>
  403cfc:	e02d      	b.n	403d5a <_malloc_r+0x442>
  403cfe:	68dc      	ldr	r4, [r3, #12]
  403d00:	42a3      	cmp	r3, r4
  403d02:	bf08      	it	eq
  403d04:	3002      	addeq	r0, #2
  403d06:	f43f ae3e 	beq.w	403986 <_malloc_r+0x6e>
  403d0a:	e6bb      	b.n	403a84 <_malloc_r+0x16c>
  403d0c:	4419      	add	r1, r3
  403d0e:	461c      	mov	r4, r3
  403d10:	684a      	ldr	r2, [r1, #4]
  403d12:	68db      	ldr	r3, [r3, #12]
  403d14:	f854 6f08 	ldr.w	r6, [r4, #8]!
  403d18:	f042 0201 	orr.w	r2, r2, #1
  403d1c:	604a      	str	r2, [r1, #4]
  403d1e:	4628      	mov	r0, r5
  403d20:	60f3      	str	r3, [r6, #12]
  403d22:	609e      	str	r6, [r3, #8]
  403d24:	f000 fa40 	bl	4041a8 <__malloc_unlock>
  403d28:	e6bc      	b.n	403aa4 <_malloc_r+0x18c>
  403d2a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  403d2e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  403d32:	00c3      	lsls	r3, r0, #3
  403d34:	e612      	b.n	40395c <_malloc_r+0x44>
  403d36:	099a      	lsrs	r2, r3, #6
  403d38:	f102 0139 	add.w	r1, r2, #57	; 0x39
  403d3c:	00c9      	lsls	r1, r1, #3
  403d3e:	3238      	adds	r2, #56	; 0x38
  403d40:	e7a4      	b.n	403c8c <_malloc_r+0x374>
  403d42:	42bc      	cmp	r4, r7
  403d44:	d054      	beq.n	403df0 <_malloc_r+0x4d8>
  403d46:	68bc      	ldr	r4, [r7, #8]
  403d48:	6862      	ldr	r2, [r4, #4]
  403d4a:	f022 0203 	bic.w	r2, r2, #3
  403d4e:	e75d      	b.n	403c0c <_malloc_r+0x2f4>
  403d50:	f859 3908 	ldr.w	r3, [r9], #-8
  403d54:	4599      	cmp	r9, r3
  403d56:	f040 8086 	bne.w	403e66 <_malloc_r+0x54e>
  403d5a:	f010 0f03 	tst.w	r0, #3
  403d5e:	f100 30ff 	add.w	r0, r0, #4294967295
  403d62:	d1f5      	bne.n	403d50 <_malloc_r+0x438>
  403d64:	687b      	ldr	r3, [r7, #4]
  403d66:	ea23 0304 	bic.w	r3, r3, r4
  403d6a:	607b      	str	r3, [r7, #4]
  403d6c:	0064      	lsls	r4, r4, #1
  403d6e:	429c      	cmp	r4, r3
  403d70:	f63f aec7 	bhi.w	403b02 <_malloc_r+0x1ea>
  403d74:	2c00      	cmp	r4, #0
  403d76:	f43f aec4 	beq.w	403b02 <_malloc_r+0x1ea>
  403d7a:	421c      	tst	r4, r3
  403d7c:	4640      	mov	r0, r8
  403d7e:	f47f ae3e 	bne.w	4039fe <_malloc_r+0xe6>
  403d82:	0064      	lsls	r4, r4, #1
  403d84:	421c      	tst	r4, r3
  403d86:	f100 0004 	add.w	r0, r0, #4
  403d8a:	d0fa      	beq.n	403d82 <_malloc_r+0x46a>
  403d8c:	e637      	b.n	4039fe <_malloc_r+0xe6>
  403d8e:	468c      	mov	ip, r1
  403d90:	e78c      	b.n	403cac <_malloc_r+0x394>
  403d92:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  403d96:	d815      	bhi.n	403dc4 <_malloc_r+0x4ac>
  403d98:	0bf3      	lsrs	r3, r6, #15
  403d9a:	f103 0078 	add.w	r0, r3, #120	; 0x78
  403d9e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  403da2:	00c3      	lsls	r3, r0, #3
  403da4:	e5da      	b.n	40395c <_malloc_r+0x44>
  403da6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  403daa:	e6ed      	b.n	403b88 <_malloc_r+0x270>
  403dac:	687b      	ldr	r3, [r7, #4]
  403dae:	1092      	asrs	r2, r2, #2
  403db0:	2101      	movs	r1, #1
  403db2:	fa01 f202 	lsl.w	r2, r1, r2
  403db6:	4313      	orrs	r3, r2
  403db8:	607b      	str	r3, [r7, #4]
  403dba:	4662      	mov	r2, ip
  403dbc:	e779      	b.n	403cb2 <_malloc_r+0x39a>
  403dbe:	2301      	movs	r3, #1
  403dc0:	6053      	str	r3, [r2, #4]
  403dc2:	e729      	b.n	403c18 <_malloc_r+0x300>
  403dc4:	f240 5254 	movw	r2, #1364	; 0x554
  403dc8:	4293      	cmp	r3, r2
  403dca:	d822      	bhi.n	403e12 <_malloc_r+0x4fa>
  403dcc:	0cb3      	lsrs	r3, r6, #18
  403dce:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  403dd2:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  403dd6:	00c3      	lsls	r3, r0, #3
  403dd8:	e5c0      	b.n	40395c <_malloc_r+0x44>
  403dda:	f103 0b10 	add.w	fp, r3, #16
  403dde:	e6ae      	b.n	403b3e <_malloc_r+0x226>
  403de0:	2a54      	cmp	r2, #84	; 0x54
  403de2:	d829      	bhi.n	403e38 <_malloc_r+0x520>
  403de4:	0b1a      	lsrs	r2, r3, #12
  403de6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  403dea:	00c9      	lsls	r1, r1, #3
  403dec:	326e      	adds	r2, #110	; 0x6e
  403dee:	e74d      	b.n	403c8c <_malloc_r+0x374>
  403df0:	4b20      	ldr	r3, [pc, #128]	; (403e74 <_malloc_r+0x55c>)
  403df2:	6819      	ldr	r1, [r3, #0]
  403df4:	4459      	add	r1, fp
  403df6:	6019      	str	r1, [r3, #0]
  403df8:	e6b2      	b.n	403b60 <_malloc_r+0x248>
  403dfa:	f3ca 000b 	ubfx	r0, sl, #0, #12
  403dfe:	2800      	cmp	r0, #0
  403e00:	f47f aeae 	bne.w	403b60 <_malloc_r+0x248>
  403e04:	eb08 030b 	add.w	r3, r8, fp
  403e08:	68ba      	ldr	r2, [r7, #8]
  403e0a:	f043 0301 	orr.w	r3, r3, #1
  403e0e:	6053      	str	r3, [r2, #4]
  403e10:	e6ee      	b.n	403bf0 <_malloc_r+0x2d8>
  403e12:	207f      	movs	r0, #127	; 0x7f
  403e14:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  403e18:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  403e1c:	e59e      	b.n	40395c <_malloc_r+0x44>
  403e1e:	f104 0108 	add.w	r1, r4, #8
  403e22:	4628      	mov	r0, r5
  403e24:	9300      	str	r3, [sp, #0]
  403e26:	f7ff fa13 	bl	403250 <_free_r>
  403e2a:	9b00      	ldr	r3, [sp, #0]
  403e2c:	6819      	ldr	r1, [r3, #0]
  403e2e:	e6df      	b.n	403bf0 <_malloc_r+0x2d8>
  403e30:	2001      	movs	r0, #1
  403e32:	f04f 0900 	mov.w	r9, #0
  403e36:	e6bc      	b.n	403bb2 <_malloc_r+0x29a>
  403e38:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  403e3c:	d805      	bhi.n	403e4a <_malloc_r+0x532>
  403e3e:	0bda      	lsrs	r2, r3, #15
  403e40:	f102 0178 	add.w	r1, r2, #120	; 0x78
  403e44:	00c9      	lsls	r1, r1, #3
  403e46:	3277      	adds	r2, #119	; 0x77
  403e48:	e720      	b.n	403c8c <_malloc_r+0x374>
  403e4a:	f240 5154 	movw	r1, #1364	; 0x554
  403e4e:	428a      	cmp	r2, r1
  403e50:	d805      	bhi.n	403e5e <_malloc_r+0x546>
  403e52:	0c9a      	lsrs	r2, r3, #18
  403e54:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  403e58:	00c9      	lsls	r1, r1, #3
  403e5a:	327c      	adds	r2, #124	; 0x7c
  403e5c:	e716      	b.n	403c8c <_malloc_r+0x374>
  403e5e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  403e62:	227e      	movs	r2, #126	; 0x7e
  403e64:	e712      	b.n	403c8c <_malloc_r+0x374>
  403e66:	687b      	ldr	r3, [r7, #4]
  403e68:	e780      	b.n	403d6c <_malloc_r+0x454>
  403e6a:	08f0      	lsrs	r0, r6, #3
  403e6c:	f106 0308 	add.w	r3, r6, #8
  403e70:	e600      	b.n	403a74 <_malloc_r+0x15c>
  403e72:	bf00      	nop
  403e74:	20400a8c 	.word	0x20400a8c

00403e78 <_mbrtowc_r>:
  403e78:	b5f0      	push	{r4, r5, r6, r7, lr}
  403e7a:	b083      	sub	sp, #12
  403e7c:	4607      	mov	r7, r0
  403e7e:	9d08      	ldr	r5, [sp, #32]
  403e80:	b192      	cbz	r2, 403ea8 <_mbrtowc_r+0x30>
  403e82:	4c11      	ldr	r4, [pc, #68]	; (403ec8 <_mbrtowc_r+0x50>)
  403e84:	4e11      	ldr	r6, [pc, #68]	; (403ecc <_mbrtowc_r+0x54>)
  403e86:	6824      	ldr	r4, [r4, #0]
  403e88:	6b64      	ldr	r4, [r4, #52]	; 0x34
  403e8a:	9500      	str	r5, [sp, #0]
  403e8c:	2c00      	cmp	r4, #0
  403e8e:	bf08      	it	eq
  403e90:	4634      	moveq	r4, r6
  403e92:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
  403e96:	47a0      	blx	r4
  403e98:	1c43      	adds	r3, r0, #1
  403e9a:	d103      	bne.n	403ea4 <_mbrtowc_r+0x2c>
  403e9c:	2200      	movs	r2, #0
  403e9e:	238a      	movs	r3, #138	; 0x8a
  403ea0:	602a      	str	r2, [r5, #0]
  403ea2:	603b      	str	r3, [r7, #0]
  403ea4:	b003      	add	sp, #12
  403ea6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403ea8:	4b07      	ldr	r3, [pc, #28]	; (403ec8 <_mbrtowc_r+0x50>)
  403eaa:	4908      	ldr	r1, [pc, #32]	; (403ecc <_mbrtowc_r+0x54>)
  403eac:	681b      	ldr	r3, [r3, #0]
  403eae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  403eb0:	9500      	str	r5, [sp, #0]
  403eb2:	2b00      	cmp	r3, #0
  403eb4:	bf08      	it	eq
  403eb6:	460b      	moveq	r3, r1
  403eb8:	4614      	mov	r4, r2
  403eba:	4621      	mov	r1, r4
  403ebc:	4a04      	ldr	r2, [pc, #16]	; (403ed0 <_mbrtowc_r+0x58>)
  403ebe:	f8d3 40e4 	ldr.w	r4, [r3, #228]	; 0xe4
  403ec2:	2301      	movs	r3, #1
  403ec4:	47a0      	blx	r4
  403ec6:	e7e7      	b.n	403e98 <_mbrtowc_r+0x20>
  403ec8:	20400018 	.word	0x20400018
  403ecc:	2040044c 	.word	0x2040044c
  403ed0:	00405654 	.word	0x00405654

00403ed4 <__ascii_mbtowc>:
  403ed4:	b082      	sub	sp, #8
  403ed6:	b149      	cbz	r1, 403eec <__ascii_mbtowc+0x18>
  403ed8:	b15a      	cbz	r2, 403ef2 <__ascii_mbtowc+0x1e>
  403eda:	b16b      	cbz	r3, 403ef8 <__ascii_mbtowc+0x24>
  403edc:	7813      	ldrb	r3, [r2, #0]
  403ede:	600b      	str	r3, [r1, #0]
  403ee0:	7812      	ldrb	r2, [r2, #0]
  403ee2:	1c10      	adds	r0, r2, #0
  403ee4:	bf18      	it	ne
  403ee6:	2001      	movne	r0, #1
  403ee8:	b002      	add	sp, #8
  403eea:	4770      	bx	lr
  403eec:	a901      	add	r1, sp, #4
  403eee:	2a00      	cmp	r2, #0
  403ef0:	d1f3      	bne.n	403eda <__ascii_mbtowc+0x6>
  403ef2:	4610      	mov	r0, r2
  403ef4:	b002      	add	sp, #8
  403ef6:	4770      	bx	lr
  403ef8:	f06f 0001 	mvn.w	r0, #1
  403efc:	e7f4      	b.n	403ee8 <__ascii_mbtowc+0x14>
  403efe:	bf00      	nop

00403f00 <memchr>:
  403f00:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403f04:	2a10      	cmp	r2, #16
  403f06:	db2b      	blt.n	403f60 <memchr+0x60>
  403f08:	f010 0f07 	tst.w	r0, #7
  403f0c:	d008      	beq.n	403f20 <memchr+0x20>
  403f0e:	f810 3b01 	ldrb.w	r3, [r0], #1
  403f12:	3a01      	subs	r2, #1
  403f14:	428b      	cmp	r3, r1
  403f16:	d02d      	beq.n	403f74 <memchr+0x74>
  403f18:	f010 0f07 	tst.w	r0, #7
  403f1c:	b342      	cbz	r2, 403f70 <memchr+0x70>
  403f1e:	d1f6      	bne.n	403f0e <memchr+0xe>
  403f20:	b4f0      	push	{r4, r5, r6, r7}
  403f22:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  403f26:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  403f2a:	f022 0407 	bic.w	r4, r2, #7
  403f2e:	f07f 0700 	mvns.w	r7, #0
  403f32:	2300      	movs	r3, #0
  403f34:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  403f38:	3c08      	subs	r4, #8
  403f3a:	ea85 0501 	eor.w	r5, r5, r1
  403f3e:	ea86 0601 	eor.w	r6, r6, r1
  403f42:	fa85 f547 	uadd8	r5, r5, r7
  403f46:	faa3 f587 	sel	r5, r3, r7
  403f4a:	fa86 f647 	uadd8	r6, r6, r7
  403f4e:	faa5 f687 	sel	r6, r5, r7
  403f52:	b98e      	cbnz	r6, 403f78 <memchr+0x78>
  403f54:	d1ee      	bne.n	403f34 <memchr+0x34>
  403f56:	bcf0      	pop	{r4, r5, r6, r7}
  403f58:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  403f5c:	f002 0207 	and.w	r2, r2, #7
  403f60:	b132      	cbz	r2, 403f70 <memchr+0x70>
  403f62:	f810 3b01 	ldrb.w	r3, [r0], #1
  403f66:	3a01      	subs	r2, #1
  403f68:	ea83 0301 	eor.w	r3, r3, r1
  403f6c:	b113      	cbz	r3, 403f74 <memchr+0x74>
  403f6e:	d1f8      	bne.n	403f62 <memchr+0x62>
  403f70:	2000      	movs	r0, #0
  403f72:	4770      	bx	lr
  403f74:	3801      	subs	r0, #1
  403f76:	4770      	bx	lr
  403f78:	2d00      	cmp	r5, #0
  403f7a:	bf06      	itte	eq
  403f7c:	4635      	moveq	r5, r6
  403f7e:	3803      	subeq	r0, #3
  403f80:	3807      	subne	r0, #7
  403f82:	f015 0f01 	tst.w	r5, #1
  403f86:	d107      	bne.n	403f98 <memchr+0x98>
  403f88:	3001      	adds	r0, #1
  403f8a:	f415 7f80 	tst.w	r5, #256	; 0x100
  403f8e:	bf02      	ittt	eq
  403f90:	3001      	addeq	r0, #1
  403f92:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  403f96:	3001      	addeq	r0, #1
  403f98:	bcf0      	pop	{r4, r5, r6, r7}
  403f9a:	3801      	subs	r0, #1
  403f9c:	4770      	bx	lr
  403f9e:	bf00      	nop

00403fa0 <memcpy>:
  403fa0:	4684      	mov	ip, r0
  403fa2:	ea41 0300 	orr.w	r3, r1, r0
  403fa6:	f013 0303 	ands.w	r3, r3, #3
  403faa:	d16d      	bne.n	404088 <memcpy+0xe8>
  403fac:	3a40      	subs	r2, #64	; 0x40
  403fae:	d341      	bcc.n	404034 <memcpy+0x94>
  403fb0:	f851 3b04 	ldr.w	r3, [r1], #4
  403fb4:	f840 3b04 	str.w	r3, [r0], #4
  403fb8:	f851 3b04 	ldr.w	r3, [r1], #4
  403fbc:	f840 3b04 	str.w	r3, [r0], #4
  403fc0:	f851 3b04 	ldr.w	r3, [r1], #4
  403fc4:	f840 3b04 	str.w	r3, [r0], #4
  403fc8:	f851 3b04 	ldr.w	r3, [r1], #4
  403fcc:	f840 3b04 	str.w	r3, [r0], #4
  403fd0:	f851 3b04 	ldr.w	r3, [r1], #4
  403fd4:	f840 3b04 	str.w	r3, [r0], #4
  403fd8:	f851 3b04 	ldr.w	r3, [r1], #4
  403fdc:	f840 3b04 	str.w	r3, [r0], #4
  403fe0:	f851 3b04 	ldr.w	r3, [r1], #4
  403fe4:	f840 3b04 	str.w	r3, [r0], #4
  403fe8:	f851 3b04 	ldr.w	r3, [r1], #4
  403fec:	f840 3b04 	str.w	r3, [r0], #4
  403ff0:	f851 3b04 	ldr.w	r3, [r1], #4
  403ff4:	f840 3b04 	str.w	r3, [r0], #4
  403ff8:	f851 3b04 	ldr.w	r3, [r1], #4
  403ffc:	f840 3b04 	str.w	r3, [r0], #4
  404000:	f851 3b04 	ldr.w	r3, [r1], #4
  404004:	f840 3b04 	str.w	r3, [r0], #4
  404008:	f851 3b04 	ldr.w	r3, [r1], #4
  40400c:	f840 3b04 	str.w	r3, [r0], #4
  404010:	f851 3b04 	ldr.w	r3, [r1], #4
  404014:	f840 3b04 	str.w	r3, [r0], #4
  404018:	f851 3b04 	ldr.w	r3, [r1], #4
  40401c:	f840 3b04 	str.w	r3, [r0], #4
  404020:	f851 3b04 	ldr.w	r3, [r1], #4
  404024:	f840 3b04 	str.w	r3, [r0], #4
  404028:	f851 3b04 	ldr.w	r3, [r1], #4
  40402c:	f840 3b04 	str.w	r3, [r0], #4
  404030:	3a40      	subs	r2, #64	; 0x40
  404032:	d2bd      	bcs.n	403fb0 <memcpy+0x10>
  404034:	3230      	adds	r2, #48	; 0x30
  404036:	d311      	bcc.n	40405c <memcpy+0xbc>
  404038:	f851 3b04 	ldr.w	r3, [r1], #4
  40403c:	f840 3b04 	str.w	r3, [r0], #4
  404040:	f851 3b04 	ldr.w	r3, [r1], #4
  404044:	f840 3b04 	str.w	r3, [r0], #4
  404048:	f851 3b04 	ldr.w	r3, [r1], #4
  40404c:	f840 3b04 	str.w	r3, [r0], #4
  404050:	f851 3b04 	ldr.w	r3, [r1], #4
  404054:	f840 3b04 	str.w	r3, [r0], #4
  404058:	3a10      	subs	r2, #16
  40405a:	d2ed      	bcs.n	404038 <memcpy+0x98>
  40405c:	320c      	adds	r2, #12
  40405e:	d305      	bcc.n	40406c <memcpy+0xcc>
  404060:	f851 3b04 	ldr.w	r3, [r1], #4
  404064:	f840 3b04 	str.w	r3, [r0], #4
  404068:	3a04      	subs	r2, #4
  40406a:	d2f9      	bcs.n	404060 <memcpy+0xc0>
  40406c:	3204      	adds	r2, #4
  40406e:	d008      	beq.n	404082 <memcpy+0xe2>
  404070:	07d2      	lsls	r2, r2, #31
  404072:	bf1c      	itt	ne
  404074:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404078:	f800 3b01 	strbne.w	r3, [r0], #1
  40407c:	d301      	bcc.n	404082 <memcpy+0xe2>
  40407e:	880b      	ldrh	r3, [r1, #0]
  404080:	8003      	strh	r3, [r0, #0]
  404082:	4660      	mov	r0, ip
  404084:	4770      	bx	lr
  404086:	bf00      	nop
  404088:	2a08      	cmp	r2, #8
  40408a:	d313      	bcc.n	4040b4 <memcpy+0x114>
  40408c:	078b      	lsls	r3, r1, #30
  40408e:	d08d      	beq.n	403fac <memcpy+0xc>
  404090:	f010 0303 	ands.w	r3, r0, #3
  404094:	d08a      	beq.n	403fac <memcpy+0xc>
  404096:	f1c3 0304 	rsb	r3, r3, #4
  40409a:	1ad2      	subs	r2, r2, r3
  40409c:	07db      	lsls	r3, r3, #31
  40409e:	bf1c      	itt	ne
  4040a0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4040a4:	f800 3b01 	strbne.w	r3, [r0], #1
  4040a8:	d380      	bcc.n	403fac <memcpy+0xc>
  4040aa:	f831 3b02 	ldrh.w	r3, [r1], #2
  4040ae:	f820 3b02 	strh.w	r3, [r0], #2
  4040b2:	e77b      	b.n	403fac <memcpy+0xc>
  4040b4:	3a04      	subs	r2, #4
  4040b6:	d3d9      	bcc.n	40406c <memcpy+0xcc>
  4040b8:	3a01      	subs	r2, #1
  4040ba:	f811 3b01 	ldrb.w	r3, [r1], #1
  4040be:	f800 3b01 	strb.w	r3, [r0], #1
  4040c2:	d2f9      	bcs.n	4040b8 <memcpy+0x118>
  4040c4:	780b      	ldrb	r3, [r1, #0]
  4040c6:	7003      	strb	r3, [r0, #0]
  4040c8:	784b      	ldrb	r3, [r1, #1]
  4040ca:	7043      	strb	r3, [r0, #1]
  4040cc:	788b      	ldrb	r3, [r1, #2]
  4040ce:	7083      	strb	r3, [r0, #2]
  4040d0:	4660      	mov	r0, ip
  4040d2:	4770      	bx	lr

004040d4 <memmove>:
  4040d4:	4288      	cmp	r0, r1
  4040d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4040d8:	d90d      	bls.n	4040f6 <memmove+0x22>
  4040da:	188b      	adds	r3, r1, r2
  4040dc:	4298      	cmp	r0, r3
  4040de:	d20a      	bcs.n	4040f6 <memmove+0x22>
  4040e0:	1884      	adds	r4, r0, r2
  4040e2:	2a00      	cmp	r2, #0
  4040e4:	d051      	beq.n	40418a <memmove+0xb6>
  4040e6:	4622      	mov	r2, r4
  4040e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4040ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4040f0:	4299      	cmp	r1, r3
  4040f2:	d1f9      	bne.n	4040e8 <memmove+0x14>
  4040f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4040f6:	2a0f      	cmp	r2, #15
  4040f8:	d948      	bls.n	40418c <memmove+0xb8>
  4040fa:	ea41 0300 	orr.w	r3, r1, r0
  4040fe:	079b      	lsls	r3, r3, #30
  404100:	d146      	bne.n	404190 <memmove+0xbc>
  404102:	f100 0410 	add.w	r4, r0, #16
  404106:	f101 0310 	add.w	r3, r1, #16
  40410a:	4615      	mov	r5, r2
  40410c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  404110:	f844 6c10 	str.w	r6, [r4, #-16]
  404114:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  404118:	f844 6c0c 	str.w	r6, [r4, #-12]
  40411c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  404120:	f844 6c08 	str.w	r6, [r4, #-8]
  404124:	3d10      	subs	r5, #16
  404126:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40412a:	f844 6c04 	str.w	r6, [r4, #-4]
  40412e:	2d0f      	cmp	r5, #15
  404130:	f103 0310 	add.w	r3, r3, #16
  404134:	f104 0410 	add.w	r4, r4, #16
  404138:	d8e8      	bhi.n	40410c <memmove+0x38>
  40413a:	f1a2 0310 	sub.w	r3, r2, #16
  40413e:	f023 030f 	bic.w	r3, r3, #15
  404142:	f002 0e0f 	and.w	lr, r2, #15
  404146:	3310      	adds	r3, #16
  404148:	f1be 0f03 	cmp.w	lr, #3
  40414c:	4419      	add	r1, r3
  40414e:	4403      	add	r3, r0
  404150:	d921      	bls.n	404196 <memmove+0xc2>
  404152:	1f1e      	subs	r6, r3, #4
  404154:	460d      	mov	r5, r1
  404156:	4674      	mov	r4, lr
  404158:	3c04      	subs	r4, #4
  40415a:	f855 7b04 	ldr.w	r7, [r5], #4
  40415e:	f846 7f04 	str.w	r7, [r6, #4]!
  404162:	2c03      	cmp	r4, #3
  404164:	d8f8      	bhi.n	404158 <memmove+0x84>
  404166:	f1ae 0404 	sub.w	r4, lr, #4
  40416a:	f024 0403 	bic.w	r4, r4, #3
  40416e:	3404      	adds	r4, #4
  404170:	4421      	add	r1, r4
  404172:	4423      	add	r3, r4
  404174:	f002 0203 	and.w	r2, r2, #3
  404178:	b162      	cbz	r2, 404194 <memmove+0xc0>
  40417a:	3b01      	subs	r3, #1
  40417c:	440a      	add	r2, r1
  40417e:	f811 4b01 	ldrb.w	r4, [r1], #1
  404182:	f803 4f01 	strb.w	r4, [r3, #1]!
  404186:	428a      	cmp	r2, r1
  404188:	d1f9      	bne.n	40417e <memmove+0xaa>
  40418a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40418c:	4603      	mov	r3, r0
  40418e:	e7f3      	b.n	404178 <memmove+0xa4>
  404190:	4603      	mov	r3, r0
  404192:	e7f2      	b.n	40417a <memmove+0xa6>
  404194:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404196:	4672      	mov	r2, lr
  404198:	e7ee      	b.n	404178 <memmove+0xa4>
  40419a:	bf00      	nop

0040419c <__malloc_lock>:
  40419c:	4801      	ldr	r0, [pc, #4]	; (4041a4 <__malloc_lock+0x8>)
  40419e:	f7ff bb37 	b.w	403810 <__retarget_lock_acquire_recursive>
  4041a2:	bf00      	nop
  4041a4:	20400ae8 	.word	0x20400ae8

004041a8 <__malloc_unlock>:
  4041a8:	4801      	ldr	r0, [pc, #4]	; (4041b0 <__malloc_unlock+0x8>)
  4041aa:	f7ff bb33 	b.w	403814 <__retarget_lock_release_recursive>
  4041ae:	bf00      	nop
  4041b0:	20400ae8 	.word	0x20400ae8

004041b4 <_realloc_r>:
  4041b4:	2900      	cmp	r1, #0
  4041b6:	f000 8095 	beq.w	4042e4 <_realloc_r+0x130>
  4041ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4041be:	460d      	mov	r5, r1
  4041c0:	4616      	mov	r6, r2
  4041c2:	b083      	sub	sp, #12
  4041c4:	4680      	mov	r8, r0
  4041c6:	f106 070b 	add.w	r7, r6, #11
  4041ca:	f7ff ffe7 	bl	40419c <__malloc_lock>
  4041ce:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4041d2:	2f16      	cmp	r7, #22
  4041d4:	f02e 0403 	bic.w	r4, lr, #3
  4041d8:	f1a5 0908 	sub.w	r9, r5, #8
  4041dc:	d83c      	bhi.n	404258 <_realloc_r+0xa4>
  4041de:	2210      	movs	r2, #16
  4041e0:	4617      	mov	r7, r2
  4041e2:	42be      	cmp	r6, r7
  4041e4:	d83d      	bhi.n	404262 <_realloc_r+0xae>
  4041e6:	4294      	cmp	r4, r2
  4041e8:	da43      	bge.n	404272 <_realloc_r+0xbe>
  4041ea:	4bc4      	ldr	r3, [pc, #784]	; (4044fc <_realloc_r+0x348>)
  4041ec:	6899      	ldr	r1, [r3, #8]
  4041ee:	eb09 0004 	add.w	r0, r9, r4
  4041f2:	4288      	cmp	r0, r1
  4041f4:	f000 80b4 	beq.w	404360 <_realloc_r+0x1ac>
  4041f8:	6843      	ldr	r3, [r0, #4]
  4041fa:	f023 0101 	bic.w	r1, r3, #1
  4041fe:	4401      	add	r1, r0
  404200:	6849      	ldr	r1, [r1, #4]
  404202:	07c9      	lsls	r1, r1, #31
  404204:	d54c      	bpl.n	4042a0 <_realloc_r+0xec>
  404206:	f01e 0f01 	tst.w	lr, #1
  40420a:	f000 809b 	beq.w	404344 <_realloc_r+0x190>
  40420e:	4631      	mov	r1, r6
  404210:	4640      	mov	r0, r8
  404212:	f7ff fb81 	bl	403918 <_malloc_r>
  404216:	4606      	mov	r6, r0
  404218:	2800      	cmp	r0, #0
  40421a:	d03a      	beq.n	404292 <_realloc_r+0xde>
  40421c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  404220:	f023 0301 	bic.w	r3, r3, #1
  404224:	444b      	add	r3, r9
  404226:	f1a0 0208 	sub.w	r2, r0, #8
  40422a:	429a      	cmp	r2, r3
  40422c:	f000 8121 	beq.w	404472 <_realloc_r+0x2be>
  404230:	1f22      	subs	r2, r4, #4
  404232:	2a24      	cmp	r2, #36	; 0x24
  404234:	f200 8107 	bhi.w	404446 <_realloc_r+0x292>
  404238:	2a13      	cmp	r2, #19
  40423a:	f200 80db 	bhi.w	4043f4 <_realloc_r+0x240>
  40423e:	4603      	mov	r3, r0
  404240:	462a      	mov	r2, r5
  404242:	6811      	ldr	r1, [r2, #0]
  404244:	6019      	str	r1, [r3, #0]
  404246:	6851      	ldr	r1, [r2, #4]
  404248:	6059      	str	r1, [r3, #4]
  40424a:	6892      	ldr	r2, [r2, #8]
  40424c:	609a      	str	r2, [r3, #8]
  40424e:	4629      	mov	r1, r5
  404250:	4640      	mov	r0, r8
  404252:	f7fe fffd 	bl	403250 <_free_r>
  404256:	e01c      	b.n	404292 <_realloc_r+0xde>
  404258:	f027 0707 	bic.w	r7, r7, #7
  40425c:	2f00      	cmp	r7, #0
  40425e:	463a      	mov	r2, r7
  404260:	dabf      	bge.n	4041e2 <_realloc_r+0x2e>
  404262:	2600      	movs	r6, #0
  404264:	230c      	movs	r3, #12
  404266:	4630      	mov	r0, r6
  404268:	f8c8 3000 	str.w	r3, [r8]
  40426c:	b003      	add	sp, #12
  40426e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404272:	462e      	mov	r6, r5
  404274:	1be3      	subs	r3, r4, r7
  404276:	2b0f      	cmp	r3, #15
  404278:	d81e      	bhi.n	4042b8 <_realloc_r+0x104>
  40427a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40427e:	f003 0301 	and.w	r3, r3, #1
  404282:	4323      	orrs	r3, r4
  404284:	444c      	add	r4, r9
  404286:	f8c9 3004 	str.w	r3, [r9, #4]
  40428a:	6863      	ldr	r3, [r4, #4]
  40428c:	f043 0301 	orr.w	r3, r3, #1
  404290:	6063      	str	r3, [r4, #4]
  404292:	4640      	mov	r0, r8
  404294:	f7ff ff88 	bl	4041a8 <__malloc_unlock>
  404298:	4630      	mov	r0, r6
  40429a:	b003      	add	sp, #12
  40429c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4042a0:	f023 0303 	bic.w	r3, r3, #3
  4042a4:	18e1      	adds	r1, r4, r3
  4042a6:	4291      	cmp	r1, r2
  4042a8:	db1f      	blt.n	4042ea <_realloc_r+0x136>
  4042aa:	68c3      	ldr	r3, [r0, #12]
  4042ac:	6882      	ldr	r2, [r0, #8]
  4042ae:	462e      	mov	r6, r5
  4042b0:	60d3      	str	r3, [r2, #12]
  4042b2:	460c      	mov	r4, r1
  4042b4:	609a      	str	r2, [r3, #8]
  4042b6:	e7dd      	b.n	404274 <_realloc_r+0xc0>
  4042b8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4042bc:	eb09 0107 	add.w	r1, r9, r7
  4042c0:	f002 0201 	and.w	r2, r2, #1
  4042c4:	444c      	add	r4, r9
  4042c6:	f043 0301 	orr.w	r3, r3, #1
  4042ca:	4317      	orrs	r7, r2
  4042cc:	f8c9 7004 	str.w	r7, [r9, #4]
  4042d0:	604b      	str	r3, [r1, #4]
  4042d2:	6863      	ldr	r3, [r4, #4]
  4042d4:	f043 0301 	orr.w	r3, r3, #1
  4042d8:	3108      	adds	r1, #8
  4042da:	6063      	str	r3, [r4, #4]
  4042dc:	4640      	mov	r0, r8
  4042de:	f7fe ffb7 	bl	403250 <_free_r>
  4042e2:	e7d6      	b.n	404292 <_realloc_r+0xde>
  4042e4:	4611      	mov	r1, r2
  4042e6:	f7ff bb17 	b.w	403918 <_malloc_r>
  4042ea:	f01e 0f01 	tst.w	lr, #1
  4042ee:	d18e      	bne.n	40420e <_realloc_r+0x5a>
  4042f0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4042f4:	eba9 0a01 	sub.w	sl, r9, r1
  4042f8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4042fc:	f021 0103 	bic.w	r1, r1, #3
  404300:	440b      	add	r3, r1
  404302:	4423      	add	r3, r4
  404304:	4293      	cmp	r3, r2
  404306:	db25      	blt.n	404354 <_realloc_r+0x1a0>
  404308:	68c2      	ldr	r2, [r0, #12]
  40430a:	6881      	ldr	r1, [r0, #8]
  40430c:	4656      	mov	r6, sl
  40430e:	60ca      	str	r2, [r1, #12]
  404310:	6091      	str	r1, [r2, #8]
  404312:	f8da 100c 	ldr.w	r1, [sl, #12]
  404316:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40431a:	1f22      	subs	r2, r4, #4
  40431c:	2a24      	cmp	r2, #36	; 0x24
  40431e:	60c1      	str	r1, [r0, #12]
  404320:	6088      	str	r0, [r1, #8]
  404322:	f200 8094 	bhi.w	40444e <_realloc_r+0x29a>
  404326:	2a13      	cmp	r2, #19
  404328:	d96f      	bls.n	40440a <_realloc_r+0x256>
  40432a:	6829      	ldr	r1, [r5, #0]
  40432c:	f8ca 1008 	str.w	r1, [sl, #8]
  404330:	6869      	ldr	r1, [r5, #4]
  404332:	f8ca 100c 	str.w	r1, [sl, #12]
  404336:	2a1b      	cmp	r2, #27
  404338:	f200 80a2 	bhi.w	404480 <_realloc_r+0x2cc>
  40433c:	3508      	adds	r5, #8
  40433e:	f10a 0210 	add.w	r2, sl, #16
  404342:	e063      	b.n	40440c <_realloc_r+0x258>
  404344:	f855 3c08 	ldr.w	r3, [r5, #-8]
  404348:	eba9 0a03 	sub.w	sl, r9, r3
  40434c:	f8da 1004 	ldr.w	r1, [sl, #4]
  404350:	f021 0103 	bic.w	r1, r1, #3
  404354:	1863      	adds	r3, r4, r1
  404356:	4293      	cmp	r3, r2
  404358:	f6ff af59 	blt.w	40420e <_realloc_r+0x5a>
  40435c:	4656      	mov	r6, sl
  40435e:	e7d8      	b.n	404312 <_realloc_r+0x15e>
  404360:	6841      	ldr	r1, [r0, #4]
  404362:	f021 0b03 	bic.w	fp, r1, #3
  404366:	44a3      	add	fp, r4
  404368:	f107 0010 	add.w	r0, r7, #16
  40436c:	4583      	cmp	fp, r0
  40436e:	da56      	bge.n	40441e <_realloc_r+0x26a>
  404370:	f01e 0f01 	tst.w	lr, #1
  404374:	f47f af4b 	bne.w	40420e <_realloc_r+0x5a>
  404378:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40437c:	eba9 0a01 	sub.w	sl, r9, r1
  404380:	f8da 1004 	ldr.w	r1, [sl, #4]
  404384:	f021 0103 	bic.w	r1, r1, #3
  404388:	448b      	add	fp, r1
  40438a:	4558      	cmp	r0, fp
  40438c:	dce2      	bgt.n	404354 <_realloc_r+0x1a0>
  40438e:	4656      	mov	r6, sl
  404390:	f8da 100c 	ldr.w	r1, [sl, #12]
  404394:	f856 0f08 	ldr.w	r0, [r6, #8]!
  404398:	1f22      	subs	r2, r4, #4
  40439a:	2a24      	cmp	r2, #36	; 0x24
  40439c:	60c1      	str	r1, [r0, #12]
  40439e:	6088      	str	r0, [r1, #8]
  4043a0:	f200 808f 	bhi.w	4044c2 <_realloc_r+0x30e>
  4043a4:	2a13      	cmp	r2, #19
  4043a6:	f240 808a 	bls.w	4044be <_realloc_r+0x30a>
  4043aa:	6829      	ldr	r1, [r5, #0]
  4043ac:	f8ca 1008 	str.w	r1, [sl, #8]
  4043b0:	6869      	ldr	r1, [r5, #4]
  4043b2:	f8ca 100c 	str.w	r1, [sl, #12]
  4043b6:	2a1b      	cmp	r2, #27
  4043b8:	f200 808a 	bhi.w	4044d0 <_realloc_r+0x31c>
  4043bc:	3508      	adds	r5, #8
  4043be:	f10a 0210 	add.w	r2, sl, #16
  4043c2:	6829      	ldr	r1, [r5, #0]
  4043c4:	6011      	str	r1, [r2, #0]
  4043c6:	6869      	ldr	r1, [r5, #4]
  4043c8:	6051      	str	r1, [r2, #4]
  4043ca:	68a9      	ldr	r1, [r5, #8]
  4043cc:	6091      	str	r1, [r2, #8]
  4043ce:	eb0a 0107 	add.w	r1, sl, r7
  4043d2:	ebab 0207 	sub.w	r2, fp, r7
  4043d6:	f042 0201 	orr.w	r2, r2, #1
  4043da:	6099      	str	r1, [r3, #8]
  4043dc:	604a      	str	r2, [r1, #4]
  4043de:	f8da 3004 	ldr.w	r3, [sl, #4]
  4043e2:	f003 0301 	and.w	r3, r3, #1
  4043e6:	431f      	orrs	r7, r3
  4043e8:	4640      	mov	r0, r8
  4043ea:	f8ca 7004 	str.w	r7, [sl, #4]
  4043ee:	f7ff fedb 	bl	4041a8 <__malloc_unlock>
  4043f2:	e751      	b.n	404298 <_realloc_r+0xe4>
  4043f4:	682b      	ldr	r3, [r5, #0]
  4043f6:	6003      	str	r3, [r0, #0]
  4043f8:	686b      	ldr	r3, [r5, #4]
  4043fa:	6043      	str	r3, [r0, #4]
  4043fc:	2a1b      	cmp	r2, #27
  4043fe:	d82d      	bhi.n	40445c <_realloc_r+0x2a8>
  404400:	f100 0308 	add.w	r3, r0, #8
  404404:	f105 0208 	add.w	r2, r5, #8
  404408:	e71b      	b.n	404242 <_realloc_r+0x8e>
  40440a:	4632      	mov	r2, r6
  40440c:	6829      	ldr	r1, [r5, #0]
  40440e:	6011      	str	r1, [r2, #0]
  404410:	6869      	ldr	r1, [r5, #4]
  404412:	6051      	str	r1, [r2, #4]
  404414:	68a9      	ldr	r1, [r5, #8]
  404416:	6091      	str	r1, [r2, #8]
  404418:	461c      	mov	r4, r3
  40441a:	46d1      	mov	r9, sl
  40441c:	e72a      	b.n	404274 <_realloc_r+0xc0>
  40441e:	eb09 0107 	add.w	r1, r9, r7
  404422:	ebab 0b07 	sub.w	fp, fp, r7
  404426:	f04b 0201 	orr.w	r2, fp, #1
  40442a:	6099      	str	r1, [r3, #8]
  40442c:	604a      	str	r2, [r1, #4]
  40442e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  404432:	f003 0301 	and.w	r3, r3, #1
  404436:	431f      	orrs	r7, r3
  404438:	4640      	mov	r0, r8
  40443a:	f845 7c04 	str.w	r7, [r5, #-4]
  40443e:	f7ff feb3 	bl	4041a8 <__malloc_unlock>
  404442:	462e      	mov	r6, r5
  404444:	e728      	b.n	404298 <_realloc_r+0xe4>
  404446:	4629      	mov	r1, r5
  404448:	f7ff fe44 	bl	4040d4 <memmove>
  40444c:	e6ff      	b.n	40424e <_realloc_r+0x9a>
  40444e:	4629      	mov	r1, r5
  404450:	4630      	mov	r0, r6
  404452:	461c      	mov	r4, r3
  404454:	46d1      	mov	r9, sl
  404456:	f7ff fe3d 	bl	4040d4 <memmove>
  40445a:	e70b      	b.n	404274 <_realloc_r+0xc0>
  40445c:	68ab      	ldr	r3, [r5, #8]
  40445e:	6083      	str	r3, [r0, #8]
  404460:	68eb      	ldr	r3, [r5, #12]
  404462:	60c3      	str	r3, [r0, #12]
  404464:	2a24      	cmp	r2, #36	; 0x24
  404466:	d017      	beq.n	404498 <_realloc_r+0x2e4>
  404468:	f100 0310 	add.w	r3, r0, #16
  40446c:	f105 0210 	add.w	r2, r5, #16
  404470:	e6e7      	b.n	404242 <_realloc_r+0x8e>
  404472:	f850 3c04 	ldr.w	r3, [r0, #-4]
  404476:	f023 0303 	bic.w	r3, r3, #3
  40447a:	441c      	add	r4, r3
  40447c:	462e      	mov	r6, r5
  40447e:	e6f9      	b.n	404274 <_realloc_r+0xc0>
  404480:	68a9      	ldr	r1, [r5, #8]
  404482:	f8ca 1010 	str.w	r1, [sl, #16]
  404486:	68e9      	ldr	r1, [r5, #12]
  404488:	f8ca 1014 	str.w	r1, [sl, #20]
  40448c:	2a24      	cmp	r2, #36	; 0x24
  40448e:	d00c      	beq.n	4044aa <_realloc_r+0x2f6>
  404490:	3510      	adds	r5, #16
  404492:	f10a 0218 	add.w	r2, sl, #24
  404496:	e7b9      	b.n	40440c <_realloc_r+0x258>
  404498:	692b      	ldr	r3, [r5, #16]
  40449a:	6103      	str	r3, [r0, #16]
  40449c:	696b      	ldr	r3, [r5, #20]
  40449e:	6143      	str	r3, [r0, #20]
  4044a0:	f105 0218 	add.w	r2, r5, #24
  4044a4:	f100 0318 	add.w	r3, r0, #24
  4044a8:	e6cb      	b.n	404242 <_realloc_r+0x8e>
  4044aa:	692a      	ldr	r2, [r5, #16]
  4044ac:	f8ca 2018 	str.w	r2, [sl, #24]
  4044b0:	696a      	ldr	r2, [r5, #20]
  4044b2:	f8ca 201c 	str.w	r2, [sl, #28]
  4044b6:	3518      	adds	r5, #24
  4044b8:	f10a 0220 	add.w	r2, sl, #32
  4044bc:	e7a6      	b.n	40440c <_realloc_r+0x258>
  4044be:	4632      	mov	r2, r6
  4044c0:	e77f      	b.n	4043c2 <_realloc_r+0x20e>
  4044c2:	4629      	mov	r1, r5
  4044c4:	4630      	mov	r0, r6
  4044c6:	9301      	str	r3, [sp, #4]
  4044c8:	f7ff fe04 	bl	4040d4 <memmove>
  4044cc:	9b01      	ldr	r3, [sp, #4]
  4044ce:	e77e      	b.n	4043ce <_realloc_r+0x21a>
  4044d0:	68a9      	ldr	r1, [r5, #8]
  4044d2:	f8ca 1010 	str.w	r1, [sl, #16]
  4044d6:	68e9      	ldr	r1, [r5, #12]
  4044d8:	f8ca 1014 	str.w	r1, [sl, #20]
  4044dc:	2a24      	cmp	r2, #36	; 0x24
  4044de:	d003      	beq.n	4044e8 <_realloc_r+0x334>
  4044e0:	3510      	adds	r5, #16
  4044e2:	f10a 0218 	add.w	r2, sl, #24
  4044e6:	e76c      	b.n	4043c2 <_realloc_r+0x20e>
  4044e8:	692a      	ldr	r2, [r5, #16]
  4044ea:	f8ca 2018 	str.w	r2, [sl, #24]
  4044ee:	696a      	ldr	r2, [r5, #20]
  4044f0:	f8ca 201c 	str.w	r2, [sl, #28]
  4044f4:	3518      	adds	r5, #24
  4044f6:	f10a 0220 	add.w	r2, sl, #32
  4044fa:	e762      	b.n	4043c2 <_realloc_r+0x20e>
  4044fc:	204005b8 	.word	0x204005b8

00404500 <lflush>:
  404500:	8983      	ldrh	r3, [r0, #12]
  404502:	f003 0309 	and.w	r3, r3, #9
  404506:	2b09      	cmp	r3, #9
  404508:	d001      	beq.n	40450e <lflush+0xe>
  40450a:	2000      	movs	r0, #0
  40450c:	4770      	bx	lr
  40450e:	f7fe bc57 	b.w	402dc0 <fflush>
  404512:	bf00      	nop

00404514 <__srefill_r>:
  404514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404516:	460c      	mov	r4, r1
  404518:	4605      	mov	r5, r0
  40451a:	b110      	cbz	r0, 404522 <__srefill_r+0xe>
  40451c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40451e:	2b00      	cmp	r3, #0
  404520:	d045      	beq.n	4045ae <__srefill_r+0x9a>
  404522:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404526:	b29a      	uxth	r2, r3
  404528:	0497      	lsls	r7, r2, #18
  40452a:	d407      	bmi.n	40453c <__srefill_r+0x28>
  40452c:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40452e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404532:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404536:	6662      	str	r2, [r4, #100]	; 0x64
  404538:	81a3      	strh	r3, [r4, #12]
  40453a:	b29a      	uxth	r2, r3
  40453c:	2100      	movs	r1, #0
  40453e:	0696      	lsls	r6, r2, #26
  404540:	6061      	str	r1, [r4, #4]
  404542:	d431      	bmi.n	4045a8 <__srefill_r+0x94>
  404544:	0750      	lsls	r0, r2, #29
  404546:	d522      	bpl.n	40458e <__srefill_r+0x7a>
  404548:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40454a:	b161      	cbz	r1, 404566 <__srefill_r+0x52>
  40454c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  404550:	4299      	cmp	r1, r3
  404552:	d002      	beq.n	40455a <__srefill_r+0x46>
  404554:	4628      	mov	r0, r5
  404556:	f7fe fe7b 	bl	403250 <_free_r>
  40455a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  40455c:	6063      	str	r3, [r4, #4]
  40455e:	2000      	movs	r0, #0
  404560:	6320      	str	r0, [r4, #48]	; 0x30
  404562:	2b00      	cmp	r3, #0
  404564:	d13f      	bne.n	4045e6 <__srefill_r+0xd2>
  404566:	6923      	ldr	r3, [r4, #16]
  404568:	2b00      	cmp	r3, #0
  40456a:	d04c      	beq.n	404606 <__srefill_r+0xf2>
  40456c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
  404570:	b2be      	uxth	r6, r7
  404572:	07b3      	lsls	r3, r6, #30
  404574:	d11e      	bne.n	4045b4 <__srefill_r+0xa0>
  404576:	6922      	ldr	r2, [r4, #16]
  404578:	6022      	str	r2, [r4, #0]
  40457a:	4628      	mov	r0, r5
  40457c:	6963      	ldr	r3, [r4, #20]
  40457e:	6a25      	ldr	r5, [r4, #32]
  404580:	69e1      	ldr	r1, [r4, #28]
  404582:	47a8      	blx	r5
  404584:	2800      	cmp	r0, #0
  404586:	6060      	str	r0, [r4, #4]
  404588:	dd09      	ble.n	40459e <__srefill_r+0x8a>
  40458a:	2000      	movs	r0, #0
  40458c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40458e:	06d1      	lsls	r1, r2, #27
  404590:	d53e      	bpl.n	404610 <__srefill_r+0xfc>
  404592:	0712      	lsls	r2, r2, #28
  404594:	d42a      	bmi.n	4045ec <__srefill_r+0xd8>
  404596:	f043 0304 	orr.w	r3, r3, #4
  40459a:	81a3      	strh	r3, [r4, #12]
  40459c:	e7e3      	b.n	404566 <__srefill_r+0x52>
  40459e:	89a3      	ldrh	r3, [r4, #12]
  4045a0:	d119      	bne.n	4045d6 <__srefill_r+0xc2>
  4045a2:	f043 0320 	orr.w	r3, r3, #32
  4045a6:	81a3      	strh	r3, [r4, #12]
  4045a8:	f04f 30ff 	mov.w	r0, #4294967295
  4045ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4045ae:	f7fe fc47 	bl	402e40 <__sinit>
  4045b2:	e7b6      	b.n	404522 <__srefill_r+0xe>
  4045b4:	4b1a      	ldr	r3, [pc, #104]	; (404620 <__srefill_r+0x10c>)
  4045b6:	491b      	ldr	r1, [pc, #108]	; (404624 <__srefill_r+0x110>)
  4045b8:	6818      	ldr	r0, [r3, #0]
  4045ba:	2301      	movs	r3, #1
  4045bc:	81a3      	strh	r3, [r4, #12]
  4045be:	f006 0609 	and.w	r6, r6, #9
  4045c2:	f7ff f8a3 	bl	40370c <_fwalk>
  4045c6:	2e09      	cmp	r6, #9
  4045c8:	81a7      	strh	r7, [r4, #12]
  4045ca:	d1d4      	bne.n	404576 <__srefill_r+0x62>
  4045cc:	4621      	mov	r1, r4
  4045ce:	4628      	mov	r0, r5
  4045d0:	f7fe fb2c 	bl	402c2c <__sflush_r>
  4045d4:	e7cf      	b.n	404576 <__srefill_r+0x62>
  4045d6:	2200      	movs	r2, #0
  4045d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4045dc:	81a3      	strh	r3, [r4, #12]
  4045de:	6062      	str	r2, [r4, #4]
  4045e0:	f04f 30ff 	mov.w	r0, #4294967295
  4045e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4045e6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4045e8:	6023      	str	r3, [r4, #0]
  4045ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4045ec:	4621      	mov	r1, r4
  4045ee:	4628      	mov	r0, r5
  4045f0:	f7fe fbbc 	bl	402d6c <_fflush_r>
  4045f4:	2800      	cmp	r0, #0
  4045f6:	d1d7      	bne.n	4045a8 <__srefill_r+0x94>
  4045f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4045fc:	60a0      	str	r0, [r4, #8]
  4045fe:	61a0      	str	r0, [r4, #24]
  404600:	f023 0308 	bic.w	r3, r3, #8
  404604:	e7c7      	b.n	404596 <__srefill_r+0x82>
  404606:	4621      	mov	r1, r4
  404608:	4628      	mov	r0, r5
  40460a:	f7ff f933 	bl	403874 <__smakebuf_r>
  40460e:	e7ad      	b.n	40456c <__srefill_r+0x58>
  404610:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404614:	2209      	movs	r2, #9
  404616:	602a      	str	r2, [r5, #0]
  404618:	f04f 30ff 	mov.w	r0, #4294967295
  40461c:	81a3      	strh	r3, [r4, #12]
  40461e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404620:	0040567c 	.word	0x0040567c
  404624:	00404501 	.word	0x00404501

00404628 <_sbrk_r>:
  404628:	b538      	push	{r3, r4, r5, lr}
  40462a:	4c07      	ldr	r4, [pc, #28]	; (404648 <_sbrk_r+0x20>)
  40462c:	2300      	movs	r3, #0
  40462e:	4605      	mov	r5, r0
  404630:	4608      	mov	r0, r1
  404632:	6023      	str	r3, [r4, #0]
  404634:	f7fc fc9c 	bl	400f70 <_sbrk>
  404638:	1c43      	adds	r3, r0, #1
  40463a:	d000      	beq.n	40463e <_sbrk_r+0x16>
  40463c:	bd38      	pop	{r3, r4, r5, pc}
  40463e:	6823      	ldr	r3, [r4, #0]
  404640:	2b00      	cmp	r3, #0
  404642:	d0fb      	beq.n	40463c <_sbrk_r+0x14>
  404644:	602b      	str	r3, [r5, #0]
  404646:	bd38      	pop	{r3, r4, r5, pc}
  404648:	20400afc 	.word	0x20400afc

0040464c <__sccl>:
  40464c:	b470      	push	{r4, r5, r6}
  40464e:	780c      	ldrb	r4, [r1, #0]
  404650:	2c5e      	cmp	r4, #94	; 0x5e
  404652:	d02f      	beq.n	4046b4 <__sccl+0x68>
  404654:	2200      	movs	r2, #0
  404656:	1c4d      	adds	r5, r1, #1
  404658:	4616      	mov	r6, r2
  40465a:	1e43      	subs	r3, r0, #1
  40465c:	f100 01ff 	add.w	r1, r0, #255	; 0xff
  404660:	f803 2f01 	strb.w	r2, [r3, #1]!
  404664:	428b      	cmp	r3, r1
  404666:	d1fb      	bne.n	404660 <__sccl+0x14>
  404668:	b174      	cbz	r4, 404688 <__sccl+0x3c>
  40466a:	f086 0201 	eor.w	r2, r6, #1
  40466e:	5502      	strb	r2, [r0, r4]
  404670:	1c6e      	adds	r6, r5, #1
  404672:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  404676:	2b2d      	cmp	r3, #45	; 0x2d
  404678:	4631      	mov	r1, r6
  40467a:	d00d      	beq.n	404698 <__sccl+0x4c>
  40467c:	2b5d      	cmp	r3, #93	; 0x5d
  40467e:	d004      	beq.n	40468a <__sccl+0x3e>
  404680:	b133      	cbz	r3, 404690 <__sccl+0x44>
  404682:	461c      	mov	r4, r3
  404684:	4635      	mov	r5, r6
  404686:	e7f2      	b.n	40466e <__sccl+0x22>
  404688:	1e69      	subs	r1, r5, #1
  40468a:	4608      	mov	r0, r1
  40468c:	bc70      	pop	{r4, r5, r6}
  40468e:	4770      	bx	lr
  404690:	4629      	mov	r1, r5
  404692:	4608      	mov	r0, r1
  404694:	bc70      	pop	{r4, r5, r6}
  404696:	4770      	bx	lr
  404698:	7869      	ldrb	r1, [r5, #1]
  40469a:	295d      	cmp	r1, #93	; 0x5d
  40469c:	d0f1      	beq.n	404682 <__sccl+0x36>
  40469e:	428c      	cmp	r4, r1
  4046a0:	dcef      	bgt.n	404682 <__sccl+0x36>
  4046a2:	3502      	adds	r5, #2
  4046a4:	1903      	adds	r3, r0, r4
  4046a6:	3401      	adds	r4, #1
  4046a8:	42a1      	cmp	r1, r4
  4046aa:	f803 2f01 	strb.w	r2, [r3, #1]!
  4046ae:	dcfa      	bgt.n	4046a6 <__sccl+0x5a>
  4046b0:	3602      	adds	r6, #2
  4046b2:	e7de      	b.n	404672 <__sccl+0x26>
  4046b4:	2201      	movs	r2, #1
  4046b6:	784c      	ldrb	r4, [r1, #1]
  4046b8:	4616      	mov	r6, r2
  4046ba:	1c8d      	adds	r5, r1, #2
  4046bc:	e7cd      	b.n	40465a <__sccl+0xe>
  4046be:	bf00      	nop

004046c0 <__sread>:
  4046c0:	b510      	push	{r4, lr}
  4046c2:	460c      	mov	r4, r1
  4046c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4046c8:	f000 fdfa 	bl	4052c0 <_read_r>
  4046cc:	2800      	cmp	r0, #0
  4046ce:	db03      	blt.n	4046d8 <__sread+0x18>
  4046d0:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4046d2:	4403      	add	r3, r0
  4046d4:	6523      	str	r3, [r4, #80]	; 0x50
  4046d6:	bd10      	pop	{r4, pc}
  4046d8:	89a3      	ldrh	r3, [r4, #12]
  4046da:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4046de:	81a3      	strh	r3, [r4, #12]
  4046e0:	bd10      	pop	{r4, pc}
  4046e2:	bf00      	nop

004046e4 <__swrite>:
  4046e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4046e8:	4616      	mov	r6, r2
  4046ea:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4046ee:	461f      	mov	r7, r3
  4046f0:	05d3      	lsls	r3, r2, #23
  4046f2:	460c      	mov	r4, r1
  4046f4:	4605      	mov	r5, r0
  4046f6:	d507      	bpl.n	404708 <__swrite+0x24>
  4046f8:	2200      	movs	r2, #0
  4046fa:	2302      	movs	r3, #2
  4046fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404700:	f000 fdc8 	bl	405294 <_lseek_r>
  404704:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404708:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40470c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  404710:	81a2      	strh	r2, [r4, #12]
  404712:	463b      	mov	r3, r7
  404714:	4632      	mov	r2, r6
  404716:	4628      	mov	r0, r5
  404718:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40471c:	f000 bca8 	b.w	405070 <_write_r>

00404720 <__sseek>:
  404720:	b510      	push	{r4, lr}
  404722:	460c      	mov	r4, r1
  404724:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404728:	f000 fdb4 	bl	405294 <_lseek_r>
  40472c:	89a3      	ldrh	r3, [r4, #12]
  40472e:	1c42      	adds	r2, r0, #1
  404730:	bf0e      	itee	eq
  404732:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  404736:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40473a:	6520      	strne	r0, [r4, #80]	; 0x50
  40473c:	81a3      	strh	r3, [r4, #12]
  40473e:	bd10      	pop	{r4, pc}

00404740 <__sclose>:
  404740:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404744:	f000 bd0c 	b.w	405160 <_close_r>

00404748 <_strtol_l.isra.0>:
  404748:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40474c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  404750:	460f      	mov	r7, r1
  404752:	4680      	mov	r8, r0
  404754:	4616      	mov	r6, r2
  404756:	461d      	mov	r5, r3
  404758:	468a      	mov	sl, r1
  40475a:	e000      	b.n	40475e <_strtol_l.isra.0+0x16>
  40475c:	46a2      	mov	sl, r4
  40475e:	4654      	mov	r4, sl
  404760:	4648      	mov	r0, r9
  404762:	f814 bb01 	ldrb.w	fp, [r4], #1
  404766:	f7ff f83d 	bl	4037e4 <__locale_ctype_ptr_l>
  40476a:	4458      	add	r0, fp
  40476c:	7842      	ldrb	r2, [r0, #1]
  40476e:	f012 0208 	ands.w	r2, r2, #8
  404772:	d1f3      	bne.n	40475c <_strtol_l.isra.0+0x14>
  404774:	f1bb 0f2d 	cmp.w	fp, #45	; 0x2d
  404778:	d04f      	beq.n	40481a <_strtol_l.isra.0+0xd2>
  40477a:	f1bb 0f2b 	cmp.w	fp, #43	; 0x2b
  40477e:	bf04      	itt	eq
  404780:	f894 b000 	ldrbeq.w	fp, [r4]
  404784:	f10a 0402 	addeq.w	r4, sl, #2
  404788:	b11d      	cbz	r5, 404792 <_strtol_l.isra.0+0x4a>
  40478a:	2d10      	cmp	r5, #16
  40478c:	d056      	beq.n	40483c <_strtol_l.isra.0+0xf4>
  40478e:	46ac      	mov	ip, r5
  404790:	e004      	b.n	40479c <_strtol_l.isra.0+0x54>
  404792:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  404796:	d060      	beq.n	40485a <_strtol_l.isra.0+0x112>
  404798:	250a      	movs	r5, #10
  40479a:	46ac      	mov	ip, r5
  40479c:	2a00      	cmp	r2, #0
  40479e:	bf0c      	ite	eq
  4047a0:	f06f 4900 	mvneq.w	r9, #2147483648	; 0x80000000
  4047a4:	f04f 4900 	movne.w	r9, #2147483648	; 0x80000000
  4047a8:	2100      	movs	r1, #0
  4047aa:	fbb9 fefc 	udiv	lr, r9, ip
  4047ae:	4608      	mov	r0, r1
  4047b0:	fb0c 9a1e 	mls	sl, ip, lr, r9
  4047b4:	e005      	b.n	4047c2 <_strtol_l.isra.0+0x7a>
  4047b6:	d029      	beq.n	40480c <_strtol_l.isra.0+0xc4>
  4047b8:	fb0c 3000 	mla	r0, ip, r0, r3
  4047bc:	2101      	movs	r1, #1
  4047be:	f814 bb01 	ldrb.w	fp, [r4], #1
  4047c2:	f1ab 0330 	sub.w	r3, fp, #48	; 0x30
  4047c6:	2b09      	cmp	r3, #9
  4047c8:	d905      	bls.n	4047d6 <_strtol_l.isra.0+0x8e>
  4047ca:	f1ab 0341 	sub.w	r3, fp, #65	; 0x41
  4047ce:	2b19      	cmp	r3, #25
  4047d0:	d80b      	bhi.n	4047ea <_strtol_l.isra.0+0xa2>
  4047d2:	f1ab 0337 	sub.w	r3, fp, #55	; 0x37
  4047d6:	429d      	cmp	r5, r3
  4047d8:	dd0f      	ble.n	4047fa <_strtol_l.isra.0+0xb2>
  4047da:	f1b1 3fff 	cmp.w	r1, #4294967295
  4047de:	d0ee      	beq.n	4047be <_strtol_l.isra.0+0x76>
  4047e0:	4586      	cmp	lr, r0
  4047e2:	d2e8      	bcs.n	4047b6 <_strtol_l.isra.0+0x6e>
  4047e4:	f04f 31ff 	mov.w	r1, #4294967295
  4047e8:	e7e9      	b.n	4047be <_strtol_l.isra.0+0x76>
  4047ea:	f1ab 0361 	sub.w	r3, fp, #97	; 0x61
  4047ee:	2b19      	cmp	r3, #25
  4047f0:	d803      	bhi.n	4047fa <_strtol_l.isra.0+0xb2>
  4047f2:	f1ab 0357 	sub.w	r3, fp, #87	; 0x57
  4047f6:	429d      	cmp	r5, r3
  4047f8:	dcef      	bgt.n	4047da <_strtol_l.isra.0+0x92>
  4047fa:	1c4b      	adds	r3, r1, #1
  4047fc:	d013      	beq.n	404826 <_strtol_l.isra.0+0xde>
  4047fe:	b102      	cbz	r2, 404802 <_strtol_l.isra.0+0xba>
  404800:	4240      	negs	r0, r0
  404802:	b146      	cbz	r6, 404816 <_strtol_l.isra.0+0xce>
  404804:	b9c1      	cbnz	r1, 404838 <_strtol_l.isra.0+0xf0>
  404806:	6037      	str	r7, [r6, #0]
  404808:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40480c:	459a      	cmp	sl, r3
  40480e:	dad3      	bge.n	4047b8 <_strtol_l.isra.0+0x70>
  404810:	f04f 31ff 	mov.w	r1, #4294967295
  404814:	e7d3      	b.n	4047be <_strtol_l.isra.0+0x76>
  404816:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40481a:	f894 b000 	ldrb.w	fp, [r4]
  40481e:	2201      	movs	r2, #1
  404820:	f10a 0402 	add.w	r4, sl, #2
  404824:	e7b0      	b.n	404788 <_strtol_l.isra.0+0x40>
  404826:	2322      	movs	r3, #34	; 0x22
  404828:	f8c8 3000 	str.w	r3, [r8]
  40482c:	b1ee      	cbz	r6, 40486a <_strtol_l.isra.0+0x122>
  40482e:	1e67      	subs	r7, r4, #1
  404830:	4648      	mov	r0, r9
  404832:	6037      	str	r7, [r6, #0]
  404834:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404838:	4681      	mov	r9, r0
  40483a:	e7f8      	b.n	40482e <_strtol_l.isra.0+0xe6>
  40483c:	f1bb 0f30 	cmp.w	fp, #48	; 0x30
  404840:	d1a5      	bne.n	40478e <_strtol_l.isra.0+0x46>
  404842:	7823      	ldrb	r3, [r4, #0]
  404844:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404848:	2b58      	cmp	r3, #88	; 0x58
  40484a:	d1a0      	bne.n	40478e <_strtol_l.isra.0+0x46>
  40484c:	f04f 0c10 	mov.w	ip, #16
  404850:	f894 b001 	ldrb.w	fp, [r4, #1]
  404854:	4665      	mov	r5, ip
  404856:	3402      	adds	r4, #2
  404858:	e7a0      	b.n	40479c <_strtol_l.isra.0+0x54>
  40485a:	7823      	ldrb	r3, [r4, #0]
  40485c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404860:	2b58      	cmp	r3, #88	; 0x58
  404862:	d0f3      	beq.n	40484c <_strtol_l.isra.0+0x104>
  404864:	2508      	movs	r5, #8
  404866:	46ac      	mov	ip, r5
  404868:	e798      	b.n	40479c <_strtol_l.isra.0+0x54>
  40486a:	4648      	mov	r0, r9
  40486c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404870 <_strtol_r>:
  404870:	b530      	push	{r4, r5, lr}
  404872:	4c06      	ldr	r4, [pc, #24]	; (40488c <_strtol_r+0x1c>)
  404874:	4d06      	ldr	r5, [pc, #24]	; (404890 <_strtol_r+0x20>)
  404876:	6824      	ldr	r4, [r4, #0]
  404878:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40487a:	b083      	sub	sp, #12
  40487c:	2c00      	cmp	r4, #0
  40487e:	bf08      	it	eq
  404880:	462c      	moveq	r4, r5
  404882:	9400      	str	r4, [sp, #0]
  404884:	f7ff ff60 	bl	404748 <_strtol_l.isra.0>
  404888:	b003      	add	sp, #12
  40488a:	bd30      	pop	{r4, r5, pc}
  40488c:	20400018 	.word	0x20400018
  404890:	2040044c 	.word	0x2040044c

00404894 <_strtoll_l.isra.0>:
  404894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404898:	b085      	sub	sp, #20
  40489a:	461e      	mov	r6, r3
  40489c:	9102      	str	r1, [sp, #8]
  40489e:	9003      	str	r0, [sp, #12]
  4048a0:	9200      	str	r2, [sp, #0]
  4048a2:	4688      	mov	r8, r1
  4048a4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  4048a6:	e000      	b.n	4048aa <_strtoll_l.isra.0+0x16>
  4048a8:	46a8      	mov	r8, r5
  4048aa:	4645      	mov	r5, r8
  4048ac:	4638      	mov	r0, r7
  4048ae:	f815 4b01 	ldrb.w	r4, [r5], #1
  4048b2:	f7fe ff97 	bl	4037e4 <__locale_ctype_ptr_l>
  4048b6:	4420      	add	r0, r4
  4048b8:	7843      	ldrb	r3, [r0, #1]
  4048ba:	f013 0308 	ands.w	r3, r3, #8
  4048be:	d1f3      	bne.n	4048a8 <_strtoll_l.isra.0+0x14>
  4048c0:	2c2d      	cmp	r4, #45	; 0x2d
  4048c2:	f000 8081 	beq.w	4049c8 <_strtoll_l.isra.0+0x134>
  4048c6:	2c2b      	cmp	r4, #43	; 0x2b
  4048c8:	bf03      	ittte	eq
  4048ca:	782c      	ldrbeq	r4, [r5, #0]
  4048cc:	9301      	streq	r3, [sp, #4]
  4048ce:	f108 0502 	addeq.w	r5, r8, #2
  4048d2:	9301      	strne	r3, [sp, #4]
  4048d4:	b166      	cbz	r6, 4048f0 <_strtoll_l.isra.0+0x5c>
  4048d6:	2e10      	cmp	r6, #16
  4048d8:	f000 8088 	beq.w	4049ec <_strtoll_l.isra.0+0x158>
  4048dc:	9b01      	ldr	r3, [sp, #4]
  4048de:	46b0      	mov	r8, r6
  4048e0:	ea4f 79e6 	mov.w	r9, r6, asr #31
  4048e4:	b97b      	cbnz	r3, 404906 <_strtoll_l.isra.0+0x72>
  4048e6:	f04f 3aff 	mov.w	sl, #4294967295
  4048ea:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
  4048ee:	e00e      	b.n	40490e <_strtoll_l.isra.0+0x7a>
  4048f0:	2c30      	cmp	r4, #48	; 0x30
  4048f2:	f000 808a 	beq.w	404a0a <_strtoll_l.isra.0+0x176>
  4048f6:	f04f 080a 	mov.w	r8, #10
  4048fa:	f04f 0900 	mov.w	r9, #0
  4048fe:	260a      	movs	r6, #10
  404900:	9b01      	ldr	r3, [sp, #4]
  404902:	2b00      	cmp	r3, #0
  404904:	d0ef      	beq.n	4048e6 <_strtoll_l.isra.0+0x52>
  404906:	f04f 0a00 	mov.w	sl, #0
  40490a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
  40490e:	4642      	mov	r2, r8
  404910:	464b      	mov	r3, r9
  404912:	4650      	mov	r0, sl
  404914:	4639      	mov	r1, r7
  404916:	f000 fce9 	bl	4052ec <__aeabi_uldivmod>
  40491a:	464b      	mov	r3, r9
  40491c:	4693      	mov	fp, r2
  40491e:	4650      	mov	r0, sl
  404920:	4642      	mov	r2, r8
  404922:	4639      	mov	r1, r7
  404924:	f000 fce2 	bl	4052ec <__aeabi_uldivmod>
  404928:	f04f 0e00 	mov.w	lr, #0
  40492c:	2200      	movs	r2, #0
  40492e:	2300      	movs	r3, #0
  404930:	e00f      	b.n	404952 <_strtoll_l.isra.0+0xbe>
  404932:	d044      	beq.n	4049be <_strtoll_l.isra.0+0x12a>
  404934:	fb02 f409 	mul.w	r4, r2, r9
  404938:	fb08 4403 	mla	r4, r8, r3, r4
  40493c:	fba2 2308 	umull	r2, r3, r2, r8
  404940:	4423      	add	r3, r4
  404942:	eb12 020c 	adds.w	r2, r2, ip
  404946:	eb43 73ec 	adc.w	r3, r3, ip, asr #31
  40494a:	f04f 0e01 	mov.w	lr, #1
  40494e:	f815 4b01 	ldrb.w	r4, [r5], #1
  404952:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
  404956:	f1bc 0f09 	cmp.w	ip, #9
  40495a:	d906      	bls.n	40496a <_strtoll_l.isra.0+0xd6>
  40495c:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
  404960:	f1bc 0f19 	cmp.w	ip, #25
  404964:	d80d      	bhi.n	404982 <_strtoll_l.isra.0+0xee>
  404966:	f1a4 0c37 	sub.w	ip, r4, #55	; 0x37
  40496a:	4566      	cmp	r6, ip
  40496c:	dd12      	ble.n	404994 <_strtoll_l.isra.0+0x100>
  40496e:	f1be 3fff 	cmp.w	lr, #4294967295
  404972:	d0ec      	beq.n	40494e <_strtoll_l.isra.0+0xba>
  404974:	4299      	cmp	r1, r3
  404976:	bf08      	it	eq
  404978:	4290      	cmpeq	r0, r2
  40497a:	d2da      	bcs.n	404932 <_strtoll_l.isra.0+0x9e>
  40497c:	f04f 3eff 	mov.w	lr, #4294967295
  404980:	e7e5      	b.n	40494e <_strtoll_l.isra.0+0xba>
  404982:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
  404986:	f1bc 0f19 	cmp.w	ip, #25
  40498a:	d803      	bhi.n	404994 <_strtoll_l.isra.0+0x100>
  40498c:	f1a4 0c57 	sub.w	ip, r4, #87	; 0x57
  404990:	4566      	cmp	r6, ip
  404992:	dcec      	bgt.n	40496e <_strtoll_l.isra.0+0xda>
  404994:	f1be 3fff 	cmp.w	lr, #4294967295
  404998:	d01c      	beq.n	4049d4 <_strtoll_l.isra.0+0x140>
  40499a:	9901      	ldr	r1, [sp, #4]
  40499c:	b111      	cbz	r1, 4049a4 <_strtoll_l.isra.0+0x110>
  40499e:	4252      	negs	r2, r2
  4049a0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4049a4:	9900      	ldr	r1, [sp, #0]
  4049a6:	b129      	cbz	r1, 4049b4 <_strtoll_l.isra.0+0x120>
  4049a8:	f1be 0f00 	cmp.w	lr, #0
  4049ac:	d11b      	bne.n	4049e6 <_strtoll_l.isra.0+0x152>
  4049ae:	9d02      	ldr	r5, [sp, #8]
  4049b0:	9900      	ldr	r1, [sp, #0]
  4049b2:	600d      	str	r5, [r1, #0]
  4049b4:	4610      	mov	r0, r2
  4049b6:	4619      	mov	r1, r3
  4049b8:	b005      	add	sp, #20
  4049ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049be:	45e3      	cmp	fp, ip
  4049c0:	dab8      	bge.n	404934 <_strtoll_l.isra.0+0xa0>
  4049c2:	f04f 3eff 	mov.w	lr, #4294967295
  4049c6:	e7c2      	b.n	40494e <_strtoll_l.isra.0+0xba>
  4049c8:	2301      	movs	r3, #1
  4049ca:	782c      	ldrb	r4, [r5, #0]
  4049cc:	9301      	str	r3, [sp, #4]
  4049ce:	f108 0502 	add.w	r5, r8, #2
  4049d2:	e77f      	b.n	4048d4 <_strtoll_l.isra.0+0x40>
  4049d4:	9a03      	ldr	r2, [sp, #12]
  4049d6:	2322      	movs	r3, #34	; 0x22
  4049d8:	6013      	str	r3, [r2, #0]
  4049da:	9b00      	ldr	r3, [sp, #0]
  4049dc:	b32b      	cbz	r3, 404a2a <_strtoll_l.isra.0+0x196>
  4049de:	4652      	mov	r2, sl
  4049e0:	463b      	mov	r3, r7
  4049e2:	3d01      	subs	r5, #1
  4049e4:	e7e4      	b.n	4049b0 <_strtoll_l.isra.0+0x11c>
  4049e6:	4692      	mov	sl, r2
  4049e8:	461f      	mov	r7, r3
  4049ea:	e7f8      	b.n	4049de <_strtoll_l.isra.0+0x14a>
  4049ec:	2c30      	cmp	r4, #48	; 0x30
  4049ee:	d117      	bne.n	404a20 <_strtoll_l.isra.0+0x18c>
  4049f0:	782b      	ldrb	r3, [r5, #0]
  4049f2:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  4049f6:	2b58      	cmp	r3, #88	; 0x58
  4049f8:	d112      	bne.n	404a20 <_strtoll_l.isra.0+0x18c>
  4049fa:	786c      	ldrb	r4, [r5, #1]
  4049fc:	f04f 0810 	mov.w	r8, #16
  404a00:	f04f 0900 	mov.w	r9, #0
  404a04:	3502      	adds	r5, #2
  404a06:	2610      	movs	r6, #16
  404a08:	e77a      	b.n	404900 <_strtoll_l.isra.0+0x6c>
  404a0a:	782b      	ldrb	r3, [r5, #0]
  404a0c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404a10:	2b58      	cmp	r3, #88	; 0x58
  404a12:	d0f2      	beq.n	4049fa <_strtoll_l.isra.0+0x166>
  404a14:	f04f 0808 	mov.w	r8, #8
  404a18:	f04f 0900 	mov.w	r9, #0
  404a1c:	2608      	movs	r6, #8
  404a1e:	e76f      	b.n	404900 <_strtoll_l.isra.0+0x6c>
  404a20:	f04f 0810 	mov.w	r8, #16
  404a24:	f04f 0900 	mov.w	r9, #0
  404a28:	e76a      	b.n	404900 <_strtoll_l.isra.0+0x6c>
  404a2a:	4652      	mov	r2, sl
  404a2c:	463b      	mov	r3, r7
  404a2e:	e7c1      	b.n	4049b4 <_strtoll_l.isra.0+0x120>

00404a30 <_strtoll_r>:
  404a30:	b530      	push	{r4, r5, lr}
  404a32:	4c06      	ldr	r4, [pc, #24]	; (404a4c <_strtoll_r+0x1c>)
  404a34:	4d06      	ldr	r5, [pc, #24]	; (404a50 <_strtoll_r+0x20>)
  404a36:	6824      	ldr	r4, [r4, #0]
  404a38:	6b64      	ldr	r4, [r4, #52]	; 0x34
  404a3a:	b083      	sub	sp, #12
  404a3c:	2c00      	cmp	r4, #0
  404a3e:	bf08      	it	eq
  404a40:	462c      	moveq	r4, r5
  404a42:	9400      	str	r4, [sp, #0]
  404a44:	f7ff ff26 	bl	404894 <_strtoll_l.isra.0>
  404a48:	b003      	add	sp, #12
  404a4a:	bd30      	pop	{r4, r5, pc}
  404a4c:	20400018 	.word	0x20400018
  404a50:	2040044c 	.word	0x2040044c

00404a54 <_strtoul_l.isra.0>:
  404a54:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404a58:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  404a5c:	460e      	mov	r6, r1
  404a5e:	4607      	mov	r7, r0
  404a60:	4615      	mov	r5, r2
  404a62:	4698      	mov	r8, r3
  404a64:	468a      	mov	sl, r1
  404a66:	e000      	b.n	404a6a <_strtoul_l.isra.0+0x16>
  404a68:	46a2      	mov	sl, r4
  404a6a:	4654      	mov	r4, sl
  404a6c:	4648      	mov	r0, r9
  404a6e:	f814 bb01 	ldrb.w	fp, [r4], #1
  404a72:	f7fe feb7 	bl	4037e4 <__locale_ctype_ptr_l>
  404a76:	4458      	add	r0, fp
  404a78:	7840      	ldrb	r0, [r0, #1]
  404a7a:	f010 0008 	ands.w	r0, r0, #8
  404a7e:	d1f3      	bne.n	404a68 <_strtoul_l.isra.0+0x14>
  404a80:	4659      	mov	r1, fp
  404a82:	292d      	cmp	r1, #45	; 0x2d
  404a84:	d059      	beq.n	404b3a <_strtoul_l.isra.0+0xe6>
  404a86:	292b      	cmp	r1, #43	; 0x2b
  404a88:	bf04      	itt	eq
  404a8a:	7821      	ldrbeq	r1, [r4, #0]
  404a8c:	f10a 0402 	addeq.w	r4, sl, #2
  404a90:	f1b8 0f00 	cmp.w	r8, #0
  404a94:	d00c      	beq.n	404ab0 <_strtoul_l.isra.0+0x5c>
  404a96:	f1b8 0f10 	cmp.w	r8, #16
  404a9a:	d053      	beq.n	404b44 <_strtoul_l.isra.0+0xf0>
  404a9c:	f04f 3cff 	mov.w	ip, #4294967295
  404aa0:	fbbc fcf8 	udiv	ip, ip, r8
  404aa4:	fb08 fa0c 	mul.w	sl, r8, ip
  404aa8:	ea6f 0a0a 	mvn.w	sl, sl
  404aac:	46c1      	mov	r9, r8
  404aae:	e008      	b.n	404ac2 <_strtoul_l.isra.0+0x6e>
  404ab0:	2930      	cmp	r1, #48	; 0x30
  404ab2:	d058      	beq.n	404b66 <_strtoul_l.isra.0+0x112>
  404ab4:	f04f 080a 	mov.w	r8, #10
  404ab8:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 404b98 <_strtoul_l.isra.0+0x144>
  404abc:	46c1      	mov	r9, r8
  404abe:	f04f 0a05 	mov.w	sl, #5
  404ac2:	2300      	movs	r3, #0
  404ac4:	469e      	mov	lr, r3
  404ac6:	e005      	b.n	404ad4 <_strtoul_l.isra.0+0x80>
  404ac8:	d02a      	beq.n	404b20 <_strtoul_l.isra.0+0xcc>
  404aca:	fb09 2e0e 	mla	lr, r9, lr, r2
  404ace:	2301      	movs	r3, #1
  404ad0:	f814 1b01 	ldrb.w	r1, [r4], #1
  404ad4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
  404ad8:	2a09      	cmp	r2, #9
  404ada:	d905      	bls.n	404ae8 <_strtoul_l.isra.0+0x94>
  404adc:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
  404ae0:	2a19      	cmp	r2, #25
  404ae2:	d80a      	bhi.n	404afa <_strtoul_l.isra.0+0xa6>
  404ae4:	f1a1 0237 	sub.w	r2, r1, #55	; 0x37
  404ae8:	4590      	cmp	r8, r2
  404aea:	dd0e      	ble.n	404b0a <_strtoul_l.isra.0+0xb6>
  404aec:	2b00      	cmp	r3, #0
  404aee:	db01      	blt.n	404af4 <_strtoul_l.isra.0+0xa0>
  404af0:	45e6      	cmp	lr, ip
  404af2:	d9e9      	bls.n	404ac8 <_strtoul_l.isra.0+0x74>
  404af4:	f04f 33ff 	mov.w	r3, #4294967295
  404af8:	e7ea      	b.n	404ad0 <_strtoul_l.isra.0+0x7c>
  404afa:	f1a1 0261 	sub.w	r2, r1, #97	; 0x61
  404afe:	2a19      	cmp	r2, #25
  404b00:	d803      	bhi.n	404b0a <_strtoul_l.isra.0+0xb6>
  404b02:	f1a1 0257 	sub.w	r2, r1, #87	; 0x57
  404b06:	4590      	cmp	r8, r2
  404b08:	dcf0      	bgt.n	404aec <_strtoul_l.isra.0+0x98>
  404b0a:	2b00      	cmp	r3, #0
  404b0c:	db0d      	blt.n	404b2a <_strtoul_l.isra.0+0xd6>
  404b0e:	b108      	cbz	r0, 404b14 <_strtoul_l.isra.0+0xc0>
  404b10:	f1ce 0e00 	rsb	lr, lr, #0
  404b14:	b10d      	cbz	r5, 404b1a <_strtoul_l.isra.0+0xc6>
  404b16:	b973      	cbnz	r3, 404b36 <_strtoul_l.isra.0+0xe2>
  404b18:	602e      	str	r6, [r5, #0]
  404b1a:	4670      	mov	r0, lr
  404b1c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b20:	4552      	cmp	r2, sl
  404b22:	ddd2      	ble.n	404aca <_strtoul_l.isra.0+0x76>
  404b24:	f04f 33ff 	mov.w	r3, #4294967295
  404b28:	e7d2      	b.n	404ad0 <_strtoul_l.isra.0+0x7c>
  404b2a:	2322      	movs	r3, #34	; 0x22
  404b2c:	603b      	str	r3, [r7, #0]
  404b2e:	f04f 3eff 	mov.w	lr, #4294967295
  404b32:	2d00      	cmp	r5, #0
  404b34:	d0f1      	beq.n	404b1a <_strtoul_l.isra.0+0xc6>
  404b36:	1e66      	subs	r6, r4, #1
  404b38:	e7ee      	b.n	404b18 <_strtoul_l.isra.0+0xc4>
  404b3a:	7821      	ldrb	r1, [r4, #0]
  404b3c:	2001      	movs	r0, #1
  404b3e:	f10a 0402 	add.w	r4, sl, #2
  404b42:	e7a5      	b.n	404a90 <_strtoul_l.isra.0+0x3c>
  404b44:	2930      	cmp	r1, #48	; 0x30
  404b46:	d11b      	bne.n	404b80 <_strtoul_l.isra.0+0x12c>
  404b48:	7823      	ldrb	r3, [r4, #0]
  404b4a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404b4e:	2b58      	cmp	r3, #88	; 0x58
  404b50:	d11c      	bne.n	404b8c <_strtoul_l.isra.0+0x138>
  404b52:	f04f 0910 	mov.w	r9, #16
  404b56:	7861      	ldrb	r1, [r4, #1]
  404b58:	46c8      	mov	r8, r9
  404b5a:	f04f 0a0f 	mov.w	sl, #15
  404b5e:	3402      	adds	r4, #2
  404b60:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  404b64:	e7ad      	b.n	404ac2 <_strtoul_l.isra.0+0x6e>
  404b66:	7823      	ldrb	r3, [r4, #0]
  404b68:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404b6c:	2b58      	cmp	r3, #88	; 0x58
  404b6e:	d0f0      	beq.n	404b52 <_strtoul_l.isra.0+0xfe>
  404b70:	f04f 0808 	mov.w	r8, #8
  404b74:	46c1      	mov	r9, r8
  404b76:	f04f 0a07 	mov.w	sl, #7
  404b7a:	f06f 4c60 	mvn.w	ip, #3758096384	; 0xe0000000
  404b7e:	e7a0      	b.n	404ac2 <_strtoul_l.isra.0+0x6e>
  404b80:	f04f 0a0f 	mov.w	sl, #15
  404b84:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  404b88:	46c1      	mov	r9, r8
  404b8a:	e79a      	b.n	404ac2 <_strtoul_l.isra.0+0x6e>
  404b8c:	46c1      	mov	r9, r8
  404b8e:	f06f 4c70 	mvn.w	ip, #4026531840	; 0xf0000000
  404b92:	f04f 0a0f 	mov.w	sl, #15
  404b96:	e794      	b.n	404ac2 <_strtoul_l.isra.0+0x6e>
  404b98:	19999999 	.word	0x19999999

00404b9c <_strtoul_r>:
  404b9c:	b530      	push	{r4, r5, lr}
  404b9e:	4c06      	ldr	r4, [pc, #24]	; (404bb8 <_strtoul_r+0x1c>)
  404ba0:	4d06      	ldr	r5, [pc, #24]	; (404bbc <_strtoul_r+0x20>)
  404ba2:	6824      	ldr	r4, [r4, #0]
  404ba4:	6b64      	ldr	r4, [r4, #52]	; 0x34
  404ba6:	b083      	sub	sp, #12
  404ba8:	2c00      	cmp	r4, #0
  404baa:	bf08      	it	eq
  404bac:	462c      	moveq	r4, r5
  404bae:	9400      	str	r4, [sp, #0]
  404bb0:	f7ff ff50 	bl	404a54 <_strtoul_l.isra.0>
  404bb4:	b003      	add	sp, #12
  404bb6:	bd30      	pop	{r4, r5, pc}
  404bb8:	20400018 	.word	0x20400018
  404bbc:	2040044c 	.word	0x2040044c

00404bc0 <_strtoull_l.isra.0>:
  404bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404bc4:	b085      	sub	sp, #20
  404bc6:	4693      	mov	fp, r2
  404bc8:	9102      	str	r1, [sp, #8]
  404bca:	9003      	str	r0, [sp, #12]
  404bcc:	469a      	mov	sl, r3
  404bce:	460f      	mov	r7, r1
  404bd0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
  404bd2:	e000      	b.n	404bd6 <_strtoull_l.isra.0+0x16>
  404bd4:	462f      	mov	r7, r5
  404bd6:	463d      	mov	r5, r7
  404bd8:	4630      	mov	r0, r6
  404bda:	f815 4b01 	ldrb.w	r4, [r5], #1
  404bde:	f7fe fe01 	bl	4037e4 <__locale_ctype_ptr_l>
  404be2:	4420      	add	r0, r4
  404be4:	7843      	ldrb	r3, [r0, #1]
  404be6:	f013 0308 	ands.w	r3, r3, #8
  404bea:	d1f3      	bne.n	404bd4 <_strtoull_l.isra.0+0x14>
  404bec:	2c2d      	cmp	r4, #45	; 0x2d
  404bee:	f000 8089 	beq.w	404d04 <_strtoull_l.isra.0+0x144>
  404bf2:	2c2b      	cmp	r4, #43	; 0x2b
  404bf4:	bf03      	ittte	eq
  404bf6:	782c      	ldrbeq	r4, [r5, #0]
  404bf8:	9301      	streq	r3, [sp, #4]
  404bfa:	1cbd      	addeq	r5, r7, #2
  404bfc:	9301      	strne	r3, [sp, #4]
  404bfe:	f1ba 0f00 	cmp.w	sl, #0
  404c02:	d019      	beq.n	404c38 <_strtoull_l.isra.0+0x78>
  404c04:	f1ba 0f10 	cmp.w	sl, #16
  404c08:	f000 8081 	beq.w	404d0e <_strtoull_l.isra.0+0x14e>
  404c0c:	46d0      	mov	r8, sl
  404c0e:	ea4f 79ea 	mov.w	r9, sl, asr #31
  404c12:	4642      	mov	r2, r8
  404c14:	464b      	mov	r3, r9
  404c16:	f04f 30ff 	mov.w	r0, #4294967295
  404c1a:	f04f 31ff 	mov.w	r1, #4294967295
  404c1e:	f000 fb65 	bl	4052ec <__aeabi_uldivmod>
  404c22:	4642      	mov	r2, r8
  404c24:	4606      	mov	r6, r0
  404c26:	460f      	mov	r7, r1
  404c28:	464b      	mov	r3, r9
  404c2a:	f04f 30ff 	mov.w	r0, #4294967295
  404c2e:	f04f 31ff 	mov.w	r1, #4294967295
  404c32:	f000 fb5b 	bl	4052ec <__aeabi_uldivmod>
  404c36:	e00b      	b.n	404c50 <_strtoull_l.isra.0+0x90>
  404c38:	2c30      	cmp	r4, #48	; 0x30
  404c3a:	d07d      	beq.n	404d38 <_strtoull_l.isra.0+0x178>
  404c3c:	4f4e      	ldr	r7, [pc, #312]	; (404d78 <_strtoull_l.isra.0+0x1b8>)
  404c3e:	2205      	movs	r2, #5
  404c40:	f04f 3699 	mov.w	r6, #2576980377	; 0x99999999
  404c44:	f04f 080a 	mov.w	r8, #10
  404c48:	f04f 0900 	mov.w	r9, #0
  404c4c:	f04f 0a0a 	mov.w	sl, #10
  404c50:	f04f 0e00 	mov.w	lr, #0
  404c54:	2000      	movs	r0, #0
  404c56:	2100      	movs	r1, #0
  404c58:	e011      	b.n	404c7e <_strtoull_l.isra.0+0xbe>
  404c5a:	42b9      	cmp	r1, r7
  404c5c:	bf08      	it	eq
  404c5e:	42b0      	cmpeq	r0, r6
  404c60:	d03f      	beq.n	404ce2 <_strtoull_l.isra.0+0x122>
  404c62:	fb00 f409 	mul.w	r4, r0, r9
  404c66:	fb08 4401 	mla	r4, r8, r1, r4
  404c6a:	fba0 0108 	umull	r0, r1, r0, r8
  404c6e:	4421      	add	r1, r4
  404c70:	18c0      	adds	r0, r0, r3
  404c72:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
  404c76:	f04f 0e01 	mov.w	lr, #1
  404c7a:	f815 4b01 	ldrb.w	r4, [r5], #1
  404c7e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
  404c82:	2b09      	cmp	r3, #9
  404c84:	d905      	bls.n	404c92 <_strtoull_l.isra.0+0xd2>
  404c86:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
  404c8a:	2b19      	cmp	r3, #25
  404c8c:	d80d      	bhi.n	404caa <_strtoull_l.isra.0+0xea>
  404c8e:	f1a4 0337 	sub.w	r3, r4, #55	; 0x37
  404c92:	459a      	cmp	sl, r3
  404c94:	dd11      	ble.n	404cba <_strtoull_l.isra.0+0xfa>
  404c96:	f1be 0f00 	cmp.w	lr, #0
  404c9a:	db03      	blt.n	404ca4 <_strtoull_l.isra.0+0xe4>
  404c9c:	428f      	cmp	r7, r1
  404c9e:	bf08      	it	eq
  404ca0:	4286      	cmpeq	r6, r0
  404ca2:	d2da      	bcs.n	404c5a <_strtoull_l.isra.0+0x9a>
  404ca4:	f04f 3eff 	mov.w	lr, #4294967295
  404ca8:	e7e7      	b.n	404c7a <_strtoull_l.isra.0+0xba>
  404caa:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
  404cae:	2b19      	cmp	r3, #25
  404cb0:	d803      	bhi.n	404cba <_strtoull_l.isra.0+0xfa>
  404cb2:	f1a4 0357 	sub.w	r3, r4, #87	; 0x57
  404cb6:	459a      	cmp	sl, r3
  404cb8:	dced      	bgt.n	404c96 <_strtoull_l.isra.0+0xd6>
  404cba:	f1be 0f00 	cmp.w	lr, #0
  404cbe:	db15      	blt.n	404cec <_strtoull_l.isra.0+0x12c>
  404cc0:	9b01      	ldr	r3, [sp, #4]
  404cc2:	b113      	cbz	r3, 404cca <_strtoull_l.isra.0+0x10a>
  404cc4:	4240      	negs	r0, r0
  404cc6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  404cca:	f1bb 0f00 	cmp.w	fp, #0
  404cce:	d005      	beq.n	404cdc <_strtoull_l.isra.0+0x11c>
  404cd0:	f1be 0f00 	cmp.w	lr, #0
  404cd4:	d114      	bne.n	404d00 <_strtoull_l.isra.0+0x140>
  404cd6:	9d02      	ldr	r5, [sp, #8]
  404cd8:	f8cb 5000 	str.w	r5, [fp]
  404cdc:	b005      	add	sp, #20
  404cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ce2:	4293      	cmp	r3, r2
  404ce4:	ddbd      	ble.n	404c62 <_strtoull_l.isra.0+0xa2>
  404ce6:	f04f 3eff 	mov.w	lr, #4294967295
  404cea:	e7c6      	b.n	404c7a <_strtoull_l.isra.0+0xba>
  404cec:	9a03      	ldr	r2, [sp, #12]
  404cee:	2322      	movs	r3, #34	; 0x22
  404cf0:	6013      	str	r3, [r2, #0]
  404cf2:	f04f 30ff 	mov.w	r0, #4294967295
  404cf6:	f04f 31ff 	mov.w	r1, #4294967295
  404cfa:	f1bb 0f00 	cmp.w	fp, #0
  404cfe:	d0ed      	beq.n	404cdc <_strtoull_l.isra.0+0x11c>
  404d00:	3d01      	subs	r5, #1
  404d02:	e7e9      	b.n	404cd8 <_strtoull_l.isra.0+0x118>
  404d04:	2301      	movs	r3, #1
  404d06:	782c      	ldrb	r4, [r5, #0]
  404d08:	9301      	str	r3, [sp, #4]
  404d0a:	1cbd      	adds	r5, r7, #2
  404d0c:	e777      	b.n	404bfe <_strtoull_l.isra.0+0x3e>
  404d0e:	2c30      	cmp	r4, #48	; 0x30
  404d10:	d123      	bne.n	404d5a <_strtoull_l.isra.0+0x19a>
  404d12:	782b      	ldrb	r3, [r5, #0]
  404d14:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404d18:	2b58      	cmp	r3, #88	; 0x58
  404d1a:	d128      	bne.n	404d6e <_strtoull_l.isra.0+0x1ae>
  404d1c:	786c      	ldrb	r4, [r5, #1]
  404d1e:	220f      	movs	r2, #15
  404d20:	3502      	adds	r5, #2
  404d22:	f04f 36ff 	mov.w	r6, #4294967295
  404d26:	f06f 4770 	mvn.w	r7, #4026531840	; 0xf0000000
  404d2a:	f04f 0810 	mov.w	r8, #16
  404d2e:	f04f 0900 	mov.w	r9, #0
  404d32:	f04f 0a10 	mov.w	sl, #16
  404d36:	e78b      	b.n	404c50 <_strtoull_l.isra.0+0x90>
  404d38:	782b      	ldrb	r3, [r5, #0]
  404d3a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
  404d3e:	2b58      	cmp	r3, #88	; 0x58
  404d40:	d0ec      	beq.n	404d1c <_strtoull_l.isra.0+0x15c>
  404d42:	2207      	movs	r2, #7
  404d44:	f04f 36ff 	mov.w	r6, #4294967295
  404d48:	f06f 4760 	mvn.w	r7, #3758096384	; 0xe0000000
  404d4c:	f04f 0808 	mov.w	r8, #8
  404d50:	f04f 0900 	mov.w	r9, #0
  404d54:	f04f 0a08 	mov.w	sl, #8
  404d58:	e77a      	b.n	404c50 <_strtoull_l.isra.0+0x90>
  404d5a:	220f      	movs	r2, #15
  404d5c:	f04f 36ff 	mov.w	r6, #4294967295
  404d60:	f06f 4770 	mvn.w	r7, #4026531840	; 0xf0000000
  404d64:	f04f 0810 	mov.w	r8, #16
  404d68:	f04f 0900 	mov.w	r9, #0
  404d6c:	e770      	b.n	404c50 <_strtoull_l.isra.0+0x90>
  404d6e:	f04f 0810 	mov.w	r8, #16
  404d72:	f04f 0900 	mov.w	r9, #0
  404d76:	e74c      	b.n	404c12 <_strtoull_l.isra.0+0x52>
  404d78:	19999999 	.word	0x19999999

00404d7c <_strtoull_r>:
  404d7c:	b530      	push	{r4, r5, lr}
  404d7e:	4c06      	ldr	r4, [pc, #24]	; (404d98 <_strtoull_r+0x1c>)
  404d80:	4d06      	ldr	r5, [pc, #24]	; (404d9c <_strtoull_r+0x20>)
  404d82:	6824      	ldr	r4, [r4, #0]
  404d84:	6b64      	ldr	r4, [r4, #52]	; 0x34
  404d86:	b083      	sub	sp, #12
  404d88:	2c00      	cmp	r4, #0
  404d8a:	bf08      	it	eq
  404d8c:	462c      	moveq	r4, r5
  404d8e:	9400      	str	r4, [sp, #0]
  404d90:	f7ff ff16 	bl	404bc0 <_strtoull_l.isra.0>
  404d94:	b003      	add	sp, #12
  404d96:	bd30      	pop	{r4, r5, pc}
  404d98:	20400018 	.word	0x20400018
  404d9c:	2040044c 	.word	0x2040044c

00404da0 <__submore>:
  404da0:	f101 0340 	add.w	r3, r1, #64	; 0x40
  404da4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404da8:	460c      	mov	r4, r1
  404daa:	6b09      	ldr	r1, [r1, #48]	; 0x30
  404dac:	4299      	cmp	r1, r3
  404dae:	d014      	beq.n	404dda <__submore+0x3a>
  404db0:	6b66      	ldr	r6, [r4, #52]	; 0x34
  404db2:	0077      	lsls	r7, r6, #1
  404db4:	463a      	mov	r2, r7
  404db6:	f7ff f9fd 	bl	4041b4 <_realloc_r>
  404dba:	4605      	mov	r5, r0
  404dbc:	b340      	cbz	r0, 404e10 <__submore+0x70>
  404dbe:	eb00 0806 	add.w	r8, r0, r6
  404dc2:	4632      	mov	r2, r6
  404dc4:	4640      	mov	r0, r8
  404dc6:	4629      	mov	r1, r5
  404dc8:	f7ff f8ea 	bl	403fa0 <memcpy>
  404dcc:	f8c4 8000 	str.w	r8, [r4]
  404dd0:	6325      	str	r5, [r4, #48]	; 0x30
  404dd2:	6367      	str	r7, [r4, #52]	; 0x34
  404dd4:	2000      	movs	r0, #0
  404dd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404dda:	f44f 6180 	mov.w	r1, #1024	; 0x400
  404dde:	f7fe fd9b 	bl	403918 <_malloc_r>
  404de2:	b1a8      	cbz	r0, 404e10 <__submore+0x70>
  404de4:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
  404de8:	6320      	str	r0, [r4, #48]	; 0x30
  404dea:	f44f 6280 	mov.w	r2, #1024	; 0x400
  404dee:	6362      	str	r2, [r4, #52]	; 0x34
  404df0:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
  404df4:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
  404df8:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
  404dfc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
  404e00:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
  404e04:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
  404e08:	6020      	str	r0, [r4, #0]
  404e0a:	2000      	movs	r0, #0
  404e0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e10:	f04f 30ff 	mov.w	r0, #4294967295
  404e14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00404e18 <_ungetc_r>:
  404e18:	b570      	push	{r4, r5, r6, lr}
  404e1a:	1c4c      	adds	r4, r1, #1
  404e1c:	d024      	beq.n	404e68 <_ungetc_r+0x50>
  404e1e:	4606      	mov	r6, r0
  404e20:	4614      	mov	r4, r2
  404e22:	460d      	mov	r5, r1
  404e24:	b110      	cbz	r0, 404e2c <_ungetc_r+0x14>
  404e26:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404e28:	2b00      	cmp	r3, #0
  404e2a:	d04d      	beq.n	404ec8 <_ungetc_r+0xb0>
  404e2c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  404e2e:	f013 0f01 	tst.w	r3, #1
  404e32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404e36:	b29a      	uxth	r2, r3
  404e38:	d101      	bne.n	404e3e <_ungetc_r+0x26>
  404e3a:	0591      	lsls	r1, r2, #22
  404e3c:	d559      	bpl.n	404ef2 <_ungetc_r+0xda>
  404e3e:	0492      	lsls	r2, r2, #18
  404e40:	d405      	bmi.n	404e4e <_ungetc_r+0x36>
  404e42:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404e44:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  404e48:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  404e4c:	6662      	str	r2, [r4, #100]	; 0x64
  404e4e:	f023 0320 	bic.w	r3, r3, #32
  404e52:	b29a      	uxth	r2, r3
  404e54:	0750      	lsls	r0, r2, #29
  404e56:	81a3      	strh	r3, [r4, #12]
  404e58:	d41b      	bmi.n	404e92 <_ungetc_r+0x7a>
  404e5a:	06d1      	lsls	r1, r2, #27
  404e5c:	d408      	bmi.n	404e70 <_ungetc_r+0x58>
  404e5e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  404e60:	07d8      	lsls	r0, r3, #31
  404e62:	d401      	bmi.n	404e68 <_ungetc_r+0x50>
  404e64:	0591      	lsls	r1, r2, #22
  404e66:	d53e      	bpl.n	404ee6 <_ungetc_r+0xce>
  404e68:	f04f 35ff 	mov.w	r5, #4294967295
  404e6c:	4628      	mov	r0, r5
  404e6e:	bd70      	pop	{r4, r5, r6, pc}
  404e70:	0712      	lsls	r2, r2, #28
  404e72:	d50b      	bpl.n	404e8c <_ungetc_r+0x74>
  404e74:	4621      	mov	r1, r4
  404e76:	4630      	mov	r0, r6
  404e78:	f7fd ff78 	bl	402d6c <_fflush_r>
  404e7c:	2800      	cmp	r0, #0
  404e7e:	d12c      	bne.n	404eda <_ungetc_r+0xc2>
  404e80:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404e84:	60a0      	str	r0, [r4, #8]
  404e86:	61a0      	str	r0, [r4, #24]
  404e88:	f023 0308 	bic.w	r3, r3, #8
  404e8c:	f043 0304 	orr.w	r3, r3, #4
  404e90:	81a3      	strh	r3, [r4, #12]
  404e92:	6b23      	ldr	r3, [r4, #48]	; 0x30
  404e94:	b2ed      	uxtb	r5, r5
  404e96:	2b00      	cmp	r3, #0
  404e98:	d034      	beq.n	404f04 <_ungetc_r+0xec>
  404e9a:	6862      	ldr	r2, [r4, #4]
  404e9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
  404e9e:	429a      	cmp	r2, r3
  404ea0:	da15      	bge.n	404ece <_ungetc_r+0xb6>
  404ea2:	6823      	ldr	r3, [r4, #0]
  404ea4:	1e5a      	subs	r2, r3, #1
  404ea6:	6022      	str	r2, [r4, #0]
  404ea8:	f803 5c01 	strb.w	r5, [r3, #-1]
  404eac:	6863      	ldr	r3, [r4, #4]
  404eae:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404eb0:	3301      	adds	r3, #1
  404eb2:	07d0      	lsls	r0, r2, #31
  404eb4:	6063      	str	r3, [r4, #4]
  404eb6:	d4d9      	bmi.n	404e6c <_ungetc_r+0x54>
  404eb8:	89a3      	ldrh	r3, [r4, #12]
  404eba:	059b      	lsls	r3, r3, #22
  404ebc:	d4d6      	bmi.n	404e6c <_ungetc_r+0x54>
  404ebe:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404ec0:	f7fe fca8 	bl	403814 <__retarget_lock_release_recursive>
  404ec4:	4628      	mov	r0, r5
  404ec6:	bd70      	pop	{r4, r5, r6, pc}
  404ec8:	f7fd ffba 	bl	402e40 <__sinit>
  404ecc:	e7ae      	b.n	404e2c <_ungetc_r+0x14>
  404ece:	4630      	mov	r0, r6
  404ed0:	4621      	mov	r1, r4
  404ed2:	f7ff ff65 	bl	404da0 <__submore>
  404ed6:	2800      	cmp	r0, #0
  404ed8:	d0e3      	beq.n	404ea2 <_ungetc_r+0x8a>
  404eda:	6e63      	ldr	r3, [r4, #100]	; 0x64
  404edc:	07de      	lsls	r6, r3, #31
  404ede:	d4c3      	bmi.n	404e68 <_ungetc_r+0x50>
  404ee0:	89a3      	ldrh	r3, [r4, #12]
  404ee2:	059d      	lsls	r5, r3, #22
  404ee4:	d4c0      	bmi.n	404e68 <_ungetc_r+0x50>
  404ee6:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404ee8:	f7fe fc94 	bl	403814 <__retarget_lock_release_recursive>
  404eec:	f04f 35ff 	mov.w	r5, #4294967295
  404ef0:	e7bc      	b.n	404e6c <_ungetc_r+0x54>
  404ef2:	6da0      	ldr	r0, [r4, #88]	; 0x58
  404ef4:	f7fe fc8c 	bl	403810 <__retarget_lock_acquire_recursive>
  404ef8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404efc:	b29a      	uxth	r2, r3
  404efe:	0492      	lsls	r2, r2, #18
  404f00:	d4a5      	bmi.n	404e4e <_ungetc_r+0x36>
  404f02:	e79e      	b.n	404e42 <_ungetc_r+0x2a>
  404f04:	6922      	ldr	r2, [r4, #16]
  404f06:	6823      	ldr	r3, [r4, #0]
  404f08:	b172      	cbz	r2, 404f28 <_ungetc_r+0x110>
  404f0a:	429a      	cmp	r2, r3
  404f0c:	d20c      	bcs.n	404f28 <_ungetc_r+0x110>
  404f0e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  404f12:	42aa      	cmp	r2, r5
  404f14:	d108      	bne.n	404f28 <_ungetc_r+0x110>
  404f16:	6862      	ldr	r2, [r4, #4]
  404f18:	6e61      	ldr	r1, [r4, #100]	; 0x64
  404f1a:	3b01      	subs	r3, #1
  404f1c:	3201      	adds	r2, #1
  404f1e:	07c9      	lsls	r1, r1, #31
  404f20:	6023      	str	r3, [r4, #0]
  404f22:	6062      	str	r2, [r4, #4]
  404f24:	d5c8      	bpl.n	404eb8 <_ungetc_r+0xa0>
  404f26:	e7a1      	b.n	404e6c <_ungetc_r+0x54>
  404f28:	63a3      	str	r3, [r4, #56]	; 0x38
  404f2a:	4623      	mov	r3, r4
  404f2c:	6860      	ldr	r0, [r4, #4]
  404f2e:	63e0      	str	r0, [r4, #60]	; 0x3c
  404f30:	2203      	movs	r2, #3
  404f32:	f104 0140 	add.w	r1, r4, #64	; 0x40
  404f36:	6362      	str	r2, [r4, #52]	; 0x34
  404f38:	6321      	str	r1, [r4, #48]	; 0x30
  404f3a:	f803 5f42 	strb.w	r5, [r3, #66]!
  404f3e:	6e62      	ldr	r2, [r4, #100]	; 0x64
  404f40:	6023      	str	r3, [r4, #0]
  404f42:	07d2      	lsls	r2, r2, #31
  404f44:	f04f 0301 	mov.w	r3, #1
  404f48:	6063      	str	r3, [r4, #4]
  404f4a:	d48f      	bmi.n	404e6c <_ungetc_r+0x54>
  404f4c:	e7b4      	b.n	404eb8 <_ungetc_r+0xa0>
  404f4e:	bf00      	nop

00404f50 <__swbuf_r>:
  404f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404f52:	460d      	mov	r5, r1
  404f54:	4614      	mov	r4, r2
  404f56:	4606      	mov	r6, r0
  404f58:	b110      	cbz	r0, 404f60 <__swbuf_r+0x10>
  404f5a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  404f5c:	2b00      	cmp	r3, #0
  404f5e:	d04b      	beq.n	404ff8 <__swbuf_r+0xa8>
  404f60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404f64:	69a3      	ldr	r3, [r4, #24]
  404f66:	60a3      	str	r3, [r4, #8]
  404f68:	b291      	uxth	r1, r2
  404f6a:	0708      	lsls	r0, r1, #28
  404f6c:	d539      	bpl.n	404fe2 <__swbuf_r+0x92>
  404f6e:	6923      	ldr	r3, [r4, #16]
  404f70:	2b00      	cmp	r3, #0
  404f72:	d036      	beq.n	404fe2 <__swbuf_r+0x92>
  404f74:	b2ed      	uxtb	r5, r5
  404f76:	0489      	lsls	r1, r1, #18
  404f78:	462f      	mov	r7, r5
  404f7a:	d515      	bpl.n	404fa8 <__swbuf_r+0x58>
  404f7c:	6822      	ldr	r2, [r4, #0]
  404f7e:	6961      	ldr	r1, [r4, #20]
  404f80:	1ad3      	subs	r3, r2, r3
  404f82:	428b      	cmp	r3, r1
  404f84:	da1c      	bge.n	404fc0 <__swbuf_r+0x70>
  404f86:	3301      	adds	r3, #1
  404f88:	68a1      	ldr	r1, [r4, #8]
  404f8a:	1c50      	adds	r0, r2, #1
  404f8c:	3901      	subs	r1, #1
  404f8e:	60a1      	str	r1, [r4, #8]
  404f90:	6020      	str	r0, [r4, #0]
  404f92:	7015      	strb	r5, [r2, #0]
  404f94:	6962      	ldr	r2, [r4, #20]
  404f96:	429a      	cmp	r2, r3
  404f98:	d01a      	beq.n	404fd0 <__swbuf_r+0x80>
  404f9a:	89a3      	ldrh	r3, [r4, #12]
  404f9c:	07db      	lsls	r3, r3, #31
  404f9e:	d501      	bpl.n	404fa4 <__swbuf_r+0x54>
  404fa0:	2d0a      	cmp	r5, #10
  404fa2:	d015      	beq.n	404fd0 <__swbuf_r+0x80>
  404fa4:	4638      	mov	r0, r7
  404fa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404fa8:	6e61      	ldr	r1, [r4, #100]	; 0x64
  404faa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  404fae:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  404fb2:	81a2      	strh	r2, [r4, #12]
  404fb4:	6822      	ldr	r2, [r4, #0]
  404fb6:	6661      	str	r1, [r4, #100]	; 0x64
  404fb8:	6961      	ldr	r1, [r4, #20]
  404fba:	1ad3      	subs	r3, r2, r3
  404fbc:	428b      	cmp	r3, r1
  404fbe:	dbe2      	blt.n	404f86 <__swbuf_r+0x36>
  404fc0:	4621      	mov	r1, r4
  404fc2:	4630      	mov	r0, r6
  404fc4:	f7fd fed2 	bl	402d6c <_fflush_r>
  404fc8:	b940      	cbnz	r0, 404fdc <__swbuf_r+0x8c>
  404fca:	6822      	ldr	r2, [r4, #0]
  404fcc:	2301      	movs	r3, #1
  404fce:	e7db      	b.n	404f88 <__swbuf_r+0x38>
  404fd0:	4621      	mov	r1, r4
  404fd2:	4630      	mov	r0, r6
  404fd4:	f7fd feca 	bl	402d6c <_fflush_r>
  404fd8:	2800      	cmp	r0, #0
  404fda:	d0e3      	beq.n	404fa4 <__swbuf_r+0x54>
  404fdc:	f04f 37ff 	mov.w	r7, #4294967295
  404fe0:	e7e0      	b.n	404fa4 <__swbuf_r+0x54>
  404fe2:	4621      	mov	r1, r4
  404fe4:	4630      	mov	r0, r6
  404fe6:	f7fd fdad 	bl	402b44 <__swsetup_r>
  404fea:	2800      	cmp	r0, #0
  404fec:	d1f6      	bne.n	404fdc <__swbuf_r+0x8c>
  404fee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  404ff2:	6923      	ldr	r3, [r4, #16]
  404ff4:	b291      	uxth	r1, r2
  404ff6:	e7bd      	b.n	404f74 <__swbuf_r+0x24>
  404ff8:	f7fd ff22 	bl	402e40 <__sinit>
  404ffc:	e7b0      	b.n	404f60 <__swbuf_r+0x10>
  404ffe:	bf00      	nop

00405000 <_wcrtomb_r>:
  405000:	b5f0      	push	{r4, r5, r6, r7, lr}
  405002:	4606      	mov	r6, r0
  405004:	b085      	sub	sp, #20
  405006:	461f      	mov	r7, r3
  405008:	b189      	cbz	r1, 40502e <_wcrtomb_r+0x2e>
  40500a:	4c10      	ldr	r4, [pc, #64]	; (40504c <_wcrtomb_r+0x4c>)
  40500c:	4d10      	ldr	r5, [pc, #64]	; (405050 <_wcrtomb_r+0x50>)
  40500e:	6824      	ldr	r4, [r4, #0]
  405010:	6b64      	ldr	r4, [r4, #52]	; 0x34
  405012:	2c00      	cmp	r4, #0
  405014:	bf08      	it	eq
  405016:	462c      	moveq	r4, r5
  405018:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40501c:	47a0      	blx	r4
  40501e:	1c43      	adds	r3, r0, #1
  405020:	d103      	bne.n	40502a <_wcrtomb_r+0x2a>
  405022:	2200      	movs	r2, #0
  405024:	238a      	movs	r3, #138	; 0x8a
  405026:	603a      	str	r2, [r7, #0]
  405028:	6033      	str	r3, [r6, #0]
  40502a:	b005      	add	sp, #20
  40502c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40502e:	460c      	mov	r4, r1
  405030:	4906      	ldr	r1, [pc, #24]	; (40504c <_wcrtomb_r+0x4c>)
  405032:	4a07      	ldr	r2, [pc, #28]	; (405050 <_wcrtomb_r+0x50>)
  405034:	6809      	ldr	r1, [r1, #0]
  405036:	6b49      	ldr	r1, [r1, #52]	; 0x34
  405038:	2900      	cmp	r1, #0
  40503a:	bf08      	it	eq
  40503c:	4611      	moveq	r1, r2
  40503e:	4622      	mov	r2, r4
  405040:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  405044:	a901      	add	r1, sp, #4
  405046:	47a0      	blx	r4
  405048:	e7e9      	b.n	40501e <_wcrtomb_r+0x1e>
  40504a:	bf00      	nop
  40504c:	20400018 	.word	0x20400018
  405050:	2040044c 	.word	0x2040044c

00405054 <__ascii_wctomb>:
  405054:	b121      	cbz	r1, 405060 <__ascii_wctomb+0xc>
  405056:	2aff      	cmp	r2, #255	; 0xff
  405058:	d804      	bhi.n	405064 <__ascii_wctomb+0x10>
  40505a:	700a      	strb	r2, [r1, #0]
  40505c:	2001      	movs	r0, #1
  40505e:	4770      	bx	lr
  405060:	4608      	mov	r0, r1
  405062:	4770      	bx	lr
  405064:	238a      	movs	r3, #138	; 0x8a
  405066:	6003      	str	r3, [r0, #0]
  405068:	f04f 30ff 	mov.w	r0, #4294967295
  40506c:	4770      	bx	lr
  40506e:	bf00      	nop

00405070 <_write_r>:
  405070:	b570      	push	{r4, r5, r6, lr}
  405072:	460d      	mov	r5, r1
  405074:	4c08      	ldr	r4, [pc, #32]	; (405098 <_write_r+0x28>)
  405076:	4611      	mov	r1, r2
  405078:	4606      	mov	r6, r0
  40507a:	461a      	mov	r2, r3
  40507c:	4628      	mov	r0, r5
  40507e:	2300      	movs	r3, #0
  405080:	6023      	str	r3, [r4, #0]
  405082:	f7fb fafb 	bl	40067c <_write>
  405086:	1c43      	adds	r3, r0, #1
  405088:	d000      	beq.n	40508c <_write_r+0x1c>
  40508a:	bd70      	pop	{r4, r5, r6, pc}
  40508c:	6823      	ldr	r3, [r4, #0]
  40508e:	2b00      	cmp	r3, #0
  405090:	d0fb      	beq.n	40508a <_write_r+0x1a>
  405092:	6033      	str	r3, [r6, #0]
  405094:	bd70      	pop	{r4, r5, r6, pc}
  405096:	bf00      	nop
  405098:	20400afc 	.word	0x20400afc

0040509c <__register_exitproc>:
  40509c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4050a0:	4d2c      	ldr	r5, [pc, #176]	; (405154 <__register_exitproc+0xb8>)
  4050a2:	4606      	mov	r6, r0
  4050a4:	6828      	ldr	r0, [r5, #0]
  4050a6:	4698      	mov	r8, r3
  4050a8:	460f      	mov	r7, r1
  4050aa:	4691      	mov	r9, r2
  4050ac:	f7fe fbb0 	bl	403810 <__retarget_lock_acquire_recursive>
  4050b0:	4b29      	ldr	r3, [pc, #164]	; (405158 <__register_exitproc+0xbc>)
  4050b2:	681c      	ldr	r4, [r3, #0]
  4050b4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4050b8:	2b00      	cmp	r3, #0
  4050ba:	d03e      	beq.n	40513a <__register_exitproc+0x9e>
  4050bc:	685a      	ldr	r2, [r3, #4]
  4050be:	2a1f      	cmp	r2, #31
  4050c0:	dc1c      	bgt.n	4050fc <__register_exitproc+0x60>
  4050c2:	f102 0e01 	add.w	lr, r2, #1
  4050c6:	b176      	cbz	r6, 4050e6 <__register_exitproc+0x4a>
  4050c8:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4050cc:	2401      	movs	r4, #1
  4050ce:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4050d2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4050d6:	4094      	lsls	r4, r2
  4050d8:	4320      	orrs	r0, r4
  4050da:	2e02      	cmp	r6, #2
  4050dc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4050e0:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4050e4:	d023      	beq.n	40512e <__register_exitproc+0x92>
  4050e6:	3202      	adds	r2, #2
  4050e8:	f8c3 e004 	str.w	lr, [r3, #4]
  4050ec:	6828      	ldr	r0, [r5, #0]
  4050ee:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4050f2:	f7fe fb8f 	bl	403814 <__retarget_lock_release_recursive>
  4050f6:	2000      	movs	r0, #0
  4050f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4050fc:	4b17      	ldr	r3, [pc, #92]	; (40515c <__register_exitproc+0xc0>)
  4050fe:	b30b      	cbz	r3, 405144 <__register_exitproc+0xa8>
  405100:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405104:	f7fe fc00 	bl	403908 <malloc>
  405108:	4603      	mov	r3, r0
  40510a:	b1d8      	cbz	r0, 405144 <__register_exitproc+0xa8>
  40510c:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405110:	6002      	str	r2, [r0, #0]
  405112:	2100      	movs	r1, #0
  405114:	6041      	str	r1, [r0, #4]
  405116:	460a      	mov	r2, r1
  405118:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  40511c:	f04f 0e01 	mov.w	lr, #1
  405120:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405124:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405128:	2e00      	cmp	r6, #0
  40512a:	d0dc      	beq.n	4050e6 <__register_exitproc+0x4a>
  40512c:	e7cc      	b.n	4050c8 <__register_exitproc+0x2c>
  40512e:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  405132:	430c      	orrs	r4, r1
  405134:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405138:	e7d5      	b.n	4050e6 <__register_exitproc+0x4a>
  40513a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40513e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  405142:	e7bb      	b.n	4050bc <__register_exitproc+0x20>
  405144:	6828      	ldr	r0, [r5, #0]
  405146:	f7fe fb65 	bl	403814 <__retarget_lock_release_recursive>
  40514a:	f04f 30ff 	mov.w	r0, #4294967295
  40514e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405152:	bf00      	nop
  405154:	20400448 	.word	0x20400448
  405158:	0040567c 	.word	0x0040567c
  40515c:	00403909 	.word	0x00403909

00405160 <_close_r>:
  405160:	b538      	push	{r3, r4, r5, lr}
  405162:	4c07      	ldr	r4, [pc, #28]	; (405180 <_close_r+0x20>)
  405164:	2300      	movs	r3, #0
  405166:	4605      	mov	r5, r0
  405168:	4608      	mov	r0, r1
  40516a:	6023      	str	r3, [r4, #0]
  40516c:	f7fb ff1c 	bl	400fa8 <_close>
  405170:	1c43      	adds	r3, r0, #1
  405172:	d000      	beq.n	405176 <_close_r+0x16>
  405174:	bd38      	pop	{r3, r4, r5, pc}
  405176:	6823      	ldr	r3, [r4, #0]
  405178:	2b00      	cmp	r3, #0
  40517a:	d0fb      	beq.n	405174 <_close_r+0x14>
  40517c:	602b      	str	r3, [r5, #0]
  40517e:	bd38      	pop	{r3, r4, r5, pc}
  405180:	20400afc 	.word	0x20400afc

00405184 <_fclose_r>:
  405184:	b570      	push	{r4, r5, r6, lr}
  405186:	b159      	cbz	r1, 4051a0 <_fclose_r+0x1c>
  405188:	4605      	mov	r5, r0
  40518a:	460c      	mov	r4, r1
  40518c:	b110      	cbz	r0, 405194 <_fclose_r+0x10>
  40518e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405190:	2b00      	cmp	r3, #0
  405192:	d03c      	beq.n	40520e <_fclose_r+0x8a>
  405194:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405196:	07d8      	lsls	r0, r3, #31
  405198:	d505      	bpl.n	4051a6 <_fclose_r+0x22>
  40519a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40519e:	b92b      	cbnz	r3, 4051ac <_fclose_r+0x28>
  4051a0:	2600      	movs	r6, #0
  4051a2:	4630      	mov	r0, r6
  4051a4:	bd70      	pop	{r4, r5, r6, pc}
  4051a6:	89a3      	ldrh	r3, [r4, #12]
  4051a8:	0599      	lsls	r1, r3, #22
  4051aa:	d53c      	bpl.n	405226 <_fclose_r+0xa2>
  4051ac:	4621      	mov	r1, r4
  4051ae:	4628      	mov	r0, r5
  4051b0:	f7fd fd3c 	bl	402c2c <__sflush_r>
  4051b4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  4051b6:	4606      	mov	r6, r0
  4051b8:	b133      	cbz	r3, 4051c8 <_fclose_r+0x44>
  4051ba:	69e1      	ldr	r1, [r4, #28]
  4051bc:	4628      	mov	r0, r5
  4051be:	4798      	blx	r3
  4051c0:	2800      	cmp	r0, #0
  4051c2:	bfb8      	it	lt
  4051c4:	f04f 36ff 	movlt.w	r6, #4294967295
  4051c8:	89a3      	ldrh	r3, [r4, #12]
  4051ca:	061a      	lsls	r2, r3, #24
  4051cc:	d422      	bmi.n	405214 <_fclose_r+0x90>
  4051ce:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4051d0:	b141      	cbz	r1, 4051e4 <_fclose_r+0x60>
  4051d2:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4051d6:	4299      	cmp	r1, r3
  4051d8:	d002      	beq.n	4051e0 <_fclose_r+0x5c>
  4051da:	4628      	mov	r0, r5
  4051dc:	f7fe f838 	bl	403250 <_free_r>
  4051e0:	2300      	movs	r3, #0
  4051e2:	6323      	str	r3, [r4, #48]	; 0x30
  4051e4:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4051e6:	b121      	cbz	r1, 4051f2 <_fclose_r+0x6e>
  4051e8:	4628      	mov	r0, r5
  4051ea:	f7fe f831 	bl	403250 <_free_r>
  4051ee:	2300      	movs	r3, #0
  4051f0:	6463      	str	r3, [r4, #68]	; 0x44
  4051f2:	f7fd fe51 	bl	402e98 <__sfp_lock_acquire>
  4051f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4051f8:	2200      	movs	r2, #0
  4051fa:	07db      	lsls	r3, r3, #31
  4051fc:	81a2      	strh	r2, [r4, #12]
  4051fe:	d50e      	bpl.n	40521e <_fclose_r+0x9a>
  405200:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405202:	f7fe fb03 	bl	40380c <__retarget_lock_close_recursive>
  405206:	f7fd fe4d 	bl	402ea4 <__sfp_lock_release>
  40520a:	4630      	mov	r0, r6
  40520c:	bd70      	pop	{r4, r5, r6, pc}
  40520e:	f7fd fe17 	bl	402e40 <__sinit>
  405212:	e7bf      	b.n	405194 <_fclose_r+0x10>
  405214:	6921      	ldr	r1, [r4, #16]
  405216:	4628      	mov	r0, r5
  405218:	f7fe f81a 	bl	403250 <_free_r>
  40521c:	e7d7      	b.n	4051ce <_fclose_r+0x4a>
  40521e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405220:	f7fe faf8 	bl	403814 <__retarget_lock_release_recursive>
  405224:	e7ec      	b.n	405200 <_fclose_r+0x7c>
  405226:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405228:	f7fe faf2 	bl	403810 <__retarget_lock_acquire_recursive>
  40522c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405230:	2b00      	cmp	r3, #0
  405232:	d1bb      	bne.n	4051ac <_fclose_r+0x28>
  405234:	6e66      	ldr	r6, [r4, #100]	; 0x64
  405236:	f016 0601 	ands.w	r6, r6, #1
  40523a:	d1b1      	bne.n	4051a0 <_fclose_r+0x1c>
  40523c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40523e:	f7fe fae9 	bl	403814 <__retarget_lock_release_recursive>
  405242:	4630      	mov	r0, r6
  405244:	bd70      	pop	{r4, r5, r6, pc}
  405246:	bf00      	nop

00405248 <_fstat_r>:
  405248:	b538      	push	{r3, r4, r5, lr}
  40524a:	460b      	mov	r3, r1
  40524c:	4c07      	ldr	r4, [pc, #28]	; (40526c <_fstat_r+0x24>)
  40524e:	4605      	mov	r5, r0
  405250:	4611      	mov	r1, r2
  405252:	4618      	mov	r0, r3
  405254:	2300      	movs	r3, #0
  405256:	6023      	str	r3, [r4, #0]
  405258:	f7fb fea9 	bl	400fae <_fstat>
  40525c:	1c43      	adds	r3, r0, #1
  40525e:	d000      	beq.n	405262 <_fstat_r+0x1a>
  405260:	bd38      	pop	{r3, r4, r5, pc}
  405262:	6823      	ldr	r3, [r4, #0]
  405264:	2b00      	cmp	r3, #0
  405266:	d0fb      	beq.n	405260 <_fstat_r+0x18>
  405268:	602b      	str	r3, [r5, #0]
  40526a:	bd38      	pop	{r3, r4, r5, pc}
  40526c:	20400afc 	.word	0x20400afc

00405270 <_isatty_r>:
  405270:	b538      	push	{r3, r4, r5, lr}
  405272:	4c07      	ldr	r4, [pc, #28]	; (405290 <_isatty_r+0x20>)
  405274:	2300      	movs	r3, #0
  405276:	4605      	mov	r5, r0
  405278:	4608      	mov	r0, r1
  40527a:	6023      	str	r3, [r4, #0]
  40527c:	f7fb fe9c 	bl	400fb8 <_isatty>
  405280:	1c43      	adds	r3, r0, #1
  405282:	d000      	beq.n	405286 <_isatty_r+0x16>
  405284:	bd38      	pop	{r3, r4, r5, pc}
  405286:	6823      	ldr	r3, [r4, #0]
  405288:	2b00      	cmp	r3, #0
  40528a:	d0fb      	beq.n	405284 <_isatty_r+0x14>
  40528c:	602b      	str	r3, [r5, #0]
  40528e:	bd38      	pop	{r3, r4, r5, pc}
  405290:	20400afc 	.word	0x20400afc

00405294 <_lseek_r>:
  405294:	b570      	push	{r4, r5, r6, lr}
  405296:	460d      	mov	r5, r1
  405298:	4c08      	ldr	r4, [pc, #32]	; (4052bc <_lseek_r+0x28>)
  40529a:	4611      	mov	r1, r2
  40529c:	4606      	mov	r6, r0
  40529e:	461a      	mov	r2, r3
  4052a0:	4628      	mov	r0, r5
  4052a2:	2300      	movs	r3, #0
  4052a4:	6023      	str	r3, [r4, #0]
  4052a6:	f7fb fe89 	bl	400fbc <_lseek>
  4052aa:	1c43      	adds	r3, r0, #1
  4052ac:	d000      	beq.n	4052b0 <_lseek_r+0x1c>
  4052ae:	bd70      	pop	{r4, r5, r6, pc}
  4052b0:	6823      	ldr	r3, [r4, #0]
  4052b2:	2b00      	cmp	r3, #0
  4052b4:	d0fb      	beq.n	4052ae <_lseek_r+0x1a>
  4052b6:	6033      	str	r3, [r6, #0]
  4052b8:	bd70      	pop	{r4, r5, r6, pc}
  4052ba:	bf00      	nop
  4052bc:	20400afc 	.word	0x20400afc

004052c0 <_read_r>:
  4052c0:	b570      	push	{r4, r5, r6, lr}
  4052c2:	460d      	mov	r5, r1
  4052c4:	4c08      	ldr	r4, [pc, #32]	; (4052e8 <_read_r+0x28>)
  4052c6:	4611      	mov	r1, r2
  4052c8:	4606      	mov	r6, r0
  4052ca:	461a      	mov	r2, r3
  4052cc:	4628      	mov	r0, r5
  4052ce:	2300      	movs	r3, #0
  4052d0:	6023      	str	r3, [r4, #0]
  4052d2:	f7fb f9b5 	bl	400640 <_read>
  4052d6:	1c43      	adds	r3, r0, #1
  4052d8:	d000      	beq.n	4052dc <_read_r+0x1c>
  4052da:	bd70      	pop	{r4, r5, r6, pc}
  4052dc:	6823      	ldr	r3, [r4, #0]
  4052de:	2b00      	cmp	r3, #0
  4052e0:	d0fb      	beq.n	4052da <_read_r+0x1a>
  4052e2:	6033      	str	r3, [r6, #0]
  4052e4:	bd70      	pop	{r4, r5, r6, pc}
  4052e6:	bf00      	nop
  4052e8:	20400afc 	.word	0x20400afc

004052ec <__aeabi_uldivmod>:
  4052ec:	b953      	cbnz	r3, 405304 <__aeabi_uldivmod+0x18>
  4052ee:	b94a      	cbnz	r2, 405304 <__aeabi_uldivmod+0x18>
  4052f0:	2900      	cmp	r1, #0
  4052f2:	bf08      	it	eq
  4052f4:	2800      	cmpeq	r0, #0
  4052f6:	bf1c      	itt	ne
  4052f8:	f04f 31ff 	movne.w	r1, #4294967295
  4052fc:	f04f 30ff 	movne.w	r0, #4294967295
  405300:	f000 b97a 	b.w	4055f8 <__aeabi_idiv0>
  405304:	f1ad 0c08 	sub.w	ip, sp, #8
  405308:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40530c:	f000 f806 	bl	40531c <__udivmoddi4>
  405310:	f8dd e004 	ldr.w	lr, [sp, #4]
  405314:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405318:	b004      	add	sp, #16
  40531a:	4770      	bx	lr

0040531c <__udivmoddi4>:
  40531c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405320:	468c      	mov	ip, r1
  405322:	460d      	mov	r5, r1
  405324:	4604      	mov	r4, r0
  405326:	9e08      	ldr	r6, [sp, #32]
  405328:	2b00      	cmp	r3, #0
  40532a:	d151      	bne.n	4053d0 <__udivmoddi4+0xb4>
  40532c:	428a      	cmp	r2, r1
  40532e:	4617      	mov	r7, r2
  405330:	d96d      	bls.n	40540e <__udivmoddi4+0xf2>
  405332:	fab2 fe82 	clz	lr, r2
  405336:	f1be 0f00 	cmp.w	lr, #0
  40533a:	d00b      	beq.n	405354 <__udivmoddi4+0x38>
  40533c:	f1ce 0c20 	rsb	ip, lr, #32
  405340:	fa01 f50e 	lsl.w	r5, r1, lr
  405344:	fa20 fc0c 	lsr.w	ip, r0, ip
  405348:	fa02 f70e 	lsl.w	r7, r2, lr
  40534c:	ea4c 0c05 	orr.w	ip, ip, r5
  405350:	fa00 f40e 	lsl.w	r4, r0, lr
  405354:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405358:	0c25      	lsrs	r5, r4, #16
  40535a:	fbbc f8fa 	udiv	r8, ip, sl
  40535e:	fa1f f987 	uxth.w	r9, r7
  405362:	fb0a cc18 	mls	ip, sl, r8, ip
  405366:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40536a:	fb08 f309 	mul.w	r3, r8, r9
  40536e:	42ab      	cmp	r3, r5
  405370:	d90a      	bls.n	405388 <__udivmoddi4+0x6c>
  405372:	19ed      	adds	r5, r5, r7
  405374:	f108 32ff 	add.w	r2, r8, #4294967295
  405378:	f080 8123 	bcs.w	4055c2 <__udivmoddi4+0x2a6>
  40537c:	42ab      	cmp	r3, r5
  40537e:	f240 8120 	bls.w	4055c2 <__udivmoddi4+0x2a6>
  405382:	f1a8 0802 	sub.w	r8, r8, #2
  405386:	443d      	add	r5, r7
  405388:	1aed      	subs	r5, r5, r3
  40538a:	b2a4      	uxth	r4, r4
  40538c:	fbb5 f0fa 	udiv	r0, r5, sl
  405390:	fb0a 5510 	mls	r5, sl, r0, r5
  405394:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  405398:	fb00 f909 	mul.w	r9, r0, r9
  40539c:	45a1      	cmp	r9, r4
  40539e:	d909      	bls.n	4053b4 <__udivmoddi4+0x98>
  4053a0:	19e4      	adds	r4, r4, r7
  4053a2:	f100 33ff 	add.w	r3, r0, #4294967295
  4053a6:	f080 810a 	bcs.w	4055be <__udivmoddi4+0x2a2>
  4053aa:	45a1      	cmp	r9, r4
  4053ac:	f240 8107 	bls.w	4055be <__udivmoddi4+0x2a2>
  4053b0:	3802      	subs	r0, #2
  4053b2:	443c      	add	r4, r7
  4053b4:	eba4 0409 	sub.w	r4, r4, r9
  4053b8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4053bc:	2100      	movs	r1, #0
  4053be:	2e00      	cmp	r6, #0
  4053c0:	d061      	beq.n	405486 <__udivmoddi4+0x16a>
  4053c2:	fa24 f40e 	lsr.w	r4, r4, lr
  4053c6:	2300      	movs	r3, #0
  4053c8:	6034      	str	r4, [r6, #0]
  4053ca:	6073      	str	r3, [r6, #4]
  4053cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4053d0:	428b      	cmp	r3, r1
  4053d2:	d907      	bls.n	4053e4 <__udivmoddi4+0xc8>
  4053d4:	2e00      	cmp	r6, #0
  4053d6:	d054      	beq.n	405482 <__udivmoddi4+0x166>
  4053d8:	2100      	movs	r1, #0
  4053da:	e886 0021 	stmia.w	r6, {r0, r5}
  4053de:	4608      	mov	r0, r1
  4053e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4053e4:	fab3 f183 	clz	r1, r3
  4053e8:	2900      	cmp	r1, #0
  4053ea:	f040 808e 	bne.w	40550a <__udivmoddi4+0x1ee>
  4053ee:	42ab      	cmp	r3, r5
  4053f0:	d302      	bcc.n	4053f8 <__udivmoddi4+0xdc>
  4053f2:	4282      	cmp	r2, r0
  4053f4:	f200 80fa 	bhi.w	4055ec <__udivmoddi4+0x2d0>
  4053f8:	1a84      	subs	r4, r0, r2
  4053fa:	eb65 0503 	sbc.w	r5, r5, r3
  4053fe:	2001      	movs	r0, #1
  405400:	46ac      	mov	ip, r5
  405402:	2e00      	cmp	r6, #0
  405404:	d03f      	beq.n	405486 <__udivmoddi4+0x16a>
  405406:	e886 1010 	stmia.w	r6, {r4, ip}
  40540a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40540e:	b912      	cbnz	r2, 405416 <__udivmoddi4+0xfa>
  405410:	2701      	movs	r7, #1
  405412:	fbb7 f7f2 	udiv	r7, r7, r2
  405416:	fab7 fe87 	clz	lr, r7
  40541a:	f1be 0f00 	cmp.w	lr, #0
  40541e:	d134      	bne.n	40548a <__udivmoddi4+0x16e>
  405420:	1beb      	subs	r3, r5, r7
  405422:	0c3a      	lsrs	r2, r7, #16
  405424:	fa1f fc87 	uxth.w	ip, r7
  405428:	2101      	movs	r1, #1
  40542a:	fbb3 f8f2 	udiv	r8, r3, r2
  40542e:	0c25      	lsrs	r5, r4, #16
  405430:	fb02 3318 	mls	r3, r2, r8, r3
  405434:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405438:	fb0c f308 	mul.w	r3, ip, r8
  40543c:	42ab      	cmp	r3, r5
  40543e:	d907      	bls.n	405450 <__udivmoddi4+0x134>
  405440:	19ed      	adds	r5, r5, r7
  405442:	f108 30ff 	add.w	r0, r8, #4294967295
  405446:	d202      	bcs.n	40544e <__udivmoddi4+0x132>
  405448:	42ab      	cmp	r3, r5
  40544a:	f200 80d1 	bhi.w	4055f0 <__udivmoddi4+0x2d4>
  40544e:	4680      	mov	r8, r0
  405450:	1aed      	subs	r5, r5, r3
  405452:	b2a3      	uxth	r3, r4
  405454:	fbb5 f0f2 	udiv	r0, r5, r2
  405458:	fb02 5510 	mls	r5, r2, r0, r5
  40545c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  405460:	fb0c fc00 	mul.w	ip, ip, r0
  405464:	45a4      	cmp	ip, r4
  405466:	d907      	bls.n	405478 <__udivmoddi4+0x15c>
  405468:	19e4      	adds	r4, r4, r7
  40546a:	f100 33ff 	add.w	r3, r0, #4294967295
  40546e:	d202      	bcs.n	405476 <__udivmoddi4+0x15a>
  405470:	45a4      	cmp	ip, r4
  405472:	f200 80b8 	bhi.w	4055e6 <__udivmoddi4+0x2ca>
  405476:	4618      	mov	r0, r3
  405478:	eba4 040c 	sub.w	r4, r4, ip
  40547c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405480:	e79d      	b.n	4053be <__udivmoddi4+0xa2>
  405482:	4631      	mov	r1, r6
  405484:	4630      	mov	r0, r6
  405486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40548a:	f1ce 0420 	rsb	r4, lr, #32
  40548e:	fa05 f30e 	lsl.w	r3, r5, lr
  405492:	fa07 f70e 	lsl.w	r7, r7, lr
  405496:	fa20 f804 	lsr.w	r8, r0, r4
  40549a:	0c3a      	lsrs	r2, r7, #16
  40549c:	fa25 f404 	lsr.w	r4, r5, r4
  4054a0:	ea48 0803 	orr.w	r8, r8, r3
  4054a4:	fbb4 f1f2 	udiv	r1, r4, r2
  4054a8:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4054ac:	fb02 4411 	mls	r4, r2, r1, r4
  4054b0:	fa1f fc87 	uxth.w	ip, r7
  4054b4:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4054b8:	fb01 f30c 	mul.w	r3, r1, ip
  4054bc:	42ab      	cmp	r3, r5
  4054be:	fa00 f40e 	lsl.w	r4, r0, lr
  4054c2:	d909      	bls.n	4054d8 <__udivmoddi4+0x1bc>
  4054c4:	19ed      	adds	r5, r5, r7
  4054c6:	f101 30ff 	add.w	r0, r1, #4294967295
  4054ca:	f080 808a 	bcs.w	4055e2 <__udivmoddi4+0x2c6>
  4054ce:	42ab      	cmp	r3, r5
  4054d0:	f240 8087 	bls.w	4055e2 <__udivmoddi4+0x2c6>
  4054d4:	3902      	subs	r1, #2
  4054d6:	443d      	add	r5, r7
  4054d8:	1aeb      	subs	r3, r5, r3
  4054da:	fa1f f588 	uxth.w	r5, r8
  4054de:	fbb3 f0f2 	udiv	r0, r3, r2
  4054e2:	fb02 3310 	mls	r3, r2, r0, r3
  4054e6:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4054ea:	fb00 f30c 	mul.w	r3, r0, ip
  4054ee:	42ab      	cmp	r3, r5
  4054f0:	d907      	bls.n	405502 <__udivmoddi4+0x1e6>
  4054f2:	19ed      	adds	r5, r5, r7
  4054f4:	f100 38ff 	add.w	r8, r0, #4294967295
  4054f8:	d26f      	bcs.n	4055da <__udivmoddi4+0x2be>
  4054fa:	42ab      	cmp	r3, r5
  4054fc:	d96d      	bls.n	4055da <__udivmoddi4+0x2be>
  4054fe:	3802      	subs	r0, #2
  405500:	443d      	add	r5, r7
  405502:	1aeb      	subs	r3, r5, r3
  405504:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  405508:	e78f      	b.n	40542a <__udivmoddi4+0x10e>
  40550a:	f1c1 0720 	rsb	r7, r1, #32
  40550e:	fa22 f807 	lsr.w	r8, r2, r7
  405512:	408b      	lsls	r3, r1
  405514:	fa05 f401 	lsl.w	r4, r5, r1
  405518:	ea48 0303 	orr.w	r3, r8, r3
  40551c:	fa20 fe07 	lsr.w	lr, r0, r7
  405520:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  405524:	40fd      	lsrs	r5, r7
  405526:	ea4e 0e04 	orr.w	lr, lr, r4
  40552a:	fbb5 f9fc 	udiv	r9, r5, ip
  40552e:	ea4f 441e 	mov.w	r4, lr, lsr #16
  405532:	fb0c 5519 	mls	r5, ip, r9, r5
  405536:	fa1f f883 	uxth.w	r8, r3
  40553a:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40553e:	fb09 f408 	mul.w	r4, r9, r8
  405542:	42ac      	cmp	r4, r5
  405544:	fa02 f201 	lsl.w	r2, r2, r1
  405548:	fa00 fa01 	lsl.w	sl, r0, r1
  40554c:	d908      	bls.n	405560 <__udivmoddi4+0x244>
  40554e:	18ed      	adds	r5, r5, r3
  405550:	f109 30ff 	add.w	r0, r9, #4294967295
  405554:	d243      	bcs.n	4055de <__udivmoddi4+0x2c2>
  405556:	42ac      	cmp	r4, r5
  405558:	d941      	bls.n	4055de <__udivmoddi4+0x2c2>
  40555a:	f1a9 0902 	sub.w	r9, r9, #2
  40555e:	441d      	add	r5, r3
  405560:	1b2d      	subs	r5, r5, r4
  405562:	fa1f fe8e 	uxth.w	lr, lr
  405566:	fbb5 f0fc 	udiv	r0, r5, ip
  40556a:	fb0c 5510 	mls	r5, ip, r0, r5
  40556e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  405572:	fb00 f808 	mul.w	r8, r0, r8
  405576:	45a0      	cmp	r8, r4
  405578:	d907      	bls.n	40558a <__udivmoddi4+0x26e>
  40557a:	18e4      	adds	r4, r4, r3
  40557c:	f100 35ff 	add.w	r5, r0, #4294967295
  405580:	d229      	bcs.n	4055d6 <__udivmoddi4+0x2ba>
  405582:	45a0      	cmp	r8, r4
  405584:	d927      	bls.n	4055d6 <__udivmoddi4+0x2ba>
  405586:	3802      	subs	r0, #2
  405588:	441c      	add	r4, r3
  40558a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40558e:	eba4 0408 	sub.w	r4, r4, r8
  405592:	fba0 8902 	umull	r8, r9, r0, r2
  405596:	454c      	cmp	r4, r9
  405598:	46c6      	mov	lr, r8
  40559a:	464d      	mov	r5, r9
  40559c:	d315      	bcc.n	4055ca <__udivmoddi4+0x2ae>
  40559e:	d012      	beq.n	4055c6 <__udivmoddi4+0x2aa>
  4055a0:	b156      	cbz	r6, 4055b8 <__udivmoddi4+0x29c>
  4055a2:	ebba 030e 	subs.w	r3, sl, lr
  4055a6:	eb64 0405 	sbc.w	r4, r4, r5
  4055aa:	fa04 f707 	lsl.w	r7, r4, r7
  4055ae:	40cb      	lsrs	r3, r1
  4055b0:	431f      	orrs	r7, r3
  4055b2:	40cc      	lsrs	r4, r1
  4055b4:	6037      	str	r7, [r6, #0]
  4055b6:	6074      	str	r4, [r6, #4]
  4055b8:	2100      	movs	r1, #0
  4055ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4055be:	4618      	mov	r0, r3
  4055c0:	e6f8      	b.n	4053b4 <__udivmoddi4+0x98>
  4055c2:	4690      	mov	r8, r2
  4055c4:	e6e0      	b.n	405388 <__udivmoddi4+0x6c>
  4055c6:	45c2      	cmp	sl, r8
  4055c8:	d2ea      	bcs.n	4055a0 <__udivmoddi4+0x284>
  4055ca:	ebb8 0e02 	subs.w	lr, r8, r2
  4055ce:	eb69 0503 	sbc.w	r5, r9, r3
  4055d2:	3801      	subs	r0, #1
  4055d4:	e7e4      	b.n	4055a0 <__udivmoddi4+0x284>
  4055d6:	4628      	mov	r0, r5
  4055d8:	e7d7      	b.n	40558a <__udivmoddi4+0x26e>
  4055da:	4640      	mov	r0, r8
  4055dc:	e791      	b.n	405502 <__udivmoddi4+0x1e6>
  4055de:	4681      	mov	r9, r0
  4055e0:	e7be      	b.n	405560 <__udivmoddi4+0x244>
  4055e2:	4601      	mov	r1, r0
  4055e4:	e778      	b.n	4054d8 <__udivmoddi4+0x1bc>
  4055e6:	3802      	subs	r0, #2
  4055e8:	443c      	add	r4, r7
  4055ea:	e745      	b.n	405478 <__udivmoddi4+0x15c>
  4055ec:	4608      	mov	r0, r1
  4055ee:	e708      	b.n	405402 <__udivmoddi4+0xe6>
  4055f0:	f1a8 0802 	sub.w	r8, r8, #2
  4055f4:	443d      	add	r5, r7
  4055f6:	e72b      	b.n	405450 <__udivmoddi4+0x134>

004055f8 <__aeabi_idiv0>:
  4055f8:	4770      	bx	lr
  4055fa:	bf00      	nop
  4055fc:	65746e45 	.word	0x65746e45
  405600:	65742072 	.word	0x65742072
  405604:	74207478 	.word	0x74207478
  405608:	6e65206f 	.word	0x6e65206f
  40560c:	70797263 	.word	0x70797263
  405610:	31282074 	.word	0x31282074
  405614:	68632036 	.word	0x68632036
  405618:	63617261 	.word	0x63617261
  40561c:	73726574 	.word	0x73726574
  405620:	78616d20 	.word	0x78616d20
  405624:	00203a29 	.word	0x00203a29
  405628:	73363125 	.word	0x73363125
  40562c:	00000000 	.word	0x00000000
  405630:	20756f59 	.word	0x20756f59
  405634:	65746e65 	.word	0x65746e65
  405638:	3a646572 	.word	0x3a646572
  40563c:	0a732520 	.word	0x0a732520
  405640:	00000000 	.word	0x00000000
  405644:	72636e45 	.word	0x72636e45
  405648:	65747079 	.word	0x65747079
  40564c:	61642064 	.word	0x61642064
  405650:	0a3a6174 	.word	0x0a3a6174
  405654:	00000000 	.word	0x00000000
  405658:	72636544 	.word	0x72636544
  40565c:	65747079 	.word	0x65747079
  405660:	65742064 	.word	0x65742064
  405664:	203a7478 	.word	0x203a7478
  405668:	000a7325 	.word	0x000a7325
  40566c:	78323025 	.word	0x78323025
  405670:	00000000 	.word	0x00000000
  405674:	0000000a 	.word	0x0000000a
  405678:	00000020 	.word	0x00000020

0040567c <_global_impure_ptr>:
  40567c:	20400020 33323130 37363534 42413938      .@ 0123456789AB
  40568c:	46454443 00000000 33323130 37363534     CDEF....01234567
  40569c:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  4056ac:	0000296c                                l)..

004056b0 <blanks.7217>:
  4056b0:	20202020 20202020 20202020 20202020                     

004056c0 <zeroes.7218>:
  4056c0:	30303030 30303030 30303030 30303030     0000000000000000

004056d0 <basefix.6805>:
  4056d0:	0001000a 00030002 00050004 00070006     ................
  4056e0:	00090008 000b000a 000d000c 000f000e     ................
  4056f0:	00000010 00000043 49534f50 00000058     ....C...POSIX...
  405700:	0000002e                                ....

00405704 <_ctype_>:
  405704:	20202000 20202020 28282020 20282828     .         ((((( 
  405714:	20202020 20202020 20202020 20202020                     
  405724:	10108820 10101010 10101010 10101010      ...............
  405734:	04040410 04040404 10040404 10101010     ................
  405744:	41411010 41414141 01010101 01010101     ..AAAAAA........
  405754:	01010101 01010101 01010101 10101010     ................
  405764:	42421010 42424242 02020202 02020202     ..BBBBBB........
  405774:	02020202 02020202 02020202 10101010     ................
  405784:	00000020 00000000 00000000 00000000      ...............
	...

00405808 <_init>:
  405808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40580a:	bf00      	nop
  40580c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40580e:	bc08      	pop	{r3}
  405810:	469e      	mov	lr, r3
  405812:	4770      	bx	lr

00405814 <__init_array_start>:
  405814:	00402c0d 	.word	0x00402c0d

00405818 <__frame_dummy_init_array_entry>:
  405818:	0040018d                                ..@.

0040581c <_fini>:
  40581c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40581e:	bf00      	nop
  405820:	bcf8      	pop	{r3, r4, r5, r6, r7}
  405822:	bc08      	pop	{r3}
  405824:	469e      	mov	lr, r3
  405826:	4770      	bx	lr

00405828 <__fini_array_start>:
  405828:	00400169 	.word	0x00400169
